{
	"id": 30944,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 30945,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 30946,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 30947,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30948,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30949,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 30950,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 30951,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30952,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 30953,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 30954,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 30955,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 30956,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 30957,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 30958,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 30959,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30947,
								30948,
								30949,
								30950,
								30951,
								30952,
								30953,
								30954,
								30955,
								30956,
								30957,
								30958,
								30959
							]
						}
					]
				}
			}
		},
		{
			"id": 30960,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30961,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30962,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30963,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 30964,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 30965,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 30964,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30966,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30967,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30968,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30969,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 30970,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30971,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30972,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30973,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30962,
								30966,
								30971
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30961
					]
				}
			]
		},
		{
			"id": 32353,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 32354,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32355,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32356,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32357,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32358,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`cookie_secret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32359,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32354,
						32355,
						32356,
						32357,
						32358,
						32359
					]
				}
			]
		},
		{
			"id": 30974,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31115,
					"name": "LinkMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31116,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31117,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31118,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31117,
										31118
									]
								}
							]
						}
					}
				},
				{
					"id": 31119,
					"name": "LinkWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31120,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31121,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31122,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31123,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31121,
										31122,
										31123
									]
								}
							]
						}
					}
				},
				{
					"id": 31124,
					"name": "BatchMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31129,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 31130,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31125,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31126,
									"name": "create",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31129,
											"name": "TCreate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 31127,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31130,
											"name": "TUpdate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 31128,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31126,
										31127,
										31128
									]
								}
							]
						}
					}
				},
				{
					"id": 31131,
					"name": "BatchMethodResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31140,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31132,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31133,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31140,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 31134,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31140,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 31135,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31136,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31137,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 31138,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31139,
													"name": "deleted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31137,
														31138,
														31139
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31133,
										31134,
										31135
									]
								}
							]
						}
					}
				},
				{
					"id": 31141,
					"name": "BatchWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31142,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 31143,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 31124,
						"typeArguments": [
							{
								"type": "reference",
								"target": 31142,
								"name": "TCreate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 31143,
								"name": "TUpdate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodRequest",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31144,
					"name": "BatchWorkflowOutput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31145,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 31131,
						"typeArguments": [
							{
								"type": "reference",
								"target": 31145,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30975,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 30976,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 30977,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 30976,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 30976,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 30977,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 30976,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 30981,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 30982,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30983,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 30984,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30982,
								30983,
								30984
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 30985,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 30985,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 30987,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30982,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 30988,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30983,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 30989,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30984,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 30986,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30987,
								30988,
								30989,
								30986
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30981,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30992,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 30993,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 31003,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 30994,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30995,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30996,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 30997,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30998,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignature": {
										"id": 30999,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"parameters": [
											{
												"id": 31000,
												"name": "K",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "ASC"
												},
												{
													"type": "literal",
													"value": "DESC"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 31001,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31002,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30993,
								30994,
								30995,
								30996,
								30997,
								31001,
								31002
							]
						}
					],
					"typeParameters": [
						{
							"id": 31003,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 31041,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 31042,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31043,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31044,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31045,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31046,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Field to sort items in the list by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31042,
								31043,
								31044,
								31045,
								31046
							]
						}
					]
				},
				{
					"id": 31047,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields included in the response if it's paginated."
							}
						]
					},
					"children": [
						{
							"id": 31048,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The limit applied on the retrieved items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31049,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items skipped before retrieving the list of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31050,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total count of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31048,
								31049,
								31050
							]
						}
					],
					"typeParameters": [
						{
							"id": 31051,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 32035,
							"name": "AdminProductCategoryListResponse"
						}
					]
				},
				{
					"id": 31052,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields returned in the response of a DELETE request."
							}
						]
					},
					"typeParameters": [
						{
							"id": 31057,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31053,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31054,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31055,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 31057,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 31056,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31054,
										31055,
										31056
									]
								}
							]
						}
					}
				},
				{
					"id": 31058,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 31059,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 32262,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 31060,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 31061,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 31062,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 31063,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 31064,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31061,
								31062,
								31063,
								31064
							]
						}
					]
				},
				{
					"id": 31065,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 31066,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31067,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31068,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31069,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31070,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31071,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31072,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31066,
								31067,
								31068,
								31069,
								31070,
								31071,
								31072
							]
						}
					]
				},
				{
					"id": 31073,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 31074,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31075,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31076,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31077,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31074,
								31075,
								31076,
								31077
							]
						}
					]
				},
				{
					"id": 31078,
					"name": "AddressPayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address fields used when creating/updating an address."
							}
						]
					},
					"children": [
						{
							"id": 31079,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "First name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31080,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Last name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31081,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Phone Number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31082,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31083,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Company"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31084,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 1"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31085,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 2"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31086,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "City"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31087,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The 2 character ISO code of the country in lower case"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31088,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Province"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31089,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Postal Code"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31079,
								31080,
								31081,
								31082,
								31083,
								31084,
								31085,
								31086,
								31087,
								31088,
								31089
							]
						}
					]
				},
				{
					"id": 31090,
					"name": "AddressCreatePayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address fields used when creating an address."
							}
						]
					},
					"children": [
						{
							"id": 31091,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "First name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31092,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Last name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31093,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Phone Number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31094,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 31095,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Company"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31096,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 1"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31097,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 2"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31098,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "City"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31099,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The 2 character ISO code of the country in lower case"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31100,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Province"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31101,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Postal Code"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31091,
								31092,
								31093,
								31094,
								31095,
								31096,
								31097,
								31098,
								31099,
								31100,
								31101
							]
						}
					]
				},
				{
					"id": 31102,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parameters that can be used to configure how data is retrieved."
							}
						]
					},
					"children": [
						{
							"id": 31103,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31104,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31103,
								31104
							]
						}
					]
				},
				{
					"id": 31105,
					"name": "FindPaginationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parameters that can be used to configure how a list of data is paginated."
							}
						]
					},
					"children": [
						{
							"id": 31106,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31107,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31106,
								31107
							]
						}
					]
				},
				{
					"id": 31110,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31111,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 31111,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 31110,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 31110,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 31111,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 31112,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31113,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 31113,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 31112,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 31112,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 31113,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 31146,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 31147,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31148,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31149,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31150,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31147,
								31148,
								31149,
								31150
							]
						}
					]
				},
				{
					"id": 31151,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 31152,
							"name": "store_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`store_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:8000`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: process.env.STORE_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: \"/vercel\\\\.app$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31153,
							"name": "admin_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`admin_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:7001`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: process.env.ADMIN_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31154,
							"name": "auth_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`auth_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
									},
									{
										"kind": "code",
										"text": "`/auth`"
									},
									{
										"kind": "text",
										"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:7001`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: process.env.AUTH_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31155,
							"name": "cookie_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A random string used to create cookie tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
									},
									{
										"kind": "code",
										"text": "`supersecret`"
									},
									{
										"kind": "text",
										"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    cookie_secret: process.env.COOKIE_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31156,
							"name": "jwt_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A random string used to create authentication tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
									},
									{
										"kind": "code",
										"text": "`supersecret`"
									},
									{
										"kind": "text",
										"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jwt_secret: process.env.JWT_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31157,
							"name": "database_database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If specified in "
									},
									{
										"kind": "code",
										"text": "`database_url`"
									},
									{
										"kind": "text",
										"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_database: process.env.DATABASE_DATABASE ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31158,
							"name": "database_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_url: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31159,
							"name": "database_schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_schema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31160,
							"name": "database_logging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
									},
									{
										"kind": "code",
										"text": "`all`"
									},
									{
										"kind": "text",
										"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
									},
									{
										"kind": "code",
										"text": "`query`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`schema`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`error`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`warn`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`info`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`log`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`migration`"
									},
									{
										"kind": "text",
										"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", meaning no database messages are logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_logging: [\n      \"query\", \"error\",\n    ],\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
									"qualifiedName": "LoggerOptions"
								},
								"name": "LoggerOptions",
								"package": "typeorm"
							}
						},
						{
							"id": 31162,
							"name": "database_extra",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_extra:\n      process.env.NODE_ENV !== \"development\"\n        ? { ssl: { rejectUnauthorized: false } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 31163,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31164,
													"name": "ssl",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configure support for TLS/SSL connection"
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 31165,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 31166,
																	"name": "rejectUnauthorized",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																			}
																		]
																	},
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		31166
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31164
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 31167,
							"name": "database_driver_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection for v2. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_driver_options:\n      process.env.NODE_ENV !== \"development\"\n        ? { connection: { ssl: { rejectUnauthorized: false } } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 31168,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31169,
													"name": "connection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 31170,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 31171,
																	"name": "ssl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure support for TLS/SSL connection"
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 31172,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 31173,
																					"name": "rejectUnauthorized",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																							}
																						]
																					},
																					"type": {
																						"type": "literal",
																						"value": false
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						31173
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		31171
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31169
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 31174,
							"name": "redis_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_url: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31175,
							"name": "redis_prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The prefix set on all keys stored in Redis. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_prefix: process.env.REDIS_PREFIX ||\n      \"medusa:\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31176,
							"name": "redis_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_options: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 31177,
							"name": "session_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    session_options: {\n      name: process.env.SESSION_NAME ||\n        \"custom\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32353,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31178,
							"name": "http_compression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
									},
									{
										"kind": "code",
										"text": "`\"x-no-compression\": true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    http_compression: {\n      enabled: true,\n      level: 6,\n      memLevel: 8,\n      threshold: 1024,\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 31146,
								"name": "HttpCompressionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31179,
							"name": "jobs_batch_size",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the number of staged jobs that are polled from the database. Default is "
									},
									{
										"kind": "code",
										"text": "`1000`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jobs_batch_size: 100\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31180,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's worker mode. Default is "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": ".\n\n- Use "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " to run the application in a single process.\n- Use "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": " to run the a worker process only.\n- Use "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": " to run the application server only.\n\nLearn more in [this guide](https://docs.medusajs.com/development/medusa-worker)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    worker_mode: \"shared\"\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31152,
								31153,
								31154,
								31155,
								31156,
								31157,
								31158,
								31159,
								31160,
								31162,
								31167,
								31174,
								31175,
								31176,
								31177,
								31178,
								31179,
								31180
							]
						}
					]
				},
				{
					"id": 31181,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa backend are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports an object having the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 31182,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": ": (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "plugins",
								"target": 31183,
								"tsLinkText": "plugins"
							},
							{
								"kind": "text",
								"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 31187,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 31188,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig,\n  plugins,\n  modules,\n  featureFlags,\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 31182,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 31151,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31183,
							"name": "plugins",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "On your Medusa backend, you can use [Plugins](https://docs.medusajs.com/development/plugins/overview) to add custom features or integrate third-party services.\nFor example, installing a plugin to use Stripe as a payment processor.\n\nAside from installing the plugin with NPM, you need to pass the plugin you installed into the "
									},
									{
										"kind": "code",
										"text": "`plugins`"
									},
									{
										"kind": "text",
										"text": " array defined in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe items in the array can either be:\n\n- A string, which is the name of the plugin to add. You can pass a plugin as a string if it doesn’t require any configurations.\n- An object having the following properties:\n    - "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": The name of the plugin.\n    - "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": An object that includes the plugin’s options. These options vary for each plugin, and you should refer to the plugin’s documentation for available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  plugins: [\n    `medusa-my-plugin-1`,\n    {\n      resolve: `medusa-my-plugin`,\n      options: {\n        apiKey: process.env.MY_API_KEY ||\n          `test`,\n      },\n    },\n    // ...\n  ],\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 31184,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 31185,
														"name": "resolve",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 31186,
														"name": "options",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "unknown"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															31185,
															31186
														]
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 31187,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the type of module. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled;\n2. Or a string value indicating the name of the module to be used for the module type. This can be used if the module does not require any options;\n3. Or an object having the following properties, but typically you would mainly use the "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " properties only:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the name of the module.\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": an object indicating the options to pass to the module. These options vary for each module, and you should refer to the module’s documentation for details on them.\n    3. "
									},
									{
										"kind": "code",
										"text": "`resources`"
									},
									{
										"kind": "text",
										"text": ": a string indicating whether the module shares the dependency container with the Medusa core. Its value can either be "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`isolated`"
									},
									{
										"kind": "text",
										"text": ". Refer to the [Modules documentation](https://docs.medusajs.com/development/modules/create#module-scope) for more details.\n    4. "
									},
									{
										"kind": "code",
										"text": "`alias`"
									},
									{
										"kind": "text",
										"text": ": a string indicating a unique alias to register the module under. Other modules can’t use the same alias.\n    5. "
									},
									{
										"kind": "code",
										"text": "`main`"
									},
									{
										"kind": "text",
										"text": ": a boolean value indicating whether this module is the main registered module. This is useful when an alias is used."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  modules: {\n    eventBus: {\n      resolve: \"@medusajs/event-bus-local\",\n    },\n    cacheService: {\n      resolve: \"@medusajs/cache-redis\",\n      options: {\n        redisUrl: process.env.CACHE_REDIS_URL,\n        ttl: 30,\n      },\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 31586,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 31597,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31188,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf you want to use the environment variables method, learn more about it in the [Feature Flags documentation](https://docs.medusajs.com/development/feature-flags/toggle#method-one-using-environment-variables).\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/master/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  featureFlags: {\n    product_categories: true,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to [run migrations](https://docs.medusajs.com/development/entities/migrations/overview#migrate-command) as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31182,
								31183,
								31187,
								31188
							]
						}
					]
				},
				{
					"id": 31189,
					"name": "PluginDetails",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31190,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31191,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31192,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31193,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31194,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 31195,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31191,
										31192,
										31193,
										31194,
										31195
									]
								}
							]
						}
					}
				},
				{
					"id": 31196,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to \nprovide dependency injection functionalities."
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31197,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 31207,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31208,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31209,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 31210,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameter": [
												{
													"id": 31211,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 31212,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 31211,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										31209
									]
								}
							]
						}
					}
				},
				{
					"id": 31114,
					"name": "RuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The accepted values for the shipping rule option's operator."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30981,
						30985,
						30992,
						31041,
						31047,
						31058,
						31059,
						31060,
						31065,
						31073,
						31078,
						31090,
						31102,
						31105,
						31146,
						31151,
						31181
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						31115,
						31119,
						31124,
						31131,
						31141,
						31144,
						30975,
						31052,
						31110,
						31112,
						31189,
						31196,
						31207,
						31114
					]
				}
			]
		},
		{
			"id": 31213,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31391,
					"name": "EntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 31392,
					"name": "SoftDeletableEntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 31391,
								"name": "EntityDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 31242,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31243,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31242,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31245,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 31245,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 31244,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31242,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31245,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 31245,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31243,
								31244
							]
						}
					],
					"typeParameters": [
						{
							"id": 31245,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 31246,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 31247,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31248,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 32365,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31254,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32365,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31254,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 31249,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31250,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31251,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31252,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31253,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32367,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 32367,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31247,
								31248,
								31249,
								31250,
								31251,
								31252,
								31253
							]
						}
					],
					"typeParameters": [
						{
							"id": 31254,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 31255,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 31256,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 31257,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 31265,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 31220,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 31265,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 31258,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignature": {
																"id": 31259,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"parameters": [
																	{
																		"id": 31260,
																		"name": "x",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																],
																"type": {
																	"type": "inferred",
																	"name": "V"
																}
															}
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"extendsType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"falseType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 31242,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 31265,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 31220,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 31265,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 31261,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignature": {
																		"id": 31262,
																		"name": "__index",
																		"variant": "signature",
																		"kind": 8192,
																		"flags": {},
																		"parameters": [
																			{
																				"id": 31263,
																				"name": "x",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		],
																		"type": {
																			"type": "inferred",
																			"name": "V"
																		}
																	}
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"extendsType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"trueType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"falseType": {
																			"type": "unknown",
																			"name": "..."
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31264,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 31246,
								"typeArguments": [
									{
										"type": "reference",
										"target": 31265,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31257,
								31264
							]
						}
					],
					"typeParameters": [
						{
							"id": 31265,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 31266,
					"name": "UpsertWithReplaceConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify the configuration of how the upsert should be performed."
							}
						]
					},
					"children": [
						{
							"id": 31267,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The relationships that will be updated/created/deleted as part of the upsert"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 31268,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31267
							]
						}
					],
					"typeParameters": [
						{
							"id": 31268,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 31269,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 31318,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31319,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31320,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 31321,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 31322,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 31323,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 31324,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 31320,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 31325,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 31326,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 31327,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 31328,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 31320,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 31329,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																31327,
																31328,
																31329
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32374,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32373,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 31330,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31331,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31332,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 31332,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32386,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32385,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 31333,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31334,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31335,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 31335,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32389,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32388,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 31336,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31337,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31338,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 31339,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 31340,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31338,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32392,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32391,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 31270,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31271,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31272,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31256,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31341,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31273,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31341,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31274,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31275,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31276,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31256,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31341,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31277,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31341,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31278,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31279,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31280,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 31281,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31341,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31282,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31283,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31284,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 31285,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 31286,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 31287,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	31286,
																	31287
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 31288,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31341,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31289,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31290,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31291,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 31341,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 31220,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 31341,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 31292,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignature": {
																				"id": 31293,
																				"name": "__index",
																				"variant": "signature",
																				"kind": 8192,
																				"flags": {},
																				"parameters": [
																					{
																						"id": 31294,
																						"name": "x",
																						"variant": "param",
																						"kind": 32768,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					}
																				],
																				"type": {
																					"type": "inferred",
																					"name": "V"
																				}
																			}
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"objectType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"extendsType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"falseType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 31242,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 31341,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 31220,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 31341,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 31295,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignature": {
																						"id": 31296,
																						"name": "__index",
																						"variant": "signature",
																						"kind": 8192,
																						"flags": {},
																						"parameters": [
																							{
																								"id": 31297,
																								"name": "x",
																								"variant": "param",
																								"kind": 32768,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"type": {
																							"type": "inferred",
																							"name": "V"
																						}
																					}
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"extendsType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"trueType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"falseType": {
																							"type": "unknown",
																							"name": "..."
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 31298,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31299,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31300,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31301,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 31302,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 31303,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31341,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31304,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31305,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31306,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 31307,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 31308,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31341,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31309,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31310,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31311,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 31312,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31341,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31313,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31314,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31315,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 31316,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31266,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31341,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31317,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31341,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								31318,
								31330,
								31333,
								31336,
								31270,
								31274,
								31278,
								31282,
								31289,
								31299,
								31304,
								31309,
								31313
							]
						}
					],
					"typeParameters": [
						{
							"id": 31341,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32372,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31341,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31342,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 31361,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31362,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31363,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 31364,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 31365,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 31366,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 31367,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 31320,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 31368,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 31369,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 31370,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 31371,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 31320,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 31372,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																31370,
																31371,
																31372
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32374,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32373,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 31373,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31374,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31375,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 31332,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32386,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32385,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 31376,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31377,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31378,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 31335,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32389,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32388,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 31379,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31380,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31381,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 31382,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 31383,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31338,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32392,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32391,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 31343,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31344,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31345,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31256,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31384,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31346,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31059,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31347,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31384,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31348,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31349,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31350,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31256,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31384,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31351,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31059,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31352,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31384,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31353,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31354,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31355,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 31356,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31384,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "TreeRepositoryService.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31357,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31358,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31359,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31360,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								31361,
								31373,
								31376,
								31379,
								31343,
								31348,
								31353,
								31357
							]
						}
					],
					"typeParameters": [
						{
							"id": 31384,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32372,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31384,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31385,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 31386,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31387,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31386
							]
						}
					],
					"typeParameters": [
						{
							"id": 31387,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 31388,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 31389,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31390,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31389
							]
						}
					],
					"typeParameters": [
						{
							"id": 31390,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 31220,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31241,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31221,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31222,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32361,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31241,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31223,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32361,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31241,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31224,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 32363,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31241,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32363,
													"typeArguments": [
														{
															"type": "reference",
															"target": 31241,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 31225,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32363,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31241,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31226,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32363,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31241,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31227,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32363,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31241,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31228,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32361,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31241,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31229,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32363,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31241,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31230,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32363,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31241,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31231,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32363,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31241,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31232,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32363,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31241,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31233,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31234,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31235,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31236,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31237,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31238,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31239,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31240,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31222,
										31223,
										31224,
										31225,
										31226,
										31227,
										31228,
										31229,
										31230,
										31231,
										31232,
										31233,
										31234,
										31235,
										31236,
										31237,
										31238,
										31239,
										31240
									]
								}
							]
						}
					}
				},
				{
					"id": 31214,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31218,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 31219,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 31219,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 31218,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 31218,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 31218,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 31220,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 31218,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 31218,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 31215,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 31216,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 31217,
															"name": "x",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "inferred",
														"name": "V"
													}
												}
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 31214,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 31219,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 32360,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31242,
						31246,
						31256,
						31266,
						31269,
						31342,
						31385,
						31388
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						31391,
						31392,
						31220,
						31214
					]
				}
			]
		},
		{
			"id": 32372,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 32373,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32374,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 32375,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 32376,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32377,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 32378,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 32379,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 31320,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 32380,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32381,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32382,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 32383,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 31320,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 32384,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32382,
														32383,
														32384
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32385,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32386,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 32387,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 31332,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 32388,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32389,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 32390,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 31335,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 32391,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32392,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 32393,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 32394,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 32395,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 31338,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						32373,
						32385,
						32388,
						32391
					]
				}
			],
			"typeParameters": [
				{
					"id": 32396,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31269,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 31342,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 32367,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32371,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32368,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignature": {
						"id": 32369,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 32370,
								"name": "k",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"target": 32371,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			}
		},
		{
			"id": 32361,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32362,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 32362,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 32362,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 32422,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 31214,
						"typeArguments": [
							{
								"type": "reference",
								"target": 32362,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 32426,
					"typeArguments": [
						{
							"type": "reference",
							"target": 32362,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 32363,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32364,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 32364,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 32364,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 32364,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 32422,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 32423,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32424,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 32425,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										32424
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 32440,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32441,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 32441,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 32441,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 32441,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 32430,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32439,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 32439,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 32431,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 32432,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									32432
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 32440,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 32439,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 32433,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32434,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32434
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 32440,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 32439,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 32435,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 32436,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											32436
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 32440,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 32439,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 32437,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32438,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32438
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 32440,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 32428,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32429,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 32429,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 32363,
						"typeArguments": [
							{
								"type": "reference",
								"target": 32429,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 32430,
						"typeArguments": [
							{
								"type": "reference",
								"target": 32429,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 32426,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32427,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 31220,
						"typeArguments": [
							{
								"type": "reference",
								"target": 32428,
								"typeArguments": [
									{
										"type": "reference",
										"target": 32427,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 32428,
						"typeArguments": [
							{
								"type": "reference",
								"target": 32427,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 32428,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32427,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 32360,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 32365,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32366,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 32366,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 32365,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 32366,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 32366,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 32366,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 31393,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31394,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31399,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31395,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 31396,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31397,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31399,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 31398,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 31400,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31401,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31402,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31402
									]
								}
							]
						}
					}
				},
				{
					"id": 31403,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31404,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31405,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31406,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31394,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31405,
										31406
									]
								}
							]
						}
					}
				},
				{
					"id": 31407,
					"name": "EventHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31412,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31408,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 31409,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31410,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31412,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 31411,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 31413,
					"name": "EmitData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31418,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31414,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31415,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31416,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31418,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 31417,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31415,
										31416,
										31417
									]
								}
							]
						}
					}
				},
				{
					"id": 31419,
					"name": "MessageBody",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31428,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31420,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31421,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31422,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31423,
													"name": "service",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31424,
													"name": "action",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31425,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31426,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31423,
														31424,
														31425,
														31426
													]
												}
											]
										}
									}
								},
								{
									"id": 31427,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31428,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31421,
										31427
									]
								}
							]
						}
					}
				},
				{
					"id": 31429,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31434,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31430,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31431,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31432,
									"name": "body",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31419,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31434,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "MessageBody",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31433,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31431,
										31432,
										31433
									]
								}
							]
						}
					}
				},
				{
					"id": 31435,
					"name": "MessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31445,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31436,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31437,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31438,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31439,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31440,
													"name": "service",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31441,
													"name": "action",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31442,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31443,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31440,
														31441,
														31442,
														31443
													]
												}
											]
										}
									}
								},
								{
									"id": 31444,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 31445,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31445,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31437,
										31438,
										31444
									]
								}
							]
						}
					}
				},
				{
					"id": 31472,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31473,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31474,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31475,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 31476,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31477,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31475,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 31478,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31479,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31480,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 31481,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31413,
													"typeArguments": [
														{
															"type": "reference",
															"target": 31480,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "EmitData",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31482,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31483,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 31484,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31429,
													"typeArguments": [
														{
															"type": "reference",
															"target": 31483,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31485,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31486,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31487,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 31488,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31394,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31489,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31400,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 31490,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31491,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31492,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 31493,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31394,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31494,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31400,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								31473,
								31485,
								31490
							]
						}
					]
				},
				{
					"id": 31446,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31447,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31448,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31449,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 31450,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31394,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31451,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31400,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 31452,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31453,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31454,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 31455,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31394,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31456,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31400,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 31457,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31458,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31459,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 31460,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31461,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31459,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 31462,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31463,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31464,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 31465,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31413,
													"typeArguments": [
														{
															"type": "reference",
															"target": 31464,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "EmitData",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31466,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 31467,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 31468,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31429,
													"typeArguments": [
														{
															"type": "reference",
															"target": 31467,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31469,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31470,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31471,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 31917,
										"name": "ITransactionBaseService.withTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 31916,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								31447,
								31452,
								31457,
								31469
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 31915,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31472,
						31446
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						31394,
						31400,
						31403,
						31407,
						31413,
						31419,
						31429,
						31435
					]
				}
			]
		},
		{
			"id": 31495,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31496,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31497,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31498,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31499,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31500,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 31501,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31502,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31503,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31504,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31497,
								31501
							]
						}
					]
				},
				{
					"id": 31504,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 31505,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 31506,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 31507,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											31506,
											31507
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 31508,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31509,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31510,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31511,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31512,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31513,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31510,
										31511,
										31512,
										31513
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31496
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						31504,
						31508
					]
				}
			]
		},
		{
			"id": 32128,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 32129,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32130,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32129,
						32130
					]
				}
			]
		},
		{
			"id": 32131,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 32132,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 32133,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 32134,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32135,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32132,
						32133,
						32134,
						32135
					]
				}
			]
		},
		{
			"id": 32136,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 32137,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32138,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32137,
						32138
					]
				}
			]
		},
		{
			"id": 32139,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 32140,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32140
					]
				}
			]
		},
		{
			"id": 32141,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 32142,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32143,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32144,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32142,
						32143,
						32144
					]
				}
			]
		},
		{
			"id": 32065,
			"name": "FileTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32066,
					"name": "FileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File details."
							}
						]
					},
					"children": [
						{
							"id": 32067,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32068,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32067,
								32068
							]
						}
					]
				},
				{
					"id": 32069,
					"name": "CreateFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File to be created."
							}
						]
					},
					"children": [
						{
							"id": 32070,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32071,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32072,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Blob"
								},
								"name": "Blob",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32070,
								32071,
								32072
							]
						}
					]
				},
				{
					"id": 32106,
					"name": "ProviderFileResultDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of a file upload's result."
							}
						]
					},
					"children": [
						{
							"id": 32107,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32108,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32107,
								32108
							]
						}
					]
				},
				{
					"id": 32109,
					"name": "ProviderGetFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a file to retrieve."
							}
						]
					},
					"children": [
						{
							"id": 32110,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32111,
							"name": "isPrivate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the file is private."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32110,
								32111
							]
						}
					]
				},
				{
					"id": 32112,
					"name": "ProviderDeleteFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to remove."
							}
						]
					},
					"children": [
						{
							"id": 32113,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key. When uploading a file, the\nreturned key is used here."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32113
							]
						}
					]
				},
				{
					"id": 32114,
					"name": "ProviderUploadFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to create."
							}
						]
					},
					"children": [
						{
							"id": 32115,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32116,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32117,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "Blob"
								},
								"name": "Blob",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32115,
								32116,
								32117
							]
						}
					]
				},
				{
					"id": 32118,
					"name": "IFileProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "## Overview\n\nFile provider interface for the file module."
							}
						]
					},
					"children": [
						{
							"id": 32119,
							"name": "upload",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32120,
									"name": "upload",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to upload a file"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the upload's result."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32121,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contents and metadata of the file.\nAmong the file’s details, you can access the file’s path in the "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": " property of the file object."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32114,
												"name": "ProviderUploadFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32106,
												"name": "ProviderFileResultDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32122,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32123,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to delete a file from storage."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32124,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32112,
												"name": "ProviderDeleteFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32125,
							"name": "getPresignedDownloadUrl",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32126,
									"name": "getPresignedDownloadUrl",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a download URL of the file. For some file services, such as S3, a presigned URL indicates a temporary URL to get access to a file.\n\nIf your file service doesn’t perform or offer a similar functionality, you can just return the URL to download the file."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The presigned URL to download the file"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32127,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32109,
												"name": "ProviderGetFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32119,
								32122,
								32125
							]
						}
					]
				},
				{
					"id": 32073,
					"name": "IFileModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the File Module."
							}
						]
					},
					"children": [
						{
							"id": 32074,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32075,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads files to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created files."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst [file] = await fileModuleService.create([{\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n}])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32076,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The files to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32069,
													"name": "CreateFileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32077,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32066,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32078,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads a file to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.create({\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32079,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The file to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32069,
												"name": "CreateFileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32080,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32066,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32081,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32082,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes files by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the files are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.delete([\"file_123\"])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32083,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the files."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32084,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32085,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.delete(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32086,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32087,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32088,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32089,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file with a downloadable URL by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.retrieve(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32090,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32091,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the file is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30992,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32066,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32092,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32066,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32074,
								32081,
								32088
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 31736,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32066,
						32069,
						32106,
						32109,
						32112,
						32114,
						32118,
						32073
					]
				}
			]
		},
		{
			"id": 32405,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32406,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 32407,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 32408,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32406,
						32407,
						32408
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 32026,
					"name": "AdminCampaignListResponse"
				}
			]
		},
		{
			"id": 32011,
			"name": "HttpTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32012,
					"name": "CampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@experimental"
						]
					},
					"children": [
						{
							"id": 32013,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32014,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32015,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32016,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32017,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32018,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32019,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32020,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32021,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32022,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32023,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32024,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 32025,
											"name": "used",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32022,
												32023,
												32024,
												32025
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32013,
								32014,
								32015,
								32016,
								32017,
								32018,
								32019,
								32020
							]
						}
					]
				},
				{
					"id": 32026,
					"name": "AdminCampaignListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@experimental"
						]
					},
					"children": [
						{
							"id": 32027,
							"name": "campaigns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 32012,
									"name": "CampaignResponse",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 32028,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32406,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 32029,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32407,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 32030,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32408,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32027,
								32028,
								32029,
								32030
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32405,
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32031,
					"name": "AdminCampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@experimental"
						]
					},
					"children": [
						{
							"id": 32032,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32012,
								"name": "CampaignResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32032
							]
						}
					]
				},
				{
					"id": 32033,
					"name": "AdminProductCategoryResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@experimental"
						]
					},
					"children": [
						{
							"id": 32034,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32409,
								"name": "ProductCategoryResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32034
							]
						}
					]
				},
				{
					"id": 32035,
					"name": "AdminProductCategoryListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@experimental"
						]
					},
					"children": [
						{
							"id": 32037,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The limit applied on the retrieved items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 31048,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 32038,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items skipped before retrieving the list of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 31049,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 32039,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total count of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 31050,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 32036,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 32409,
									"name": "ProductCategoryResponse",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32037,
								32038,
								32039,
								32036
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 31047,
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32040,
					"name": "AdminStockLocationAddressResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32041,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32042,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32043,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32044,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32045,
									"name": "company",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32046,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32047,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32048,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32049,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32050,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32051,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32052,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 32053,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 32054,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32042,
										32043,
										32044,
										32045,
										32046,
										32047,
										32048,
										32049,
										32050,
										32051,
										32052,
										32053,
										32054
									]
								}
							]
						}
					}
				},
				{
					"id": 32055,
					"name": "AdminStockLocationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32056,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32057,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32058,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32059,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32060,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32040,
								"name": "AdminStockLocationAddressResponse",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32061,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32062,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32063,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32064,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/http/fulfillment/admin/fulfillment-set.ts",
										"qualifiedName": "AdminFulfillmentSetResponse"
									},
									"name": "AdminFulfillmentSetResponse",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32056,
								32057,
								32058,
								32059,
								32060,
								32061,
								32062,
								32063,
								32064
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32012,
						32026,
						32031,
						32033,
						32035,
						32055
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32040
					]
				}
			]
		},
		{
			"id": 32409,
			"name": "ProductCategoryResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@experimental"
				]
			},
			"children": [
				{
					"id": 32410,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32411,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32412,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 32413,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 32414,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32415,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32416,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 32417,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 32418,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 32419,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 32420,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 32409,
						"name": "ProductCategoryResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 32421,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 32409,
							"name": "ProductCategoryResponse",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32410,
						32411,
						32412,
						32413,
						32414,
						32415,
						32416,
						32417,
						32418,
						32419,
						32420,
						32421
					]
				}
			]
		},
		{
			"id": 32145,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32146,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 32147,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32148,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32149,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32150,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32151,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 32152,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 32153,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 32154,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32147,
								32148,
								32149,
								32150,
								32151,
								32152,
								32153,
								32154
							]
						}
					]
				}
			}
		},
		{
			"id": 32155,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32156,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 32157,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32156,
						32157
					]
				}
			]
		},
		{
			"id": 32158,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32159,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32160,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 32155,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 32155,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 32161,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 32162,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32163,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 32164,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32163,
														32164
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 32165,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 32166,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 32145,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 32167,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 32168,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 32169,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 32170,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 32145,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											32169,
											32170
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 32171,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32159,
						32160,
						32161,
						32165,
						32166,
						32167,
						32171
					]
				}
			]
		},
		{
			"id": 32172,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32173,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32174,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32173,
						32174
					]
				}
			]
		},
		{
			"id": 32175,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32176,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32177,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32176,
						32177
					]
				}
			]
		},
		{
			"id": 32178,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32179,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32180,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32181,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 32182,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 32183,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 32184,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 32185,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 32172,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 32186,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 32187,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 32188,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 32189,
															"name": "field",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32175,
															"name": "JoinerDirective",
															"package": "@medusajs/types"
														}
													}
												}
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											32183,
											32184,
											32185,
											32186
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 32190,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 32191,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 32172,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 32192,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32193,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 32194,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 32195,
										"name": "field",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 32175,
										"name": "JoinerDirective",
										"package": "@medusajs/types"
									}
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32179,
						32180,
						32181,
						32190,
						32191,
						32192
					]
				}
			]
		},
		{
			"id": 32196,
			"name": "RemoteJoinerOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32197,
					"name": "throwIfKeyNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32198,
					"name": "throwIfRelationNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32197,
						32198
					]
				}
			]
		},
		{
			"id": 32199,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignature": {
				"id": 32200,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"parameters": [
					{
						"id": 32201,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 32202,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 32203,
								"name": "fields",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							},
							{
								"id": 32204,
								"name": "args",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 32172,
										"name": "JoinerArgument",
										"package": "@medusajs/types"
									}
								}
							},
							{
								"id": 32205,
								"name": "expands",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "reference",
									"target": 32199,
									"name": "RemoteNestedExpands",
									"package": "@medusajs/types"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									32203,
									32204,
									32205
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 32206,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32207,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32208,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32209,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32158,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 32210,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 32158,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 32211,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 32212,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 32172,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 32213,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32199,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32207,
						32208,
						32209,
						32210,
						32211,
						32212,
						32213
					]
				}
			]
		},
		{
			"id": 32214,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32215,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32216,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32217,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32218,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30992,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32219,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32288,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32220,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32221,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32222,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32223,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30992,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32224,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32288,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32225,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32226,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32227,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 32228,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32229,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32288,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32230,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32231,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32232,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 32233,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32234,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32288,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32235,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32236,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32237,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 32238,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32288,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32239,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32240,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32241,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 32242,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 31385,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32243,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32288,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32244,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32245,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32246,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 32247,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 31388,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32248,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32288,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						32215,
						32220,
						32225,
						32230,
						32235,
						32239,
						32244
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 31736,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 31514,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31515,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31516,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31517,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31518,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31519,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31520,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31521,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31522,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31523,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31524,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31525,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31526,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31527,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31528,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31529,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31530,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31531,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31532,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31533,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31534,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31535,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31536,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31537,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31538,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31539,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31540,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31541,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31542,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31543,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31544,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31545,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31546,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31547,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31548,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31549,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31550,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31551,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31552,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31553,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31554,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31555,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31556,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31557,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31558,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31559,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31560,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31561,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31562,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31563,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31564,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31565,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31566,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31567,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31568,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31569,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31570,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31571,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31516,
								31520,
								31524,
								31528,
								31531,
								31536,
								31541,
								31546,
								31551,
								31556,
								31560,
								31564,
								31568
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31515
					]
				}
			]
		},
		{
			"id": 31572,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31573,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31577,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31574,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 31575,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 31576,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 31577,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 31578,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 31579,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31578,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 31580,
					"name": "MODULE_SCOPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 31581,
							"name": "INTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 31582,
							"name": "EXTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "external"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								31581,
								31582
							]
						}
					]
				},
				{
					"id": 31583,
					"name": "MODULE_RESOURCE_TYPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 31584,
							"name": "SHARED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "shared"
							}
						},
						{
							"id": 31585,
							"name": "ISOLATED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "isolated"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								31584,
								31585
							]
						}
					]
				},
				{
					"id": 31586,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31587,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31588,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31581,
										"name": "MODULE_SCOPE.INTERNAL",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31589,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31583,
										"name": "MODULE_RESOURCE_TYPE",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31590,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31591,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31617,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 31592,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 31692,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 31593,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 31594,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31595,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 31596,
									"name": "worker_mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "worker"
											},
											{
												"type": "literal",
												"value": "server"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31588,
										31589,
										31590,
										31591,
										31592,
										31593,
										31594,
										31595,
										31596
									]
								}
							]
						}
					}
				},
				{
					"id": 31597,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31598,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31599,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31582,
										"name": "MODULE_SCOPE.EXTERNAL",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31600,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31617,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 31601,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31602,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31603,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 31604,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31605,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31603,
														31604,
														31605
													]
												}
											]
										}
									}
								},
								{
									"id": 31606,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 31607,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31608,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31599,
										31600,
										31601,
										31606,
										31607,
										31608
									]
								}
							]
						}
					}
				},
				{
					"id": 31609,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31610,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31611,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 31612,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31617,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31613,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 31614,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31615,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 31586,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 31597,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 31616,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 31692,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31611,
										31612,
										31613,
										31614,
										31615,
										31616
									]
								}
							]
						}
					}
				},
				{
					"id": 31617,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31618,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31619,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31620,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31621,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 31622,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31623,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 31624,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 31625,
									"name": "isLegacy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 31626,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31627,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 31586,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 31597,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31619,
										31620,
										31621,
										31622,
										31623,
										31624,
										31625,
										31626,
										31627
									]
								}
							]
						}
					}
				},
				{
					"id": 31628,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31629,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31630,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31631,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31632,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31633,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31634,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31586,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31630,
										31631,
										31632,
										31633,
										31634
									]
								}
							]
						}
					}
				},
				{
					"id": 31635,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 32397,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31636,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31637,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31638,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31639,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31617,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31637,
												31638,
												31639
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 31640,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31641,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31642,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31660,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31643,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31617,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31642,
												31643
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 31644,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 31650,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31645,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31646,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31196,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31647,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 31650,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 31648,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 31515,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31649,
									"name": "dataLoaderOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31646,
										31647,
										31648,
										31649
									]
								}
							]
						}
					}
				},
				{
					"id": 31651,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31652,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 31653,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31654,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 31644,
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31655,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31586,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 31656,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 31657,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 31658,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 31659,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											31658,
											31659
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 31660,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 32158,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31661,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31662,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31663,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31688,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 31664,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 31665,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 31666,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 31667,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 31668,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 31669,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 31670,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							},
																							{
																								"id": 31671,
																								"name": "isList",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									31669,
																									31670,
																									31671
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 31672,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 31688,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	31666,
																	31667,
																	31672
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 31673,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31674,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 31675,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 31676,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 31677,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 31678,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 31679,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 31680,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 31681,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 31682,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 31683,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 31684,
																					"name": "type",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "literal",
																								"value": "date"
																							},
																							{
																								"type": "literal",
																								"value": "time"
																							},
																							{
																								"type": "literal",
																								"value": "datetime"
																							},
																							{
																								"type": "literal",
																								"value": "bigint"
																							},
																							{
																								"type": "literal",
																								"value": "blob"
																							},
																							{
																								"type": "literal",
																								"value": "uint8array"
																							},
																							{
																								"type": "literal",
																								"value": "array"
																							},
																							{
																								"type": "literal",
																								"value": "enumArray"
																							},
																							{
																								"type": "literal",
																								"value": "enum"
																							},
																							{
																								"type": "literal",
																								"value": "json"
																							},
																							{
																								"type": "literal",
																								"value": "integer"
																							},
																							{
																								"type": "literal",
																								"value": "smallint"
																							},
																							{
																								"type": "literal",
																								"value": "tinyint"
																							},
																							{
																								"type": "literal",
																								"value": "mediumint"
																							},
																							{
																								"type": "literal",
																								"value": "float"
																							},
																							{
																								"type": "literal",
																								"value": "double"
																							},
																							{
																								"type": "literal",
																								"value": "boolean"
																							},
																							{
																								"type": "literal",
																								"value": "decimal"
																							},
																							{
																								"type": "literal",
																								"value": "string"
																							},
																							{
																								"type": "literal",
																								"value": "uuid"
																							},
																							{
																								"type": "literal",
																								"value": "text"
																							}
																						]
																					}
																				},
																				{
																					"id": 31685,
																					"name": "defaultValue",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 31686,
																					"name": "nullable",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 31687,
																					"name": "options",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Mikro-orm options for the column"
																							}
																						]
																					},
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Record"
																						},
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "unknown"
																							}
																						],
																						"name": "Record",
																						"package": "typescript"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						31684,
																						31685,
																						31686,
																						31687
																					]
																				}
																			]
																		}
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																31680,
																31681,
																31682
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31662,
												31663,
												31664,
												31673,
												31674,
												31675,
												31676,
												31677,
												31678
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 31688,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 32145,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31689,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31690,
											"name": "isInternalService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 31691,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31690,
												31691
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 31692,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31693,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31694,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31573,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Constructor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31695,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31651,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31696,
									"name": "migrations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 31697,
									"name": "models",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31573,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31698,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 31699,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31700,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 31644,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 31701,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 31586,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 31702,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 31703,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31704,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 31644,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 31705,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 31586,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31694,
										31695,
										31696,
										31697
									]
								},
								{
									"title": "Methods",
									"children": [
										31698,
										31702
									]
								}
							]
						}
					}
				},
				{
					"id": 31706,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31707,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31708,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31709,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 31710,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31711,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31712,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31713,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 31714,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31715,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31716,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31717,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 31718,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 31719,
																	"name": "connection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		31719
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 31720,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 31721,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31709,
												31710,
												31711,
												31712,
												31713,
												31714,
												31715,
												31716,
												31717,
												31720,
												31721
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31707
							]
						}
					]
				},
				{
					"id": 31722,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31723,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31724,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 31725,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31726,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignature": {
												"id": 31727,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 31728,
														"name": "key",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": 31573,
													"typeArguments": [
														{
															"type": "reference",
															"target": 31269,
															"name": "RepositoryService",
															"package": "@medusajs/types"
														}
													],
													"name": "Constructor",
													"package": "@medusajs/types"
												}
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31724,
										31725
									]
								}
							]
						}
					}
				},
				{
					"id": 31729,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 31586,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 31597,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 31730,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31731,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 31732,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31733,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 32178,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 31734,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 31735,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32196,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 31736,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 32073,
							"name": "IFileModuleService"
						},
						{
							"type": "reference",
							"target": 32214,
							"name": "ILinkModule"
						}
					]
				},
				{
					"id": 31750,
					"name": "InternalModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31751,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 31752,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 31850,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "InternalModuleService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 31753,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31754,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31755,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31756,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30992,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31757,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31848,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31758,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31759,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 31760,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30992,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31761,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31848,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31762,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31763,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31764,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 31765,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 31242,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 31766,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 31767,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30992,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31768,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31848,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31769,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31770,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31771,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 31772,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 31242,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 31773,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 31774,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30992,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31775,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31848,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31776,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31777,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31778,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 31779,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31848,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31780,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31781,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 31782,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31848,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31783,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31784,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31785,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 31786,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31848,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31787,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31788,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 31789,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31848,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31790,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31791,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 31792,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 31793,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 31794,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 31242,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 31795,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 31796,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																31793,
																31796
															]
														}
													]
												}
											}
										},
										{
											"id": 31797,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31848,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31798,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31799,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 31800,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 31801,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 31802,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 31242,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 31803,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 31804,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	31801,
																	31804
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 31805,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31848,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31806,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31807,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31808,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31809,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31810,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31811,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 31812,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31813,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31814,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 31815,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31816,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31817,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 31818,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31819,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31820,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 31821,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 31822,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 31823,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 31242,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 31824,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																31822
															]
														}
													]
												}
											}
										},
										{
											"id": 31825,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31826,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31827,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31828,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 31829,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 31830,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31848,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31831,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31832,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31833,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 31834,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 31835,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31848,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31836,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31837,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31838,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 31839,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31848,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 31840,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31841,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 31842,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31848,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31843,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31844,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31845,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 31846,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 31266,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31848,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "InternalModuleService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31847,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32288,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31848,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								31751
							]
						},
						{
							"title": "Methods",
							"children": [
								31753,
								31762,
								31769,
								31776,
								31783,
								31806,
								31826,
								31831,
								31836,
								31843
							]
						}
					],
					"typeParameters": [
						{
							"id": 31848,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31849,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 31850,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 31851,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31852,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31853,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31573,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31853
									]
								}
							]
						}
					}
				},
				{
					"id": 31854,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31855,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31856,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 31851,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 31857,
									"name": "provider_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31858,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31856,
										31857,
										31858
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						31580,
						31583
					]
				},
				{
					"title": "Interfaces",
					"children": [
						31706,
						31736,
						31750
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						31573,
						31578,
						31579,
						31586,
						31597,
						31609,
						31617,
						31628,
						31635,
						31640,
						31644,
						31651,
						31656,
						31660,
						31688,
						31692,
						31722,
						31729,
						31730,
						31851,
						31854
					]
				}
			]
		},
		{
			"id": 32397,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 31597,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 31586,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 32262,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32263,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32264,
					"name": "includeAncestorsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32263,
						32264
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 31059,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 31859,
			"name": "RegionTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31860,
					"name": "RegionDTO__legacy",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a legacy region."
							}
						]
					},
					"children": [
						{
							"id": 31861,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31862,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency code of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31863,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31864,
							"name": "tax_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax code of the region."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31865,
							"name": "gift_cards_taxable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether gift cards in the region are taxable."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31866,
							"name": "automatic_taxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether taxes should be calculated automatically in the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31867,
							"name": "tax_provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax provider's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31868,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31869,
							"name": "includes_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether prices include taxes in the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31861,
								31862,
								31863,
								31864,
								31865,
								31866,
								31867,
								31868,
								31869
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31860
					]
				}
			]
		},
		{
			"id": 31870,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31871,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31872,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31873,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 31874,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31875,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31876,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 31877,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 31878,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31873,
										31874,
										31875
									]
								}
							]
						}
					}
				},
				{
					"id": 31879,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31880,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31881,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31882,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31883,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31884,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 31885,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31886,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31887,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 31888,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31889,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31890,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31891,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 31892,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 31893,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31894,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31895,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31896,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 31897,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 31898,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31899,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31900,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31901,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 31902,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31903,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31904,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 31905,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31906,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31907,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31908,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 31909,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 31910,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31911,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31912,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31913,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31880
							]
						},
						{
							"title": "Methods",
							"children": [
								31881,
								31885,
								31888,
								31893,
								31898,
								31902,
								31905,
								31910
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31879
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						31871
					]
				}
			]
		},
		{
			"id": 32265,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "use "
							},
							{
								"kind": "code",
								"text": "`Context`"
							},
							{
								"kind": "text",
								"text": " instead\n\n\nA context used to share resources, such as transaction manager, between the application and the module."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 32266,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				},
				{
					"id": 32267,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32266,
						32267
					]
				}
			]
		},
		{
			"id": 32268,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32269,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 32270,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32271,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 32272,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 32273,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32269,
						32270
					]
				}
			]
		},
		{
			"id": 32274,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32275,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32276,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32277,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 31429,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31429,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 32278,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32279,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 32280,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32268,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31429,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32281,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32282,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 32283,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 32284,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 32285,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 32286,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 31435,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32285,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31435,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32285,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 32287,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						32275,
						32278,
						32281,
						32283
					]
				}
			]
		},
		{
			"id": 32288,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 32289,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 32290,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 32299,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 32291,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 32299,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 32292,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32293,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 32294,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32295,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32296,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 32274,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 32297,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32298,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32289,
						32290,
						32291,
						32292,
						32293,
						32294,
						32295,
						32296,
						32297,
						32298
					]
				}
			],
			"typeParameters": [
				{
					"id": 32299,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 32323,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32324,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 32325,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32325
							]
						}
					],
					"indexSignature": {
						"id": 32326,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 32327,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 32328,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 32323,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					}
				]
			}
		},
		{
			"id": 32329,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		},
		{
			"id": 32300,
			"name": "CartLikeWithTotals",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32301,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 32302,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32303,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32304,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32305,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32306,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32307,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32308,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32309,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32310,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32311,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32312,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32313,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32314,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32315,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32316,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32317,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32318,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32319,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32320,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32321,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32322,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32329,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32302,
								32303,
								32304,
								32305,
								32306,
								32307,
								32308,
								32309,
								32310,
								32311,
								32312,
								32313,
								32314,
								32315,
								32316,
								32317,
								32318,
								32319,
								32320,
								32321,
								32322
							]
						}
					]
				}
			}
		},
		{
			"id": 31914,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31915,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31916,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31917,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31918,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								31916
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 31446,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31915
					]
				}
			]
		},
		{
			"id": 31919,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31920,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 31921,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31922,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31923,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31924,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 31925,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31924,
														31925
													]
												}
											]
										}
									}
								},
								{
									"id": 31926,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31927,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31928,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 31929,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31928,
														31929
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31922,
										31926
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								31921
							]
						}
					]
				},
				{
					"id": 31930,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 31935,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31936,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31937,
									"name": "auth_user_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31938,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31939,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31940,
													"name": "email",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31941,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 31942,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 31943,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 31944,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31940,
														31941,
														31942,
														31943,
														31944
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31936,
										31937,
										31938
									]
								}
							]
						},
						{
							"id": 31931,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31932,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/user/mutations.ts",
												"qualifiedName": "CreateInviteDTO"
											},
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31932
									]
								}
							]
						},
						{
							"id": 31933,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31934,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31934
									]
								}
							]
						},
						{
							"id": 31945,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31946,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31946
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								31935,
								31931,
								31933,
								31945
							]
						}
					]
				},
				{
					"id": 31947,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 31948,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31949,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31950,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31951,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31952,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 31953,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
												"qualifiedName": "PriceListRuleDTO"
											},
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31954,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 31955,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 31956,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 31957,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 31958,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 31959,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 31960,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															31956,
															31957,
															31958,
															31959,
															31960
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 31961,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 31962,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 31963,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															31963
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31949,
										31950,
										31951,
										31952,
										31953,
										31954,
										31961
									]
								}
							]
						},
						{
							"id": 31964,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31965,
									"name": "rule_attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31966,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31965,
										31966
									]
								}
							]
						},
						{
							"id": 31967,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31968,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 31969,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31970,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 31971,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31972,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 31973,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31968,
										31969,
										31970,
										31971,
										31972,
										31973
									]
								}
							]
						},
						{
							"id": 31974,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31975,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31985,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31975
									]
								}
							]
						},
						{
							"id": 31976,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31977,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31978,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31977,
										31978
									]
								}
							]
						},
						{
							"id": 31979,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31980,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31981,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31980,
										31981
									]
								}
							]
						},
						{
							"id": 31982,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31983,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31984,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31983,
										31984
									]
								}
							]
						},
						{
							"id": 31985,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31986,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31987,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31988,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31989,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31990,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 31991,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 31992,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 31993,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 31994,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32398,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 31995,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
											"qualifiedName": "CreatePriceListRules"
										},
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31986,
										31987,
										31988,
										31989,
										31990,
										31991,
										31992,
										31993,
										31994,
										31995
									]
								}
							]
						},
						{
							"id": 31996,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 31997,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31997
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								31948,
								31964,
								31967,
								31974,
								31976,
								31979,
								31982,
								31985,
								31996
							]
						}
					]
				},
				{
					"id": 31998,
					"name": "ProductCategoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 31999,
							"name": "CreateProductCategoryWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32000,
									"name": "product_category",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/product/common.ts",
											"qualifiedName": "CreateProductCategoryDTO"
										},
										"name": "CreateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32000
									]
								}
							]
						},
						{
							"id": 32001,
							"name": "UpdateProductCategoryWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32002,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32003,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/product/common.ts",
											"qualifiedName": "UpdateProductCategoryDTO"
										},
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32002,
										32003
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								31999,
								32001
							]
						}
					]
				},
				{
					"id": 32004,
					"name": "ReservationWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 32005,
							"name": "CreateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32006,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/inventory/mutations/reservation-item.ts",
												"qualifiedName": "CreateReservationItemInput"
											},
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32006
									]
								}
							]
						},
						{
							"id": 32007,
							"name": "CreateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/inventory/common/reservation-item.ts",
										"qualifiedName": "ReservationItemDTO"
									},
									"name": "InventoryNext.ReservationItemDTO",
									"package": "@medusajs/types",
									"qualifiedName": "ReservationItemDTO"
								}
							}
						},
						{
							"id": 32008,
							"name": "UpdateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32009,
									"name": "updates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/inventory/mutations/reservation-item.ts",
												"qualifiedName": "UpdateReservationItemInput"
											},
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32009
									]
								}
							]
						},
						{
							"id": 32010,
							"name": "UpdateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/inventory/common/reservation-item.ts",
										"qualifiedName": "ReservationItemDTO"
									},
									"name": "InventoryNext.ReservationItemDTO",
									"package": "@medusajs/types",
									"qualifiedName": "ReservationItemDTO"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								32005,
								32008
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								32007,
								32010
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						31920,
						31930,
						31947,
						31998,
						32004
					]
				}
			]
		},
		{
			"id": 32398,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32399,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32400,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32401,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 32402,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32403,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 32404,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32399,
						32400,
						32401,
						32402,
						32403,
						32404
					]
				}
			]
		},
		{
			"id": 32336,
			"name": "CreateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/types/src/product/common.ts",
							"qualifiedName": "CreateProductVariantDTO"
						},
						"name": "ProductTypes.CreateProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "CreateProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 32337,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32338,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32338
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 32339,
			"name": "UpdateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/product/common.ts",
								"qualifiedName": "UpsertProductVariantDTO"
							},
							"name": "ProductTypes.UpsertProductVariantDTO",
							"package": "@medusajs/types",
							"qualifiedName": "UpsertProductVariantDTO"
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 32340,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 32341,
										"name": "prices",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
													"qualifiedName": "CreateMoneyAmountDTO"
												},
												"name": "PricingTypes.CreateMoneyAmountDTO",
												"package": "@medusajs/types",
												"qualifiedName": "CreateMoneyAmountDTO"
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											32341
										]
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 32342,
			"name": "CreateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/product/common.ts",
									"qualifiedName": "CreateProductDTO"
								},
								"name": "ProductTypes.CreateProductDTO",
								"package": "@medusajs/types",
								"qualifiedName": "CreateProductDTO"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 32343,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32344,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 32345,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 32346,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															32346
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 32347,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32336,
											"name": "CreateProductVariantWorkflowInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32344,
										32347
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 32348,
			"name": "UpdateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/types/src/product/common.ts",
							"qualifiedName": "UpsertProductDTO"
						},
						"name": "ProductTypes.UpsertProductDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 32349,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32350,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 32351,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 32352,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															32352
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32350
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 32330,
			"name": "CreateLocationFulfillmentSetWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32331,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32332,
					"name": "fulfillment_set_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32333,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32334,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32335,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32334,
										32335
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32331,
						32332
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				30960,
				30974,
				31213,
				31393,
				31495,
				32065,
				32011,
				31514,
				31572,
				31859,
				31870,
				31914,
				31919
			]
		},
		{
			"title": "Interfaces",
			"children": [
				32353,
				32372,
				32128,
				32131,
				32136,
				32139,
				32141,
				32405,
				32409,
				32155,
				32158,
				32172,
				32175,
				32178,
				32196,
				32199,
				32206,
				32214,
				32262,
				32265,
				32268,
				32274,
				32288,
				32398,
				32330
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				30945,
				32367,
				32361,
				32363,
				32422,
				32440,
				32430,
				32428,
				32426,
				32360,
				32365,
				32145,
				32397,
				32323,
				32328,
				32329,
				32300,
				32336,
				32339,
				32342,
				32348
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"30944": {
			"sourceFileName": "../../../packages/types/src/index.ts",
			"qualifiedName": ""
		},
		"30945": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"30946": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"30947": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"30948": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"30949": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"30950": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"30951": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"30952": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"30953": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"30954": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"30955": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"30956": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"30957": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"30958": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"30959": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"30960": {
			"sourceFileName": "../../../packages/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"30961": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"30962": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"30963": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"30964": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"30965": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"30966": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"30967": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"30968": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"30969": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"30970": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"30971": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"30972": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"30973": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"30974": {
			"sourceFileName": "../../../packages/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"30975": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"30976": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"30977": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"30981": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"30982": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"30983": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"30984": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"30985": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"30986": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"30987": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"30988": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"30989": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"30992": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"30993": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"30994": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"30995": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"30996": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"30997": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"30998": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"30999": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"31001": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"31002": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"31003": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"31041": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"31042": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"31043": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"31044": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"31045": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"31046": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"31047": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"31048": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"31049": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"31050": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"31051": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"31052": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"31053": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"31054": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.id"
		},
		"31055": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.object"
		},
		"31056": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"31057": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"31058": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"31059": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"31060": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"31061": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"31062": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"31063": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"31064": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"31065": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"31066": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"31067": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"31068": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"31069": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"31070": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"31071": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"31072": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"31073": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"31074": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"31075": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"31076": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"31077": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"31078": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload"
		},
		"31079": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"31080": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"31081": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"31082": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"31083": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"31084": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"31085": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"31086": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"31087": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"31088": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"31089": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"31090": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload"
		},
		"31091": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.first_name"
		},
		"31092": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.last_name"
		},
		"31093": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.phone"
		},
		"31094": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.metadata"
		},
		"31095": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.company"
		},
		"31096": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_1"
		},
		"31097": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_2"
		},
		"31098": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.city"
		},
		"31099": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.country_code"
		},
		"31100": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.province"
		},
		"31101": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.postal_code"
		},
		"31102": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams"
		},
		"31103": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"31104": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"31105": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams"
		},
		"31106": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"31107": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"31110": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"31111": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"31112": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"31113": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"31114": {
			"sourceFileName": "../../../packages/types/src/common/rule.ts",
			"qualifiedName": "RuleOperatorType"
		},
		"31115": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "LinkMethodRequest"
		},
		"31116": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"31117": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"31118": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"31119": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "LinkWorkflowInput"
		},
		"31120": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"31121": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"31122": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"31123": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"31124": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodRequest"
		},
		"31125": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"31126": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.create"
		},
		"31127": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.update"
		},
		"31128": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.delete"
		},
		"31129": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"31130": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"31131": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodResponse"
		},
		"31132": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"31133": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.created"
		},
		"31134": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.updated"
		},
		"31135": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"31136": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"31137": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"31138": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"31139": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"31140": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"31141": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowInput"
		},
		"31142": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"31143": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"31144": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowOutput"
		},
		"31145": {
			"sourceFileName": "../../../packages/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"31146": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"31147": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"31148": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"31149": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"31150": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"31151": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"31152": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.store_cors"
		},
		"31153": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin_cors"
		},
		"31154": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.auth_cors"
		},
		"31155": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookie_secret"
		},
		"31156": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwt_secret"
		},
		"31157": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_database"
		},
		"31158": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_url"
		},
		"31159": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_schema"
		},
		"31160": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_logging"
		},
		"31162": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_extra"
		},
		"31163": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"31164": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"31165": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"31166": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"31167": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_driver_options"
		},
		"31168": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"31169": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"31170": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"31171": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"31172": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"31173": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"31174": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_url"
		},
		"31175": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_prefix"
		},
		"31176": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_options"
		},
		"31177": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.session_options"
		},
		"31178": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.http_compression"
		},
		"31179": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobs_batch_size"
		},
		"31180": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"31181": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"31182": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"31183": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.plugins"
		},
		"31184": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"31185": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"31186": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"31187": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"31188": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"31189": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "PluginDetails"
		},
		"31190": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"31191": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"31192": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"31193": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.id"
		},
		"31194": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"31195": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.version"
		},
		"31196": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"31197": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"31207": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"31208": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"31209": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31210": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31211": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"31212": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"31213": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"31214": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"31215": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31216": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"31218": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"31219": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"31220": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"31221": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31222": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"31223": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"31224": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"31225": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"31226": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"31227": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"31228": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"31229": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"31230": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"31231": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"31232": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"31233": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"31234": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"31235": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"31236": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"31237": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"31238": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"31239": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"31240": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"31241": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"31242": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"31243": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31244": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31245": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"31246": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"31247": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"31248": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"31249": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"31250": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"31251": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"31252": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"31253": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"31254": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"31255": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"31256": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"31257": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"31258": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31259": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"31261": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31262": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"31264": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"31265": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"31266": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "UpsertWithReplaceConfig"
		},
		"31267": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.relations"
		},
		"31268": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"31269": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"31270": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"31271": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"31272": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"31273": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31274": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"31275": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"31276": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"31277": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31278": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"31279": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"31280": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"31281": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31282": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"31283": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"31284": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"31285": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"31286": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"31287": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"31288": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31289": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"31290": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"31291": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"31292": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31293": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"31295": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31296": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"31298": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31299": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"31300": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"31301": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"31302": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31303": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31304": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"31305": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"31306": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"31307": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31308": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31309": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"31310": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"31311": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"31312": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31313": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"31314": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"31315": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"31316": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "config"
		},
		"31317": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31318": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"31319": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"31320": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"31321": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"31322": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"31323": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"31324": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"31325": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31326": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"31327": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"31328": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"31329": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"31330": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"31331": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"31332": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"31333": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"31334": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"31335": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"31336": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"31337": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"31338": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"31339": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"31340": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"31341": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"31342": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"31343": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"31344": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"31345": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"31346": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"31347": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31348": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"31349": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"31350": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"31351": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"31352": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31353": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"31354": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"31355": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"31356": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31357": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"31358": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"31359": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "id"
		},
		"31360": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31361": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"31362": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"31363": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"31364": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"31365": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"31366": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"31367": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"31368": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"31369": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"31370": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"31371": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"31372": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"31373": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"31374": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"31375": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"31376": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"31377": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"31378": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"31379": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"31380": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"31381": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"31382": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"31383": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"31384": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"31385": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"31386": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"31387": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"31388": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"31389": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"31390": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"31391": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "EntityDateColumns"
		},
		"31392": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableEntityDateColumns"
		},
		"31393": {
			"sourceFileName": "../../../packages/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"31394": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"31395": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31396": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31397": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"31398": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"31399": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"31400": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"31401": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31402": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"31403": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"31404": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31405": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"31406": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"31407": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EventHandler"
		},
		"31408": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31409": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31410": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"31411": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"31412": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"31413": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EmitData"
		},
		"31414": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31415": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"31416": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"31417": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"31418": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"31419": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"31420": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31421": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"31422": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31423": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"31424": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"31425": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"31426": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"31427": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"31428": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"31429": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"31430": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31431": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"31432": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"31433": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"31434": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"31435": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"31436": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31437": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"31438": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"31439": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31440": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"31441": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"31442": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"31443": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"31444": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"31445": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"31446": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"31447": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"31448": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"31449": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"31450": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"31451": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"31452": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"31453": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"31454": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"31455": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"31456": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"31457": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"31458": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"31459": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"31460": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "event"
		},
		"31461": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"31462": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "options"
		},
		"31463": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"31464": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"31465": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"31466": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"31467": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"31468": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"31469": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"31470": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"31471": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"31472": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"31473": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"31474": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"31475": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"31476": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"31477": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"31478": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"31479": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"31480": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"31481": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"31482": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"31483": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"31484": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"31485": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"31486": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"31487": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"31488": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"31489": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"31490": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"31491": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"31492": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"31493": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"31494": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"31495": {
			"sourceFileName": "../../../packages/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"31496": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"31497": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"31498": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"31499": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"31500": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"31501": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"31502": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"31503": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"31504": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"31505": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"31506": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"31507": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"31508": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"31509": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"31510": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"31511": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"31512": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"31513": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"31514": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"31515": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"31516": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"31517": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31518": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31519": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"31520": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"31521": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31522": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31523": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"31524": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"31525": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31526": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31527": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"31528": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"31529": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31530": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31531": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"31532": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31533": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31534": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"31535": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"31536": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"31537": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31538": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31539": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"31540": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"31541": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"31542": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31543": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31544": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"31545": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"31546": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"31547": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31548": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31549": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"31550": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"31551": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"31552": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31553": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31554": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"31555": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"31556": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"31557": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31558": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31559": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"31560": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"31561": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31562": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31563": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"31564": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"31565": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31566": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31567": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"31568": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"31569": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31570": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"31571": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"31572": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"31573": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"31574": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31575": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31576": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"31577": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"31578": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"31579": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"31580": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE"
		},
		"31581": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"31582": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"31583": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"31584": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"31585": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"31586": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"31587": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31588": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"31589": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"31590": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"31591": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"31592": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"31593": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"31594": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"31595": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"31596": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"31597": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"31598": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31599": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"31600": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"31601": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"31602": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31603": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"31604": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"31605": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"31606": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"31607": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"31608": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"31609": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"31610": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31611": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"31612": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"31613": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"31614": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"31615": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"31616": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"31617": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"31618": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31619": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"31620": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"31621": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"31622": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"31623": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"31624": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"31625": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"31626": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"31627": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"31628": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"31629": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31630": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"31631": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"31632": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"31633": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"31634": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"31635": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"31636": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31637": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"31638": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"31639": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"31640": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"31641": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31642": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"31643": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"31644": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"31645": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31646": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"31647": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"31648": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"31649": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"31650": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"31651": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"31652": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31653": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31654": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"31655": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"31656": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"31657": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31658": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"31659": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"31660": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"31661": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31662": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"31663": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"31664": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"31665": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31666": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"31667": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"31668": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31669": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"31670": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"31671": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"31672": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"31673": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"31674": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"31675": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"31676": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"31677": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"31678": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"31679": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31680": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"31681": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"31682": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"31683": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31684": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"31685": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"31686": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"31687": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"31688": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"31689": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31690": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"31691": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"31692": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"31693": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31694": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"31695": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"31696": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.migrations"
		},
		"31697": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.models"
		},
		"31698": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"31699": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"31700": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"31701": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"31702": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"31703": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"31704": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"31705": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"31706": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"31707": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"31708": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31709": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"31710": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"31711": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"31712": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"31713": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"31714": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"31715": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"31716": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"31717": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"31718": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31719": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"31720": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"31721": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"31722": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"31723": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31724": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"31725": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"31726": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31727": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"31729": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"31730": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"31731": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31732": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"31733": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"31734": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"31735": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"31736": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"31750": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService"
		},
		"31751": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.__container__"
		},
		"31752": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.__container__"
		},
		"31753": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"31754": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"31755": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrObject"
		},
		"31756": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"31757": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31758": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"31759": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrObject"
		},
		"31760": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"31761": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31762": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.list"
		},
		"31763": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.list"
		},
		"31764": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "filters"
		},
		"31765": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31766": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31767": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"31768": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31769": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.listAndCount"
		},
		"31770": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.listAndCount"
		},
		"31771": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "filters"
		},
		"31772": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31773": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31774": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"31775": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31776": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"31777": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"31778": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"31779": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31780": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"31781": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"31782": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31783": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"31784": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"31785": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"31786": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31787": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"31788": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"31789": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31790": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"31791": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"31792": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"31793": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"31794": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31795": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31796": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.data"
		},
		"31797": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31798": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"31799": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"31800": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"31801": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"31802": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31803": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31804": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.data"
		},
		"31805": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31806": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"31807": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"31808": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"31809": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31810": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"31811": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"31812": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31813": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"31814": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"31815": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31816": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"31817": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"31818": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31819": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"31820": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"31821": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"31822": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"31823": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31824": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31825": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31826": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.softDelete"
		},
		"31827": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.softDelete"
		},
		"31828": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"31829": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31830": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31831": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.restore"
		},
		"31832": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.restore"
		},
		"31833": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"31834": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"31835": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31836": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"31837": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"31838": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"31839": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31840": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"31841": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"31842": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31843": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsertWithReplace"
		},
		"31844": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsertWithReplace"
		},
		"31845": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"31846": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"31847": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"31848": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.TEntity"
		},
		"31849": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"31850": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.TContainer"
		},
		"31851": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"31852": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"31853": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"31854": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"31855": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"31856": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"31857": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.provider_name"
		},
		"31858": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"31859": {
			"sourceFileName": "../../../packages/types/src/region__legacy/index.ts",
			"qualifiedName": ""
		},
		"31860": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "RegionDTO__legacy"
		},
		"31861": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.name"
		},
		"31862": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.currency_code"
		},
		"31863": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_rate"
		},
		"31864": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_code"
		},
		"31865": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.gift_cards_taxable"
		},
		"31866": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.automatic_taxes"
		},
		"31867": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_provider_id"
		},
		"31868": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"31869": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.includes_tax"
		},
		"31870": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"31871": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"31872": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"31873": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"31874": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"31875": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"31876": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"31877": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"31878": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"31879": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"31880": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"31881": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"31882": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"31883": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31884": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"31885": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"31886": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"31887": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31888": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"31889": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"31890": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31891": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"31892": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"31893": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"31894": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"31895": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31896": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"31897": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"31898": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"31899": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"31900": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31901": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"31902": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"31903": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"31904": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31905": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"31906": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"31907": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31908": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"31909": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"31910": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"31911": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"31912": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"31913": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"31914": {
			"sourceFileName": "../../../packages/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"31915": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"31916": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"31917": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"31918": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"31919": {
			"sourceFileName": "../../../packages/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"31920": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"31921": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"31922": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"31923": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"31924": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"31925": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"31926": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"31927": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"31928": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"31929": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"31930": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"31931": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"31932": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"31933": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"31934": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"31935": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"31936": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"31937": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_user_id"
		},
		"31938": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"31939": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"31940": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.email"
		},
		"31941": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"31942": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"31943": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"31944": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"31945": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"31946": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"31947": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"31948": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"31949": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"31950": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"31951": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"31952": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules_count"
		},
		"31953": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"31954": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"31955": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"31956": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"31957": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"31958": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"31959": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"31960": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"31961": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"31962": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"31963": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"31964": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"31965": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_attribute"
		},
		"31966": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"31967": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"31968": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"31969": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"31970": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"31971": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"31972": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"31973": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"31974": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"31975": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"31976": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"31977": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"31978": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"31979": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"31980": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"31981": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"31982": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"31983": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"31984": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"31985": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"31986": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"31987": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"31988": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"31989": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"31990": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"31991": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"31992": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"31993": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"31994": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"31995": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"31996": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"31997": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"31998": {
			"sourceFileName": "../../../packages/types/src/workflow/product-category/index.ts",
			"qualifiedName": ""
		},
		"31999": {
			"sourceFileName": "../../../packages/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoryWorkflowInput"
		},
		"32000": {
			"sourceFileName": "../../../packages/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoryWorkflowInput.product_category"
		},
		"32001": {
			"sourceFileName": "../../../packages/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoryWorkflowInput"
		},
		"32002": {
			"sourceFileName": "../../../packages/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoryWorkflowInput.id"
		},
		"32003": {
			"sourceFileName": "../../../packages/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoryWorkflowInput.data"
		},
		"32004": {
			"sourceFileName": "../../../packages/types/src/workflow/reservation/index.ts",
			"qualifiedName": ""
		},
		"32005": {
			"sourceFileName": "../../../packages/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput"
		},
		"32006": {
			"sourceFileName": "../../../packages/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput.reservations"
		},
		"32007": {
			"sourceFileName": "../../../packages/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowOutput"
		},
		"32008": {
			"sourceFileName": "../../../packages/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput"
		},
		"32009": {
			"sourceFileName": "../../../packages/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput.updates"
		},
		"32010": {
			"sourceFileName": "../../../packages/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowOutput"
		},
		"32011": {
			"sourceFileName": "../../../packages/types/src/http/index.ts",
			"qualifiedName": ""
		},
		"32012": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse"
		},
		"32013": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.id"
		},
		"32014": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.name"
		},
		"32015": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.description"
		},
		"32016": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.currency"
		},
		"32017": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.campaign_identifier"
		},
		"32018": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.starts_at"
		},
		"32019": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.ends_at"
		},
		"32020": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "CampaignResponse.budget"
		},
		"32021": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "__type"
		},
		"32022": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "__type.id"
		},
		"32023": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "__type.type"
		},
		"32024": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "__type.limit"
		},
		"32025": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "__type.used"
		},
		"32026": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "AdminCampaignListResponse"
		},
		"32027": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "AdminCampaignListResponse.campaigns"
		},
		"32028": {
			"sourceFileName": "../../../packages/types/src/http/common/paginated-response.ts",
			"qualifiedName": "PaginatedResponse.limit"
		},
		"32029": {
			"sourceFileName": "../../../packages/types/src/http/common/paginated-response.ts",
			"qualifiedName": "PaginatedResponse.offset"
		},
		"32030": {
			"sourceFileName": "../../../packages/types/src/http/common/paginated-response.ts",
			"qualifiedName": "PaginatedResponse.count"
		},
		"32031": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "AdminCampaignResponse"
		},
		"32032": {
			"sourceFileName": "../../../packages/types/src/http/campaign/admin/campaign.ts",
			"qualifiedName": "AdminCampaignResponse.campaign"
		},
		"32033": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "AdminProductCategoryResponse"
		},
		"32034": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "AdminProductCategoryResponse.product_category"
		},
		"32035": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "AdminProductCategoryListResponse"
		},
		"32036": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "AdminProductCategoryListResponse.product_categories"
		},
		"32037": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"32038": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"32039": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"32040": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationAddressResponse"
		},
		"32041": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type"
		},
		"32042": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.id"
		},
		"32043": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"32044": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"32045": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.company"
		},
		"32046": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"32047": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.city"
		},
		"32048": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.phone"
		},
		"32049": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"32050": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.province"
		},
		"32051": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"32052": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"32053": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"32054": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"32055": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse"
		},
		"32056": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.id"
		},
		"32057": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.name"
		},
		"32058": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.metadata"
		},
		"32059": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.address_id"
		},
		"32060": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.address"
		},
		"32061": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.created_at"
		},
		"32062": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.updated_at"
		},
		"32063": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.deleted_at"
		},
		"32064": {
			"sourceFileName": "../../../packages/types/src/http/stock-locations/common.ts",
			"qualifiedName": "AdminStockLocationResponse.fulfillment_sets"
		},
		"32065": {
			"sourceFileName": "../../../packages/types/src/file/index.ts",
			"qualifiedName": ""
		},
		"32066": {
			"sourceFileName": "../../../packages/types/src/file/common.ts",
			"qualifiedName": "FileDTO"
		},
		"32067": {
			"sourceFileName": "../../../packages/types/src/file/common.ts",
			"qualifiedName": "FileDTO.id"
		},
		"32068": {
			"sourceFileName": "../../../packages/types/src/file/common.ts",
			"qualifiedName": "FileDTO.url"
		},
		"32069": {
			"sourceFileName": "../../../packages/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO"
		},
		"32070": {
			"sourceFileName": "../../../packages/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.filename"
		},
		"32071": {
			"sourceFileName": "../../../packages/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.mimeType"
		},
		"32072": {
			"sourceFileName": "../../../packages/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.content"
		},
		"32073": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService"
		},
		"32074": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.create"
		},
		"32075": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.create"
		},
		"32076": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"32077": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32078": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.create"
		},
		"32079": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"32080": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32081": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.delete"
		},
		"32082": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.delete"
		},
		"32083": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "ids"
		},
		"32084": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32085": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.delete"
		},
		"32086": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"32087": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32088": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieve"
		},
		"32089": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieve"
		},
		"32090": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"32091": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"32092": {
			"sourceFileName": "../../../packages/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32106": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "ProviderFileResultDTO"
		},
		"32107": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.url"
		},
		"32108": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.key"
		},
		"32109": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "ProviderGetFileDTO"
		},
		"32110": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"32111": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"32112": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "ProviderDeleteFileDTO"
		},
		"32113": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"32114": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "ProviderUploadFileDTO"
		},
		"32115": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.filename"
		},
		"32116": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.mimeType"
		},
		"32117": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "__type.content"
		},
		"32118": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider"
		},
		"32119": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"32120": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"32121": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "file"
		},
		"32122": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"32123": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"32124": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"32125": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"32126": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"32127": {
			"sourceFileName": "../../../packages/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"32128": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"32129": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"32130": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"32131": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"32132": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"32133": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"32134": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"32135": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"32136": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"32137": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"32138": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"32139": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"32140": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"32141": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"32142": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"32143": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"32144": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"32145": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"32146": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"32147": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"32148": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"32149": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"32150": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"32151": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"32152": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"32153": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"32154": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"32155": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"32156": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"32157": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"32158": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"32159": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"32160": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"32161": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"32162": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"32163": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"32164": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"32165": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"32166": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"32167": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"32168": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"32169": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"32170": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"32171": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"32172": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"32173": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"32174": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"32175": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"32176": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"32177": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"32178": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"32179": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"32180": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"32181": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"32182": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"32183": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"32184": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"32185": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"32186": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"32187": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"32188": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"32190": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"32191": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"32192": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"32193": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"32194": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"32196": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions"
		},
		"32197": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfKeyNotFound"
		},
		"32198": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfRelationNotFound"
		},
		"32199": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"32200": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"32202": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"32203": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"32204": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"32205": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"32206": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"32207": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"32208": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"32209": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"32210": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"32211": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"32212": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"32213": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"32214": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule"
		},
		"32215": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"32216": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"32217": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"32218": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"32219": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"32220": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"32221": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"32222": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"32223": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"32224": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"32225": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"32226": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"32227": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"32228": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"32229": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"32230": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"32231": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"32232": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"32233": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"32234": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"32235": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"32236": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"32237": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"32238": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"32239": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"32240": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"32241": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"32242": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"32243": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"32244": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"32245": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"32246": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"32247": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"32248": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"32262": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"32263": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"32264": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeAncestorsTree"
		},
		"32265": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"32266": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"32267": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"32268": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"32269": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"32270": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"32271": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"32272": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"32274": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"32275": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"32276": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"32277": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"32278": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"32279": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"32280": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"32281": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"32282": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"32283": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"32284": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"32285": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"32286": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"32287": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"32288": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"32289": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"32290": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"32291": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"32292": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"32293": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"32294": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"32295": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"32296": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"32297": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"32298": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"32299": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"32300": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "CartLikeWithTotals"
		},
		"32301": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type"
		},
		"32302": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_subtotal"
		},
		"32303": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_tax_total"
		},
		"32304": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.item_total"
		},
		"32305": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.item_subtotal"
		},
		"32306": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"32307": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_total"
		},
		"32308": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_subtotal"
		},
		"32309": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_tax_total"
		},
		"32310": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.total"
		},
		"32311": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.subtotal"
		},
		"32312": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.tax_total"
		},
		"32313": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_total"
		},
		"32314": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_tax_total"
		},
		"32315": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"32316": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"32317": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"32318": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_subtotal"
		},
		"32319": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"32320": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_total"
		},
		"32321": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_subtotal"
		},
		"32322": {
			"sourceFileName": "../../../packages/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_tax_total"
		},
		"32323": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"32324": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"32325": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"32326": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"32328": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"32329": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"32330": {
			"sourceFileName": "../../../packages/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO"
		},
		"32331": {
			"sourceFileName": "../../../packages/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.location_id"
		},
		"32332": {
			"sourceFileName": "../../../packages/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.fulfillment_set_data"
		},
		"32333": {
			"sourceFileName": "../../../packages/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type"
		},
		"32334": {
			"sourceFileName": "../../../packages/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"32335": {
			"sourceFileName": "../../../packages/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.type"
		},
		"32336": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductVariantWorkflowInputDTO"
		},
		"32337": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"32338": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"32339": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
		},
		"32340": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"32341": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"32342": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductWorkflowInputDTO"
		},
		"32343": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"32344": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"32345": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"32346": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"32347": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.variants"
		},
		"32348": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductWorkflowInputDTO"
		},
		"32349": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"32350": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"32351": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"32352": {
			"sourceFileName": "../../../packages/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"32353": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"32354": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"32355": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"32356": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"32357": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"32358": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"32359": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"32360": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"32361": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"32362": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32363": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"32364": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32365": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"32366": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32367": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"32368": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32369": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"32371": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32372": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"32373": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"32374": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"32375": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32376": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"32377": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32378": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32379": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"32380": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32381": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32382": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"32383": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"32384": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"32385": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"32386": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"32387": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32388": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"32389": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"32390": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32391": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"32392": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"32393": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"32394": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32395": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"32396": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"32397": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"32398": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"32399": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"32400": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"32401": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"32402": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"32403": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"32404": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"32405": {
			"sourceFileName": "../../../packages/types/src/http/common/paginated-response.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"32406": {
			"sourceFileName": "../../../packages/types/src/http/common/paginated-response.ts",
			"qualifiedName": "PaginatedResponse.limit"
		},
		"32407": {
			"sourceFileName": "../../../packages/types/src/http/common/paginated-response.ts",
			"qualifiedName": "PaginatedResponse.offset"
		},
		"32408": {
			"sourceFileName": "../../../packages/types/src/http/common/paginated-response.ts",
			"qualifiedName": "PaginatedResponse.count"
		},
		"32409": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse"
		},
		"32410": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.id"
		},
		"32411": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.name"
		},
		"32412": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.description"
		},
		"32413": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.handle"
		},
		"32414": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.is_active"
		},
		"32415": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.is_internal"
		},
		"32416": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.rank"
		},
		"32417": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.parent_category_id"
		},
		"32418": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.created_at"
		},
		"32419": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.updated_at"
		},
		"32420": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.parent_category"
		},
		"32421": {
			"sourceFileName": "../../../packages/types/src/http/product-category/admin/product-category.ts",
			"qualifiedName": "ProductCategoryResponse.category_children"
		},
		"32422": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"32423": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32424": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"32425": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"32426": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"32427": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32428": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"32429": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32430": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"32431": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32432": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"32433": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32434": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"32435": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32436": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"32437": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32438": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"32439": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32440": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"32441": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}