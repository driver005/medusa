{
	"id": 11828,
	"name": "tax",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 11985,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 11986,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 11996,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 11987,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11988,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 11989,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 11990,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 11991,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 11992,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 11993,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 11994,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11995,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11986,
						11987,
						11988,
						11989,
						11990,
						11994,
						11995
					]
				}
			],
			"typeParameters": [
				{
					"id": 11996,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 12213,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 12214,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12216,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12216,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 12215,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12216,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12216,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12214,
						12215
					]
				}
			],
			"typeParameters": [
				{
					"id": 12216,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 12022,
					"name": "FilterableTaxRateProps"
				},
				{
					"type": "reference",
					"target": 12084,
					"name": "FilterableTaxRegionProps"
				},
				{
					"type": "reference",
					"target": 12111,
					"name": "FilterableTaxRateRuleProps"
				}
			]
		},
		{
			"id": 12168,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 12169,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12170,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12169
					]
				}
			],
			"typeParameters": [
				{
					"id": 12170,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 12059,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 12060,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12061,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12060
					]
				}
			],
			"typeParameters": [
				{
					"id": 12061,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 12287,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12288,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12288,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 12288,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 12319,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 12323,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12288,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 12329,
					"typeArguments": [
						{
							"type": "reference",
							"target": 12288,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 12289,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12290,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 12290,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 12290,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 12290,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 12319,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12320,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12321,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 12322,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										12321
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 12344,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12345,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12345,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 12345,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 12345,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 12334,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12343,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12343,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 12335,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 12336,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									12336
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 12344,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 12343,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 12337,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12338,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12338
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 12344,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 12343,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 12339,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 12340,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											12340
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 12344,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 12343,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 12341,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 12342,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												12342
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 12344,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 12217,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12238,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12218,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12219,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12287,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12238,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12220,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12287,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12238,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12221,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 12289,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12238,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12289,
											"typeArguments": [
												{
													"type": "reference",
													"target": 12238,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 12222,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 12289,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12238,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12223,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12289,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12238,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12224,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12289,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12238,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 12225,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 12287,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12238,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12226,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 12289,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12238,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12227,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 12289,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12238,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12228,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 12289,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12238,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12229,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 12289,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12238,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12230,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12231,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12232,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12233,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12234,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 12235,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 12236,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 12237,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12219,
								12220,
								12221,
								12222,
								12223,
								12224,
								12225,
								12226,
								12227,
								12228,
								12229,
								12230,
								12231,
								12232,
								12233,
								12234,
								12235,
								12236,
								12237
							]
						}
					]
				}
			}
		},
		{
			"id": 12332,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12333,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 12333,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 12289,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12333,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 12334,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12333,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 12329,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12330,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 12217,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12332,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12330,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 12332,
						"typeArguments": [
							{
								"type": "reference",
								"target": 12330,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12332,
							"typeArguments": [
								{
									"type": "reference",
									"target": 12330,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 12331,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 12323,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12327,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 12328,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 12328,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 12327,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 12327,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 12327,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 12217,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 12327,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 12327,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 12324,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignature": {
											"id": 12325,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 12326,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "V"
											}
										}
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 12323,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 12328,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 12331,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 12309,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12318,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12310,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12311,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 12312,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 12313,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12314,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12315,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12316,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												12313,
												12314,
												12315,
												12316
											]
										}
									]
								}
							}
						},
						{
							"id": 12317,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 12318,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12311,
								12317
							]
						}
					]
				}
			}
		},
		{
			"id": 12264,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12269,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12265,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12266,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12267,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 12309,
								"typeArguments": [
									{
										"type": "reference",
										"target": 12269,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "MessageBody",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12268,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12266,
								12267,
								12268
							]
						}
					]
				}
			}
		},
		{
			"id": 12276,
			"name": "MessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 12286,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12277,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12278,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12279,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 12280,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 12281,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12282,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12283,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12284,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												12281,
												12282,
												12283,
												12284
											]
										}
									]
								}
							}
						},
						{
							"id": 12285,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 12286,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12286,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12278,
								12279,
								12285
							]
						}
					]
				}
			}
		},
		{
			"id": 12299,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12300,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12301,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12302,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12303,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12304,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12305,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12306,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12307,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12308,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12301,
								12302,
								12303,
								12304,
								12305,
								12306,
								12307,
								12308
							]
						}
					]
				}
			}
		},
		{
			"id": 12296,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12297,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12298,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12297,
						12298
					]
				}
			]
		},
		{
			"id": 12246,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12247,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12248,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 12296,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 12296,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 12249,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 12250,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 12251,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 12252,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														12251,
														12252
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 12253,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12254,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 12299,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 12255,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 12256,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 12257,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 12258,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 12299,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											12257,
											12258
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 12259,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12247,
						12248,
						12249,
						12253,
						12254,
						12255,
						12259
					]
				}
			]
		},
		{
			"id": 12171,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 12246,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12172,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12173,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12174,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12260,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12175,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 12176,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 12177,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 12178,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 12179,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 12180,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 12181,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 12182,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							12180,
																							12181,
																							12182
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 12183,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 12260,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															12177,
															12178,
															12183
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 12184,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12185,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12186,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 12187,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 12188,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 12189,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 12190,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 12191,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 12192,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 12193,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 12194,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 12195,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		},
																		{
																			"id": 12196,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 12197,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 12198,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				12195,
																				12196,
																				12197,
																				12198
																			]
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														12191,
														12192,
														12193
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12173,
										12174,
										12175,
										12184,
										12185,
										12186,
										12187,
										12188,
										12189
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 12260,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 12299,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12261,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12262,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 12263,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12262,
										12263
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 11971,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 11829,
					"name": "ITaxModuleService"
				}
			]
		},
		{
			"id": 12270,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12271,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12272,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 12273,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 12274,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 12275,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12271,
						12272
					]
				}
			]
		},
		{
			"id": 12199,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12200,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 12201,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 12202,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 12264,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 12264,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 12203,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 12204,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 12205,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 12270,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12264,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12206,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 12207,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 12208,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 12209,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 12210,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 12211,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 12276,
												"typeArguments": [
													{
														"type": "reference",
														"target": 12210,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 12276,
													"typeArguments": [
														{
															"type": "reference",
															"target": 12210,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 12212,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						12200,
						12203,
						12206,
						12208
					]
				}
			]
		},
		{
			"id": 12010,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 12011,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 12012,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12021,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 12013,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12021,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 12014,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12015,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12016,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12017,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12018,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12199,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12019,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12020,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12011,
						12012,
						12013,
						12014,
						12015,
						12016,
						12017,
						12018,
						12019,
						12020
					]
				}
			],
			"typeParameters": [
				{
					"id": 12021,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 11997,
			"name": "TaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate details."
					}
				]
			},
			"children": [
				{
					"id": 11998,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 11999,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 12000,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code the tax rate is identified by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12001,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Tax Rate."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nVAT\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12002,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12003,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12004,
					"name": "is_combinable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate should be combined with parent rates.\n\nLearn more [here](https://docs.medusajs.com/experimental/tax/tax-rates-and-rules/#combinable-tax-rates)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12005,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is the default rate for the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12006,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12007,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12008,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12009,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate. For example, the ID of the user that created the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						11998,
						11999,
						12000,
						12001,
						12002,
						12003,
						12004,
						12005,
						12006,
						12007,
						12008,
						12009
					]
				}
			]
		},
		{
			"id": 12022,
			"name": "FilterableTaxRateProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved tax rates."
					}
				]
			},
			"children": [
				{
					"id": 12031,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12022,
									"name": "FilterableTaxRateProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12022,
											"name": "FilterableTaxRateProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12214,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 12032,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12022,
									"name": "FilterableTaxRateProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12022,
											"name": "FilterableTaxRateProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12215,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 12023,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the tax rates by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12024,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their associated tax regions."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12025,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12026,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12027,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12028,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12217,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12029,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12217,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12030,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rates by who created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12031,
						12032,
						12023,
						12024,
						12025,
						12026,
						12027,
						12028,
						12029,
						12030
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12213,
					"typeArguments": [
						{
							"type": "reference",
							"target": 12022,
							"name": "FilterableTaxRateProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12074,
			"name": "TaxRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax region details."
					}
				]
			},
			"children": [
				{
					"id": 12075,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12076,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12077,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12078,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax region's parent tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12079,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12080,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12081,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12082,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax region. For example, the ID of the user\nthat created the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12083,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12075,
						12076,
						12077,
						12078,
						12079,
						12080,
						12081,
						12082,
						12083
					]
				}
			]
		},
		{
			"id": 12084,
			"name": "FilterableTaxRegionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved tax regions."
					}
				]
			},
			"children": [
				{
					"id": 12093,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12084,
									"name": "FilterableTaxRegionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12084,
											"name": "FilterableTaxRegionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12214,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 12094,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12084,
									"name": "FilterableTaxRegionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12084,
											"name": "FilterableTaxRegionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12215,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 12085,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the tax regions by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 12086,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their country code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12087,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their province code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12088,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by the ID of their parent tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12089,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their metadata."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Record"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									],
									"name": "Record",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 12090,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12217,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12091,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12217,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12092,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax regions by who created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12093,
						12094,
						12085,
						12086,
						12087,
						12088,
						12089,
						12090,
						12091,
						12092
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12213,
					"typeArguments": [
						{
							"type": "reference",
							"target": 12084,
							"name": "FilterableTaxRegionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12101,
			"name": "TaxRateRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate rule details."
					}
				]
			},
			"children": [
				{
					"id": 12102,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax rate rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12103,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The snake-case name of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`product`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/experimental/tax/tax-rates-and-rules/#what-are-tax-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12104,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the record of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`prod_123`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/experimental/tax/tax-rates-and-rules/#what-are-tax-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12105,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12106,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 11997,
						"name": "TaxRateDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12107,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12108,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the tax rate rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12109,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the tax rate rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 12110,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate rule. For example, the ID of the user\nthat created the tax rate rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12102,
						12103,
						12104,
						12105,
						12106,
						12107,
						12108,
						12109,
						12110
					]
				}
			]
		},
		{
			"id": 12111,
			"name": "FilterableTaxRateRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved tax rate rules."
					}
				]
			},
			"children": [
				{
					"id": 12120,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12111,
									"name": "FilterableTaxRateRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12111,
											"name": "FilterableTaxRateRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12214,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 12121,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 12111,
									"name": "FilterableTaxRateRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 12213,
									"typeArguments": [
										{
											"type": "reference",
											"target": 12111,
											"name": "FilterableTaxRateRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12215,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 12112,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by what it references."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12113,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by the ID of the record it references."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12114,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by the ID of their associated tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 12115,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by their associated tax rate."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12022,
						"name": "FilterableTaxRateProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12116,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by what its metadata."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Record"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									],
									"name": "Record",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 12117,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by its creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12217,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12118,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by its update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12217,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12119,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax rate rule by who created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 12217,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12120,
						12121,
						12112,
						12113,
						12114,
						12115,
						12116,
						12117,
						12118,
						12119
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12213,
					"typeArguments": [
						{
							"type": "reference",
							"target": 12111,
							"name": "FilterableTaxRateRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12122,
			"name": "TaxableItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The taxable item details."
					}
				]
			},
			"children": [
				{
					"id": 12123,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the taxable item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12124,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12125,
					"name": "product_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the item's product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12126,
					"name": "product_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the category of the item's product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12127,
					"name": "product_categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The categories of the item's product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 12128,
					"name": "product_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the item's product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12129,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the item's product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12130,
					"name": "product_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the type of the item's product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12131,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the taxable item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12239,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12132,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the taxable item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12239,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12133,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the taxable item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12123,
						12124,
						12125,
						12126,
						12127,
						12128,
						12129,
						12130,
						12131,
						12132,
						12133
					]
				}
			]
		},
		{
			"id": 12134,
			"name": "TaxableShippingDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The taxable shipping details."
					}
				]
			},
			"children": [
				{
					"id": 12135,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the taxable shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12136,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12137,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the taxable shipping."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 12239,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 12138,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the taxable shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12135,
						12136,
						12137,
						12138
					]
				}
			]
		},
		{
			"id": 12139,
			"name": "TaxCalculationContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context provided when tax lines are calculated and retrieved. This\ncontext is later passed to the underlying tax provider."
					}
				]
			},
			"children": [
				{
					"id": 12140,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's address"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 12141,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12142,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ISO 2 character currency code."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12143,
									"name": "province_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province code."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 12144,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first line of the address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12145,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second line of the address"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 12146,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12147,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12142,
										12143,
										12144,
										12145,
										12146,
										12147
									]
								}
							]
						}
					}
				},
				{
					"id": 12148,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's details."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 12149,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12150,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the customer."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12151,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The email of the customer."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12152,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The groups that the customer belongs to."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12150,
										12151,
										12152
									]
								}
							]
						}
					}
				},
				{
					"id": 12153,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax lines are calculated for an order return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12140,
						12148,
						12153
					]
				}
			]
		},
		{
			"id": 12240,
			"name": "TaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax line details."
					}
				]
			},
			"children": [
				{
					"id": 12241,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12242,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 12243,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12244,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12245,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider used to calculate and retrieve the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12241,
						12242,
						12243,
						12244,
						12245
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 12154,
					"name": "ItemTaxLineDTO"
				},
				{
					"type": "reference",
					"target": 12161,
					"name": "ShippingTaxLineDTO"
				}
			]
		},
		{
			"id": 12154,
			"name": "ItemTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The item tax line details."
					}
				]
			},
			"children": [
				{
					"id": 12156,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12241,
						"name": "TaxLineDTO.rate_id"
					}
				},
				{
					"id": 12157,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12242,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 12158,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12243,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 12159,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12244,
						"name": "TaxLineDTO.name"
					}
				},
				{
					"id": 12160,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider used to calculate and retrieve the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12245,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 12155,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12156,
						12157,
						12158,
						12159,
						12160,
						12155
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12240,
					"name": "TaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12161,
			"name": "ShippingTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping tax line details."
					}
				]
			},
			"children": [
				{
					"id": 12163,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12241,
						"name": "TaxLineDTO.rate_id"
					}
				},
				{
					"id": 12164,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12242,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 12165,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12243,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 12166,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12244,
						"name": "TaxLineDTO.name"
					}
				},
				{
					"id": 12167,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider used to calculate and retrieve the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 12245,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 12162,
					"name": "shipping_line_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping line's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12163,
						12164,
						12165,
						12166,
						12167,
						12162
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12240,
					"name": "TaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12033,
			"name": "CreateTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate to be created."
					}
				]
			},
			"children": [
				{
					"id": 12034,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12035,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 12036,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12037,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12038,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 12095,
									"name": "CreateTaxRateRuleDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "tax_rate_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 12039,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12040,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate. For example, the ID of the user\nthat created the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12041,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12034,
						12035,
						12036,
						12037,
						12038,
						12039,
						12040,
						12041
					]
				}
			]
		},
		{
			"id": 12051,
			"name": "UpsertTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the tax rate to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 12052,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax rate. If not provided, the tax rate\nis created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12053,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 12054,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12055,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12056,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12057,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate. For example, the\nID of the user that created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12058,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12052,
						12053,
						12054,
						12055,
						12056,
						12057,
						12058
					]
				}
			]
		},
		{
			"id": 12042,
			"name": "UpdateTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 12043,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate to charge."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 12044,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12045,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12046,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 12095,
									"name": "CreateTaxRateRuleDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "tax_rate_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 12047,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12048,
					"name": "is_combinable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the tax rate is combinable.\n\nLearn more [here](https://docs.medusajs.com/experimental/tax/tax-rates-and-rules/#combinable-tax-rates)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 12050,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12043,
						12044,
						12045,
						12046,
						12047,
						12048,
						12050
					]
				}
			]
		},
		{
			"id": 12062,
			"name": "CreateTaxRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax region to be created."
					}
				]
			},
			"children": [
				{
					"id": 12063,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character country code of the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12064,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the tax region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12065,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax region's parent."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 12066,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 12067,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax region. For example, the ID of\nthe user that created the tax region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12068,
					"name": "default_tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default tax rate of the tax region."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 12069,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12070,
									"name": "rate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rate to charge."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n10\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 12071,
									"name": "code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The code of the tax rate."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 12072,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the tax rate."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12073,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12070,
										12071,
										12072,
										12073
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12063,
						12064,
						12065,
						12066,
						12067,
						12068
					]
				}
			]
		},
		{
			"id": 12095,
			"name": "CreateTaxRateRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate rule to be created."
					}
				]
			},
			"children": [
				{
					"id": 12096,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The snake-case name of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`product`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/experimental/tax/tax-rates-and-rules/#what-are-tax-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12097,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the record of the data model that the tax rule references.\nFor example, "
							},
							{
								"kind": "code",
								"text": "`prod_123`"
							},
							{
								"kind": "text",
								"text": ".\n\nLearn more in [this guide](https://docs.medusajs.com/experimental/tax/tax-rates-and-rules/#what-are-tax-rules)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12098,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12099,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 12100,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the tax rate rule. For example, the ID of the\nuser that created it."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12096,
						12097,
						12098,
						12099,
						12100
					]
				}
			]
		},
		{
			"id": 11829,
			"name": "ITaxModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Tax Module."
					}
				]
			},
			"children": [
				{
					"id": 11830,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11831,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a tax by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved tax."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a tax rate by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.retrieve(\"txr_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.retrieve(\"txr_123\", {\n  relations: [\"tax_region\"],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11832,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11833,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11985,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11997,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11834,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11997,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11835,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11836,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax rates based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax rates using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.list({\n  id: [\"txr_123\", \"txr_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax rate:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.list(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.list(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11837,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax rates."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12022,
										"name": "FilterableTaxRateProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11838,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11985,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11997,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11839,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11997,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11840,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11841,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax rates along with the total count of available tax rates satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax rates along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax rates using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [taxRates, count] = await taxModuleService.listAndCount(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax rate:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [taxRates, count] = await taxModuleService.listAndCount(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [taxRates, count] = await taxModuleService.listAndCount(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_region\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11842,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax rates."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12022,
										"name": "FilterableTaxRateProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11843,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11985,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11997,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11844,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 11997,
													"name": "TaxRateDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11845,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11846,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates tax rates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.create([\n  {\n    tax_region_id: \"txreg_123\",\n    name: \"Default rate\",\n    rate: 10,\n  },\n  {\n    tax_region_id: \"txreg_123\",\n    name: \"Custom rate\",\n    rate: 15,\n    rules: [\n      {\n        reference: \"product_type\",\n        reference_id: \"ptyp_1\",\n      },\n      {\n        reference: \"product\",\n        reference_id: \"prod_123\",\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11847,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rates to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12033,
											"name": "CreateTaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11848,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11997,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11849,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a tax rate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rate."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.create({\n  tax_region_id: \"txreg_123\",\n  name: \"Default rate\",\n  rate: 10,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11850,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12033,
										"name": "CreateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11851,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11997,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11852,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11853,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing tax rate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax rate."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.update(\"txr_123\", {\n  rate: 10,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11854,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11855,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12042,
										"name": "UpdateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11856,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11997,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11857,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing tax rates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.update(\n  [\"txr_123\", \"txr_321\"],\n  {\n    rate: 10,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11858,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of tax rates to update."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11859,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12042,
										"name": "UpdateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11860,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11997,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11861,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing tax rates matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.update(\n  {\n    id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    rate: 10,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11862,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which tax rates to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12022,
										"name": "FilterableTaxRateProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11863,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the tax rate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12042,
										"name": "UpdateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11864,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11997,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11865,
					"name": "upsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11866,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a tax rate if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated tax rate."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRate = await taxModuleService.upsert({\n  id: \"txr_123\",\n  rate: 10,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11867,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the tax rate to be created or updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12051,
										"name": "UpsertTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11868,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 11997,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11869,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates tax rates if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated tax rates."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRates = await taxModuleService.upsert([\n  {\n    id: \"txr_123\",\n    rate: 10,\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11870,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the tax rates to be created or updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12051,
											"name": "UpsertTaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11871,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 11997,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11872,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11873,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes tax rates by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rates are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.delete([\"txr_123\", \"txr_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11874,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of tax rates to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11875,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11876,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a tax rate by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rate is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.delete(\"txr_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11877,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11878,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11879,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11880,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted tax rates by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated rules.\nThe object's keys are the ID attribute names of the tax rate entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`rule_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the tax rate through this relation,\nsuch as the IDs of associated rules.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.restore([\"txr_123\", \"txr_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 11881,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11882,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rates."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11883,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tax. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tax rate's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12059,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11881,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11884,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11885,
					"name": "createTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11886,
							"name": "createTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a tax region."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRegion = await taxModuleService.createTaxRegions({\n  country_code: \"us\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11887,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax region to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12062,
										"name": "CreateTaxRegionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11888,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 12074,
										"name": "TaxRegionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11889,
							"name": "createTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates tax regions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.createTaxRegions([\n  {\n    country_code: \"us\",\n  },\n  {\n    country_code: \"gb\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11890,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax regions to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12062,
											"name": "CreateTaxRegionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11891,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12074,
											"name": "TaxRegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11892,
					"name": "deleteTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11893,
							"name": "deleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes tax regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax regions are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRegions([\n  \"txreg_123\",\n  \"txreg_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11894,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax regions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11895,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11896,
							"name": "deleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a tax region by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax region is successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRegions(\"txreg_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11897,
									"name": "taxRegionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax region's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11898,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11899,
					"name": "listTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11900,
							"name": "listTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax regions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax regions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax regions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.listTaxRegions({\n  id: [\"txreg_123\", \"txreg_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax region:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.listTaxRegions(\n  {\n    id: [\"txreg_123\", \"txreg_321\"],\n  },\n  {\n    relations: [\"tax_rates\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRegions = await taxModuleService.listTaxRegions(\n  {\n    id: [\"txreg_123\", \"txreg_321\"],\n  },\n  {\n    relations: [\"tax_rates\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11901,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax regions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12084,
										"name": "FilterableTaxRegionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11902,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax region is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax region."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11985,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12074,
												"name": "TaxRegionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11903,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12074,
											"name": "TaxRegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11904,
					"name": "createTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11905,
							"name": "createTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a tax rate rule."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rate rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRule = await taxModuleService.createTaxRateRules(\n  {\n    reference: \"product_type\",\n    reference_id: \"ptyp_123\",\n    tax_rate_id: \"txr_123\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11906,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rule to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12095,
										"name": "CreateTaxRateRuleDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11907,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 12101,
										"name": "TaxRateRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11908,
							"name": "createTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates tax rate rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created tax rate rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules =\n  await taxModuleService.createTaxRateRules([\n    {\n      reference: \"product_type\",\n      reference_id: \"ptyp_123\",\n      tax_rate_id: \"txr_123\",\n    },\n    {\n      reference: \"product\",\n      reference_id: \"prod_123\",\n      tax_rate_id: \"txr_321\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11909,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rules to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12095,
											"name": "CreateTaxRateRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 11910,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12101,
											"name": "TaxRateRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11911,
					"name": "deleteTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11912,
							"name": "deleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a tax rate rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rate rule is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRateRules(\"txrule_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11913,
									"name": "taxRateRuleId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rule's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11914,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 11915,
							"name": "deleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes tax rate rules by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the tax rate rules are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.deleteTaxRateRules([\n  \"txrule_123\",\n  \"txrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11916,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax rate rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11917,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11918,
					"name": "listTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11919,
							"name": "listTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of tax rate rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of tax rate rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of tax rate rules using their associated tax rate's ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules = await taxModuleService.listTaxRateRules({\n  tax_rate_id: [\"txr_123\", \"txr_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the tax rate rule:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules = await taxModuleService.listTaxRateRules(\n  {\n    tax_rate_id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_rate\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst taxRateRules = await taxModuleService.listTaxRateRules(\n  {\n    tax_rate_id: [\"txr_123\", \"txr_321\"],\n  },\n  {\n    relations: [\"tax_rate\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11920,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved tax rate rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12111,
										"name": "FilterableTaxRateRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11921,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the tax rate rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a tax rate rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 11985,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12101,
												"name": "TaxRateRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11922,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12101,
											"name": "TaxRateRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11923,
					"name": "getTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11924,
							"name": "getTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves tax lines for taxable items and shipping methods in a cart.\n\nLearn more in [this guide](https://docs.medusajs.com/experimental/tax/tax-calculation-with-provider/)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The item and shipping methods' tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst taxLines = await taxModuleService.getTaxLines(\n  [\n    {\n      id: \"cali_123\",\n      product_id: \"prod_123\",\n      unit_price: 1000,\n      quantity: 1,\n    },\n    {\n      id: \"casm_123\",\n      shipping_option_id: \"so_123\",\n      unit_price: 2000,\n    },\n  ],\n  {\n    address: {\n      country_code: \"us\",\n    },\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11925,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The items and shipping methods to retrieve their tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 12122,
													"name": "TaxableItemDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": 12134,
													"name": "TaxableShippingDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								},
								{
									"id": 11926,
									"name": "calculationContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context to pass to the underlying tax provider. It provides more\ndetails that are useful to provide accurate tax lines."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12139,
										"name": "TaxCalculationContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11927,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 12154,
													"name": "ItemTaxLineDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": 12161,
													"name": "ShippingTaxLineDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11928,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11929,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes tax raes by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated rules.\nThe object's keys are the ID attribute names of the tax rate entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the tax rate through this relation, such as the IDs of associated rules.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.softDelete([\"txr_123\", \"txr_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 11930,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11931,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rates."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11932,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12168,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11930,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11933,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11934,
					"name": "softDeleteTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11935,
							"name": "softDeleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes tax regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated tax rates.\nThe object's keys are the ID attribute names of the tax region entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_rate_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the tax region through this relation, such as the IDs of associated tax rates.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.softDeleteTaxRegions([\n  \"txreg_123\",\n  \"txreg_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 11936,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11937,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax regions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11938,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12168,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11936,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11939,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11940,
					"name": "restoreTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11941,
							"name": "restoreTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted tax regions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated tax rates.\nThe object's keys are the ID attribute names of the tax region entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_rate_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the tax region through this relation,\nsuch as the IDs of associated tax rates.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.restoreTaxRegions([\n  \"txreg_123\",\n  \"txreg_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 11942,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11943,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax regions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11944,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tax. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tax region's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`tax_rates`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12059,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11942,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11945,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11946,
					"name": "softDeleteTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11947,
							"name": "softDeleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes tax rate rules by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.softDeleteTaxRateRules([\n  \"txrule_123\",\n  \"txrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 11948,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11949,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rate rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11950,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12168,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11948,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11951,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 11952,
					"name": "restoreTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 11953,
							"name": "restoreTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted tax rate rules by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait taxModuleService.restoreTaxRateRules([\n  \"txrule_123\",\n  \"txrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 11954,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 11955,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tax rate rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 11956,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tax. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tax rate rule's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12059,
										"typeArguments": [
											{
												"type": "reference",
												"target": 11954,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11957,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12010,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						11830,
						11835,
						11840,
						11845,
						11852,
						11865,
						11872,
						11879,
						11885,
						11892,
						11899,
						11904,
						11911,
						11918,
						11923,
						11928,
						11934,
						11940,
						11946,
						11952
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 11971,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12291,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12292,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12293,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12293
							]
						}
					],
					"indexSignature": {
						"id": 12294,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 12295,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 12239,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 12291,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				11985,
				12213,
				12168,
				12059,
				12296,
				12246,
				11971,
				12270,
				12199,
				12010,
				11997,
				12022,
				12074,
				12084,
				12101,
				12111,
				12122,
				12134,
				12139,
				12240,
				12154,
				12161,
				12033,
				12051,
				12042,
				12062,
				12095,
				11829
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				12287,
				12289,
				12319,
				12344,
				12334,
				12217,
				12332,
				12329,
				12331,
				12323,
				12309,
				12264,
				12276,
				12299,
				12171,
				12260,
				12291,
				12239
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"11828": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": ""
		},
		"11829": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService"
		},
		"11830": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieve"
		},
		"11831": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieve"
		},
		"11832": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"11833": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11834": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11835": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.list"
		},
		"11836": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.list"
		},
		"11837": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"11838": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11839": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11840": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCount"
		},
		"11841": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCount"
		},
		"11842": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"11843": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11844": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11845": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"11846": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"11847": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11848": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11849": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"11850": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11851": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11852": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"11853": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"11854": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"11855": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11856": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11857": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"11858": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"11859": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11860": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11861": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"11862": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "selector"
		},
		"11863": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11864": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11865": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"11866": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"11867": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11868": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11869": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"11870": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11871": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11872": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"11873": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"11874": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"11875": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11876": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"11877": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"11878": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11879": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restore"
		},
		"11880": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restore"
		},
		"11881": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11882": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"11883": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11884": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11885": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"11886": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"11887": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11888": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11889": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"11890": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11891": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11892": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"11893": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"11894": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"11895": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11896": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"11897": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionId"
		},
		"11898": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11899": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"11900": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"11901": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"11902": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11903": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11904": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"11905": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"11906": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11907": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11908": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"11909": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"11910": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11911": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"11912": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"11913": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleId"
		},
		"11914": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11915": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"11916": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"11917": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11918": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"11919": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"11920": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"11921": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11922": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11923": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"11924": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"11925": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "items"
		},
		"11926": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "calculationContext"
		},
		"11927": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11928": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDelete"
		},
		"11929": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDelete"
		},
		"11930": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11931": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"11932": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11933": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11934": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"11935": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"11936": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11937": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"11938": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11939": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11940": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"11941": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"11942": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11943": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"11944": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11945": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11946": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"11947": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"11948": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11949": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"11950": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11951": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11952": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"11953": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"11954": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"11955": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"11956": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11957": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"11971": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"11985": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"11986": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"11987": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"11988": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"11989": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"11990": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"11991": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"11992": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"11994": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"11995": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"11996": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"11997": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO"
		},
		"11998": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.id"
		},
		"11999": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.rate"
		},
		"12000": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.code"
		},
		"12001": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.name"
		},
		"12002": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.metadata"
		},
		"12003": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.tax_region_id"
		},
		"12004": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_combinable"
		},
		"12005": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_default"
		},
		"12006": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_at"
		},
		"12007": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.updated_at"
		},
		"12008": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.deleted_at"
		},
		"12009": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_by"
		},
		"12010": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"12011": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"12012": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"12013": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"12014": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"12015": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"12016": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"12017": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"12018": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"12019": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"12020": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"12021": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"12022": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps"
		},
		"12023": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.id"
		},
		"12024": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.tax_region_id"
		},
		"12025": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.rate"
		},
		"12026": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.code"
		},
		"12027": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.name"
		},
		"12028": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_at"
		},
		"12029": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.updated_at"
		},
		"12030": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_by"
		},
		"12031": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"12032": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"12033": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO"
		},
		"12034": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.tax_region_id"
		},
		"12035": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rate"
		},
		"12036": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.code"
		},
		"12037": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.name"
		},
		"12038": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rules"
		},
		"12039": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.is_default"
		},
		"12040": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.created_by"
		},
		"12041": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.metadata"
		},
		"12042": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO"
		},
		"12043": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rate"
		},
		"12044": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.code"
		},
		"12045": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.name"
		},
		"12046": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rules"
		},
		"12047": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_default"
		},
		"12048": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_combinable"
		},
		"12050": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.metadata"
		},
		"12051": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO"
		},
		"12052": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.id"
		},
		"12053": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.rate"
		},
		"12054": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.code"
		},
		"12055": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.name"
		},
		"12056": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.is_default"
		},
		"12057": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.created_by"
		},
		"12058": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.metadata"
		},
		"12059": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"12060": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"12061": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"12062": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO"
		},
		"12063": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.country_code"
		},
		"12064": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.province_code"
		},
		"12065": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.parent_id"
		},
		"12066": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.metadata"
		},
		"12067": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.created_by"
		},
		"12068": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.default_tax_rate"
		},
		"12069": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type"
		},
		"12070": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.rate"
		},
		"12071": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.code"
		},
		"12072": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"12073": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.metadata"
		},
		"12074": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO"
		},
		"12075": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.id"
		},
		"12076": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.country_code"
		},
		"12077": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.province_code"
		},
		"12078": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.parent_id"
		},
		"12079": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.metadata"
		},
		"12080": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_at"
		},
		"12081": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.updated_at"
		},
		"12082": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_by"
		},
		"12083": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.deleted_at"
		},
		"12084": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps"
		},
		"12085": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.id"
		},
		"12086": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.country_code"
		},
		"12087": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.province_code"
		},
		"12088": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.parent_id"
		},
		"12089": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.metadata"
		},
		"12090": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_at"
		},
		"12091": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.updated_at"
		},
		"12092": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_by"
		},
		"12093": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"12094": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"12095": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO"
		},
		"12096": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference"
		},
		"12097": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference_id"
		},
		"12098": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.tax_rate_id"
		},
		"12099": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.metadata"
		},
		"12100": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.created_by"
		},
		"12101": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO"
		},
		"12102": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.id"
		},
		"12103": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference"
		},
		"12104": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference_id"
		},
		"12105": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate_id"
		},
		"12106": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate"
		},
		"12107": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.metadata"
		},
		"12108": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_at"
		},
		"12109": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.updated_at"
		},
		"12110": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_by"
		},
		"12111": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps"
		},
		"12112": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference"
		},
		"12113": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference_id"
		},
		"12114": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate_id"
		},
		"12115": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate"
		},
		"12116": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.metadata"
		},
		"12117": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_at"
		},
		"12118": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.updated_at"
		},
		"12119": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_by"
		},
		"12120": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"12121": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"12122": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO"
		},
		"12123": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.id"
		},
		"12124": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_id"
		},
		"12125": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_name"
		},
		"12126": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_category_id"
		},
		"12127": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_categories"
		},
		"12128": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_sku"
		},
		"12129": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_type"
		},
		"12130": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_type_id"
		},
		"12131": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.quantity"
		},
		"12132": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.unit_price"
		},
		"12133": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.currency_code"
		},
		"12134": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO"
		},
		"12135": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.id"
		},
		"12136": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.shipping_option_id"
		},
		"12137": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.unit_price"
		},
		"12138": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.currency_code"
		},
		"12139": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext"
		},
		"12140": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.address"
		},
		"12141": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"12142": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"12143": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.province_code"
		},
		"12144": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"12145": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"12146": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.city"
		},
		"12147": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"12148": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.customer"
		},
		"12149": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"12150": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.id"
		},
		"12151": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.email"
		},
		"12152": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"12153": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.is_return"
		},
		"12154": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO"
		},
		"12155": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO.line_item_id"
		},
		"12156": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"12157": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"12158": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"12159": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"12160": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"12161": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO"
		},
		"12162": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO.shipping_line_id"
		},
		"12163": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"12164": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"12165": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"12166": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"12167": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"12168": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"12169": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"12170": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"12171": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"12172": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12173": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"12174": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"12175": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"12176": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12177": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12178": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"12179": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12180": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"12181": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"12182": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"12183": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"12184": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12185": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"12186": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"12187": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"12188": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"12189": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"12190": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12191": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"12192": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"12193": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"12194": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12195": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"12196": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"12197": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"12198": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"12199": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"12200": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"12201": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"12202": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"12203": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"12204": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"12205": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"12206": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"12207": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"12208": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"12209": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"12210": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"12211": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"12212": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"12213": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"12214": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"12215": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"12216": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"12217": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"12218": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12219": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"12220": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"12221": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"12222": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"12223": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"12224": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"12225": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"12226": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"12227": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"12228": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"12229": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"12230": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"12231": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"12232": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"12233": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"12234": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"12235": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"12236": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"12237": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"12238": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12239": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"12240": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO"
		},
		"12241": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"12242": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"12243": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"12244": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"12245": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"12246": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"12247": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"12248": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"12249": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"12250": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"12251": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"12252": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"12253": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"12254": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"12255": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"12256": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"12257": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12258": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"12259": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"12260": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"12261": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12262": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"12263": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"12264": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"12265": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12266": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"12267": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"12268": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"12269": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"12270": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"12271": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"12272": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"12273": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"12274": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"12276": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"12277": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12278": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"12279": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"12280": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12281": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"12282": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"12283": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"12284": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"12285": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"12286": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"12287": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"12288": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12289": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"12290": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12291": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"12292": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"12293": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"12294": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"12296": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"12297": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"12298": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"12299": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"12300": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"12301": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"12302": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"12303": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"12304": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"12305": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"12306": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"12307": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"12308": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"12309": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"12310": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12311": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"12312": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"12313": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"12314": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"12315": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"12316": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"12317": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"12318": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"12319": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"12320": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12321": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"12322": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"12323": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"12324": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12325": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"12327": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12328": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"12329": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"12330": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12331": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"12332": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"12333": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12334": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"12335": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12336": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"12337": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12338": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"12339": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12340": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"12341": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"12342": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"12343": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"12344": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"12345": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}