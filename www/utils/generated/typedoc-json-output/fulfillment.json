{
	"id": 2712,
	"name": "fulfillment",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 3106,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 3107,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 3117,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 3108,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 3109,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 3110,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 3111,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3112,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 3113,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 3114,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 3115,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3116,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3107,
						3108,
						3109,
						3110,
						3111,
						3115,
						3116
					]
				}
			],
			"typeParameters": [
				{
					"id": 3117,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 3571,
			"name": "RuleOperatorType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The accepted values for the shipping rule option's operator."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "in"
					},
					{
						"type": "literal",
						"value": "eq"
					},
					{
						"type": "literal",
						"value": "ne"
					},
					{
						"type": "literal",
						"value": "gt"
					},
					{
						"type": "literal",
						"value": "gte"
					},
					{
						"type": "literal",
						"value": "lt"
					},
					{
						"type": "literal",
						"value": "lte"
					},
					{
						"type": "literal",
						"value": "nin"
					}
				]
			}
		},
		{
			"id": 3482,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 3483,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3485,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3485,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 3484,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3485,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3485,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3483,
						3484
					]
				}
			],
			"typeParameters": [
				{
					"id": 3485,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 3139,
					"name": "FilterableFulfillmentSetProps"
				},
				{
					"type": "reference",
					"target": 3173,
					"name": "FilterableServiceZoneProps"
				},
				{
					"type": "reference",
					"target": 3208,
					"name": "FilterableGeoZoneProps"
				},
				{
					"type": "reference",
					"target": 3237,
					"name": "FilterableShippingOptionProps"
				},
				{
					"type": "reference",
					"target": 3312,
					"name": "FilterableShippingProfileProps"
				},
				{
					"type": "reference",
					"target": 3339,
					"name": "FilterableShippingOptionRuleProps"
				},
				{
					"type": "reference",
					"target": 3367,
					"name": "FilterableShippingOptionTypeProps"
				},
				{
					"type": "reference",
					"target": 3393,
					"name": "FilterableFulfillmentProps"
				},
				{
					"type": "reference",
					"target": 3428,
					"name": "FilterableFulfillmentProviderProps"
				}
			]
		},
		{
			"id": 3157,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 3158,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3159,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3158
					]
				}
			],
			"typeParameters": [
				{
					"id": 3159,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 3160,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 3161,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3162,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3161
					]
				}
			],
			"typeParameters": [
				{
					"id": 3162,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 3680,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3681,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 3681,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 3681,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 3718,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 3722,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3681,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 3728,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3681,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 3682,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3683,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 3683,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 3683,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 3683,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 3718,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3719,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3720,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 3721,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										3720
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3743,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3744,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 3744,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 3744,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 3744,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 3733,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3742,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 3742,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 3734,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 3735,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									3735
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 3743,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 3742,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 3736,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3737,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3737
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 3743,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 3742,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 3738,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 3739,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											3739
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 3743,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 3742,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 3740,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3741,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3741
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 3743,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 3486,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3507,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3487,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3488,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3680,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3507,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3489,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3680,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3507,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3490,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 3682,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3507,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3682,
											"typeArguments": [
												{
													"type": "reference",
													"target": 3507,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 3491,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3682,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3507,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3492,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3682,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3507,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3493,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3682,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3507,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 3494,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3680,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3507,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3495,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3682,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3507,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3496,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3682,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3507,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3497,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3682,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3507,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3498,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3682,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3507,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3499,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3500,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3501,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3502,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3503,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3504,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3505,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3506,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3488,
								3489,
								3490,
								3491,
								3492,
								3493,
								3494,
								3495,
								3496,
								3497,
								3498,
								3499,
								3500,
								3501,
								3502,
								3503,
								3504,
								3505,
								3506
							]
						}
					]
				}
			}
		},
		{
			"id": 3731,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3732,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 3732,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 3682,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3732,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3733,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3732,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 3728,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3729,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 3486,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3731,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3729,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3731,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3729,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3731,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3729,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 3730,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 3722,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3726,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 3727,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 3727,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 3726,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 3726,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 3726,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 3486,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 3726,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 3726,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 3723,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignature": {
											"id": 3724,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 3725,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "V"
											}
										}
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 3722,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 3727,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 3730,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 3708,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3717,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3709,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3710,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3711,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3712,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3713,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3714,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3715,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3712,
												3713,
												3714,
												3715
											]
										}
									]
								}
							}
						},
						{
							"id": 3716,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3717,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3710,
								3716
							]
						}
					]
				}
			}
		},
		{
			"id": 3657,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3662,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3658,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3659,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3660,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3708,
								"typeArguments": [
									{
										"type": "reference",
										"target": 3662,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "MessageBody",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 3661,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3659,
								3660,
								3661
							]
						}
					]
				}
			}
		},
		{
			"id": 3669,
			"name": "MessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3679,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3670,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3671,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3672,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3673,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3674,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3675,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3676,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3677,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3674,
												3675,
												3676,
												3677
											]
										}
									]
								}
							}
						},
						{
							"id": 3678,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 3679,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3679,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3671,
								3672,
								3678
							]
						}
					]
				}
			}
		},
		{
			"id": 3572,
			"name": "FulfillmentAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment address details."
					}
				]
			},
			"children": [
				{
					"id": 3573,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3574,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3575,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3576,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3577,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3578,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first line of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3579,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second line of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3580,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3581,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3582,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3583,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3584,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3585,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3586,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the address."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3587,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the address."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3588,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3573,
						3574,
						3575,
						3576,
						3577,
						3578,
						3579,
						3580,
						3581,
						3582,
						3583,
						3584,
						3585,
						3586,
						3587,
						3588
					]
				}
			]
		},
		{
			"id": 3589,
			"name": "FulfillmentItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment item details."
					}
				]
			},
			"children": [
				{
					"id": 3590,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3591,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3592,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3593,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sku of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3594,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3595,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3596,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated inventory item's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3597,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3598,
					"name": "fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3374,
						"name": "FulfillmentDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3599,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3600,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3601,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3590,
						3591,
						3592,
						3593,
						3594,
						3595,
						3596,
						3597,
						3598,
						3599,
						3600,
						3601
					]
				}
			]
		},
		{
			"id": 3602,
			"name": "FulfillmentLabelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment label details."
					}
				]
			},
			"children": [
				{
					"id": 3603,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3604,
					"name": "tracking_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking number of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3605,
					"name": "tracking_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking URL of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3606,
					"name": "label_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3607,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3608,
					"name": "fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3374,
						"name": "FulfillmentDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3609,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3610,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3611,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3603,
						3604,
						3605,
						3606,
						3607,
						3608,
						3609,
						3610,
						3611
					]
				}
			]
		},
		{
			"id": 3432,
			"name": "FulfillmentProviderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment provider details."
					}
				]
			},
			"children": [
				{
					"id": 3433,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3434,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3435,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3436,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping options associated with the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3218,
							"name": "ShippingOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3437,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3438,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3439,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3433,
						3434,
						3435,
						3436,
						3437,
						3438,
						3439
					]
				}
			]
		},
		{
			"id": 3428,
			"name": "FilterableFulfillmentProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved fulfillment providers."
					}
				]
			},
			"children": [
				{
					"id": 3430,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3428,
									"name": "FilterableFulfillmentProviderProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3428,
											"name": "FilterableFulfillmentProviderProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3431,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3428,
									"name": "FilterableFulfillmentProviderProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3428,
											"name": "FilterableFulfillmentProviderProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3429,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the provider by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3430,
						3431,
						3429
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3428,
							"name": "FilterableFulfillmentProviderProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3118,
			"name": "FulfillmentSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment set details."
					}
				]
			},
			"children": [
				{
					"id": 3119,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3120,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3121,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3122,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3123,
					"name": "service_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The service zones associated with the fulfillment set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3163,
							"name": "ServiceZoneDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3124,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3125,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3126,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3119,
						3120,
						3121,
						3122,
						3123,
						3124,
						3125,
						3126
					]
				}
			]
		},
		{
			"id": 3139,
			"name": "FilterableFulfillmentSetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved fulfillment sets."
					}
				]
			},
			"children": [
				{
					"id": 3144,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3139,
									"name": "FilterableFulfillmentSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3139,
											"name": "FilterableFulfillmentSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3145,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3139,
									"name": "FilterableFulfillmentSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3139,
											"name": "FilterableFulfillmentSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3140,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the fulfillment sets by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3141,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillment sets by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3142,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillment sets by their type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3143,
					"name": "service_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved service zones."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3173,
						"name": "FilterableServiceZoneProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3144,
						3145,
						3140,
						3141,
						3142,
						3143
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3139,
							"name": "FilterableFulfillmentSetProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3374,
			"name": "FulfillmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment details."
					}
				]
			},
			"children": [
				{
					"id": 3375,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3376,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3377,
					"name": "packed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was packed."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3378,
					"name": "shipped_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was shipped."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3379,
					"name": "delivered_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was delivered."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3380,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3381,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the fulfillment provider to process\nthe fulfillment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3382,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3383,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3384,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3385,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 3218,
								"name": "ShippingOptionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3386,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3432,
						"name": "FulfillmentProviderDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3387,
					"name": "delivery_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment address used for delivery."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3572,
						"name": "FulfillmentAddressDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3388,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items of the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3589,
							"name": "FulfillmentItemDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3389,
					"name": "labels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The labels of the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3602,
							"name": "FulfillmentLabelDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3390,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3391,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3392,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3375,
						3376,
						3377,
						3378,
						3379,
						3380,
						3381,
						3382,
						3383,
						3384,
						3385,
						3386,
						3387,
						3388,
						3389,
						3390,
						3391,
						3392
					]
				}
			]
		},
		{
			"id": 3393,
			"name": "FilterableFulfillmentProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved fulfillments."
					}
				]
			},
			"children": [
				{
					"id": 3404,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3393,
									"name": "FilterableFulfillmentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3393,
											"name": "FilterableFulfillmentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3405,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3393,
									"name": "FilterableFulfillmentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3393,
											"name": "FilterableFulfillmentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3394,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the fulfillments by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3395,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by the ID of their associated location."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3396,
					"name": "packed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by their packing date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3397,
					"name": "shipped_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by their shipping date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3398,
					"name": "delivered_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by their delivery date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3399,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by their cancelation date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3400,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by the ID of their associated fulfillment provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3401,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by the ID of their associated shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3402,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by their creation date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3403,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the fulfillments by their update date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3404,
						3405,
						3394,
						3395,
						3396,
						3397,
						3398,
						3399,
						3400,
						3401,
						3402,
						3403
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3393,
							"name": "FilterableFulfillmentProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3534,
			"name": "GeoZoneType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of the geo zone."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "country"
					},
					{
						"type": "literal",
						"value": "province"
					},
					{
						"type": "literal",
						"value": "city"
					},
					{
						"type": "literal",
						"value": "zip"
					}
				]
			}
		},
		{
			"id": 3197,
			"name": "GeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone details."
					}
				]
			},
			"children": [
				{
					"id": 3198,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3199,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3534,
						"name": "GeoZoneType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3200,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3201,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3202,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3203,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal expression of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3204,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3205,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3206,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3207,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3198,
						3199,
						3200,
						3201,
						3202,
						3203,
						3204,
						3205,
						3206,
						3207
					]
				}
			]
		},
		{
			"id": 3208,
			"name": "FilterableGeoZoneProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved geo zones."
					}
				]
			},
			"children": [
				{
					"id": 3214,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3208,
									"name": "FilterableGeoZoneProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3208,
											"name": "FilterableGeoZoneProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3215,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3208,
									"name": "FilterableGeoZoneProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3208,
											"name": "FilterableGeoZoneProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3209,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the geo zones by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3210,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the geo zones by their type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 3534,
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3534,
									"name": "GeoZoneType",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 3211,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the geo zones by their country code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3212,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the geo zones by their province code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3213,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the geo zones by their city."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3214,
						3215,
						3209,
						3210,
						3211,
						3212,
						3213
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3208,
							"name": "FilterableGeoZoneProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3163,
			"name": "ServiceZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The service zone details."
					}
				]
			},
			"children": [
				{
					"id": 3164,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3165,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3166,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3167,
					"name": "fulfillment_sets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillment sets assoiated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3118,
							"name": "FulfillmentSetDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3168,
					"name": "geo_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zones assoiated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3197,
							"name": "GeoZoneDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3169,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping options assoiated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3218,
							"name": "ShippingOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3170,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the service zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3171,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the service zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3172,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the service zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3164,
						3165,
						3166,
						3167,
						3168,
						3169,
						3170,
						3171,
						3172
					]
				}
			]
		},
		{
			"id": 3173,
			"name": "FilterableServiceZoneProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved service zones."
					}
				]
			},
			"children": [
				{
					"id": 3179,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3173,
									"name": "FilterableServiceZoneProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3173,
											"name": "FilterableServiceZoneProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3180,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3173,
									"name": "FilterableServiceZoneProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3173,
											"name": "FilterableServiceZoneProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3174,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the service zones by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3175,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the service zones by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3176,
					"name": "geo_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the associated geo zones."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3208,
						"name": "FilterableGeoZoneProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3177,
					"name": "fulfillment_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the associated fulfillment sets."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3139,
						"name": "FilterableFulfillmentSetProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3179,
						3180,
						3174,
						3175,
						3176,
						3177
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3173,
							"name": "FilterableServiceZoneProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3327,
			"name": "ShippingOptionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option rule details."
					}
				]
			},
			"children": [
				{
					"id": 3328,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3329,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3330,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the shipping option rule."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nin\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3331,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3332,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3333,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The values of the shipping option rule."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3333
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3334,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3335,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3218,
						"name": "ShippingOptionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3336,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3337,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3338,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3328,
						3329,
						3330,
						3331,
						3334,
						3335,
						3336,
						3337,
						3338
					]
				}
			]
		},
		{
			"id": 3339,
			"name": "FilterableShippingOptionRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved shipping option rules."
					}
				]
			},
			"children": [
				{
					"id": 3344,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3339,
									"name": "FilterableShippingOptionRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3339,
											"name": "FilterableShippingOptionRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3345,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3339,
									"name": "FilterableShippingOptionRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3339,
											"name": "FilterableShippingOptionRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3340,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping option rules by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3341,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping option rules by their attribute."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3342,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping option rules by their operator."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3343,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping option rules by their values."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3344,
						3345,
						3340,
						3341,
						3342,
						3343
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3339,
							"name": "FilterableShippingOptionRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3357,
			"name": "ShippingOptionTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option type details."
					}
				]
			},
			"children": [
				{
					"id": 3358,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3359,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3360,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3361,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3362,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3363,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3218,
						"name": "ShippingOptionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3364,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping option type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3365,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping option type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3366,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping option type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3358,
						3359,
						3360,
						3361,
						3362,
						3363,
						3364,
						3365,
						3366
					]
				}
			]
		},
		{
			"id": 3367,
			"name": "FilterableShippingOptionTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved shipping option types."
					}
				]
			},
			"children": [
				{
					"id": 3372,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3367,
									"name": "FilterableShippingOptionTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3367,
											"name": "FilterableShippingOptionTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3373,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3367,
									"name": "FilterableShippingOptionTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3367,
											"name": "FilterableShippingOptionTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3368,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping option types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3369,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping option types by their label."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3370,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping option types by their description."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3371,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping option types by their code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3372,
						3373,
						3368,
						3369,
						3370,
						3371
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3367,
							"name": "FilterableShippingOptionTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3565,
			"name": "ShippingOptionPriceType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option's price type.\n\n- Use "
					},
					{
						"kind": "code",
						"text": "`calculated`"
					},
					{
						"kind": "text",
						"text": " if the shipping option's price amount is calculated by the fulfillment provider.\n- Use "
					},
					{
						"kind": "code",
						"text": "`flat_rate`"
					},
					{
						"kind": "text",
						"text": " if the shipping option's price is always the same amount."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "calculated"
					},
					{
						"type": "literal",
						"value": "flat"
					}
				]
			}
		},
		{
			"id": 3218,
			"name": "ShippingOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option details."
					}
				]
			},
			"children": [
				{
					"id": 3219,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3220,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3221,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping option's price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3565,
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3222,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3223,
					"name": "shipping_profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping profile's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3224,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3225,
					"name": "shipping_option_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option type's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3226,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the associated fulfillment provider to process the shipping option\nand, later, its associated fulfillments."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3227,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3228,
					"name": "service_zone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3163,
						"name": "ServiceZoneDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3229,
					"name": "shipping_profile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping profile."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3303,
						"name": "ShippingProfileDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3230,
					"name": "fulfillment_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3432,
						"name": "FulfillmentProviderDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3231,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3357,
						"name": "ShippingOptionTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3232,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3327,
							"name": "ShippingOptionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3233,
					"name": "fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillments associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3374,
							"name": "FulfillmentDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3234,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3235,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3236,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3219,
						3220,
						3221,
						3222,
						3223,
						3224,
						3225,
						3226,
						3227,
						3228,
						3229,
						3230,
						3231,
						3232,
						3233,
						3234,
						3235,
						3236
					]
				}
			]
		},
		{
			"id": 3237,
			"name": "FilterableShippingOptionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved shipping options."
					}
				]
			},
			"children": [
				{
					"id": 3245,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3237,
									"name": "FilterableShippingOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3237,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3246,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3237,
									"name": "FilterableShippingOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3237,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3238,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3239,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3240,
					"name": "shipping_profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by the ID of their associated shipping profile."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3241,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by their price type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 3565,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3565,
									"name": "ShippingOptionPriceType",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "unknown",
										"name": "ShippingOptionPriceType | ShippingOptionPriceType[]"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3242,
					"name": "service_zone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved service zones."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3173,
						"name": "FilterableServiceZoneProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3243,
					"name": "shipping_option_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved shipping option types."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3367,
						"name": "FilterableShippingOptionTypeProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3244,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved shipping option rules."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3339,
						"name": "FilterableShippingOptionRuleProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3245,
						3246,
						3238,
						3239,
						3240,
						3241,
						3242,
						3243,
						3244
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3237,
							"name": "FilterableShippingOptionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 3247,
					"name": "FilterableShippingOptionForContextProps"
				}
			]
		},
		{
			"id": 3247,
			"name": "FilterableShippingOptionForContextProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context's details used to filter the shipping option."
					}
				]
			},
			"children": [
				{
					"id": 3264,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3237,
									"name": "FilterableShippingOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3237,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3245,
						"name": "FilterableShippingOptionProps.$and"
					}
				},
				{
					"id": 3265,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3237,
									"name": "FilterableShippingOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3237,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3246,
						"name": "FilterableShippingOptionProps.$or"
					}
				},
				{
					"id": 3257,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3238,
						"name": "FilterableShippingOptionProps.id"
					}
				},
				{
					"id": 3258,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3239,
						"name": "FilterableShippingOptionProps.name"
					}
				},
				{
					"id": 3259,
					"name": "shipping_profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by the ID of their associated shipping profile."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3240,
						"name": "FilterableShippingOptionProps.shipping_profile_id"
					}
				},
				{
					"id": 3260,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by their price type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 3565,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3565,
									"name": "ShippingOptionPriceType",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "unknown",
										"name": "ShippingOptionPriceType | ShippingOptionPriceType[]"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3241,
						"name": "FilterableShippingOptionProps.price_type"
					}
				},
				{
					"id": 3261,
					"name": "service_zone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved service zones."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3173,
						"name": "FilterableServiceZoneProps",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3242,
						"name": "FilterableShippingOptionProps.service_zone"
					}
				},
				{
					"id": 3262,
					"name": "shipping_option_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved shipping option types."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3367,
						"name": "FilterableShippingOptionTypeProps",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3243,
						"name": "FilterableShippingOptionProps.shipping_option_type"
					}
				},
				{
					"id": 3263,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved shipping option rules."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3339,
						"name": "FilterableShippingOptionRuleProps",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3244,
						"name": "FilterableShippingOptionProps.rules"
					}
				},
				{
					"id": 3248,
					"name": "fulfillment_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillment set's ID used in the context."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3249,
					"name": "fulfillment_set_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillment set's type used in the context."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3250,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address used in the context. It filters the shipping options based on\nthe geo zones of their associated service zone."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3251,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3252,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ISO 2 character country code."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3253,
									"name": "province_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province code."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3254,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3255,
									"name": "postal_expression",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal expression"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3252,
										3253,
										3254,
										3255
									]
								}
							]
						}
					}
				},
				{
					"id": 3256,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option's context to filter directly."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3264,
						3265,
						3257,
						3258,
						3259,
						3260,
						3261,
						3262,
						3263,
						3248,
						3249,
						3250,
						3256
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3237,
					"name": "FilterableShippingOptionProps",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3303,
			"name": "ShippingProfileDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping profile details."
					}
				]
			},
			"children": [
				{
					"id": 3304,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3305,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3306,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3307,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3308,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping options associated with the shipping profile."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3218,
							"name": "ShippingOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3309,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping profile."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3310,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping profile."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3311,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping profile."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3304,
						3305,
						3306,
						3307,
						3308,
						3309,
						3310,
						3311
					]
				}
			]
		},
		{
			"id": 3312,
			"name": "FilterableShippingProfileProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved shipping profiles."
					}
				]
			},
			"children": [
				{
					"id": 3317,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3312,
									"name": "FilterableShippingProfileProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3312,
											"name": "FilterableShippingProfileProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3483,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 3318,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 3312,
									"name": "FilterableShippingProfileProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 3482,
									"typeArguments": [
										{
											"type": "reference",
											"target": 3312,
											"name": "FilterableShippingProfileProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3484,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 3313,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping profiles by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3314,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping profiles by their name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3315,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping profiles by their type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3486,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 3316,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved shipping options."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3237,
						"name": "FilterableShippingOptionProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3317,
						3318,
						3313,
						3314,
						3315,
						3316
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3482,
					"typeArguments": [
						{
							"type": "reference",
							"target": 3312,
							"name": "FilterableShippingProfileProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3612,
			"name": "CreateFulfillmentAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment address to be created."
					}
				]
			},
			"children": [
				{
					"id": 3613,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3614,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3615,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3616,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3617,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first line of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3618,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second line of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3619,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3620,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3621,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3622,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3623,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the fulfillment address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3624,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3613,
						3614,
						3615,
						3616,
						3617,
						3618,
						3619,
						3620,
						3621,
						3622,
						3623,
						3624
					]
				}
			]
		},
		{
			"id": 3625,
			"name": "CreateFulfillmentItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment item to be created."
					}
				]
			},
			"children": [
				{
					"id": 3626,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3627,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3628,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3629,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3630,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3631,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3632,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated inventory item's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3626,
						3627,
						3628,
						3629,
						3630,
						3631,
						3632
					]
				}
			]
		},
		{
			"id": 3633,
			"name": "CreateFulfillmentLabelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment label to be created."
					}
				]
			},
			"children": [
				{
					"id": 3634,
					"name": "tracking_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking number of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3635,
					"name": "tracking_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking URL of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3636,
					"name": "label_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3637,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3634,
						3635,
						3636,
						3637
					]
				}
			]
		},
		{
			"id": 3146,
			"name": "CreateFulfillmentSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment set to be created."
					}
				]
			},
			"children": [
				{
					"id": 3147,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3148,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3149,
					"name": "service_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The service zones associated with the fulfillment set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3181,
									"name": "CreateServiceZoneDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "fulfillment_set_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3147,
						3148,
						3149
					]
				}
			]
		},
		{
			"id": 3150,
			"name": "UpdateFulfillmentSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the fulfillment set."
					}
				]
			},
			"children": [
				{
					"id": 3151,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3152,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3153,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3154,
					"name": "service_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The service zones associated with the fulfillment set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3181,
											"name": "CreateServiceZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "fulfillment_set_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 3155,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 3156,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the service zone."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													3156
												]
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3151,
						3152,
						3153,
						3154
					]
				}
			]
		},
		{
			"id": 3638,
			"name": "CreateFulfillmentOrderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment order to be created."
					}
				]
			}
		},
		{
			"id": 3406,
			"name": "CreateFulfillmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment to be created."
					}
				]
			},
			"children": [
				{
					"id": 3407,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3408,
					"name": "packed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was packed."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3409,
					"name": "shipped_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was shipped."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3410,
					"name": "delivered_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was delivered."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3411,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3412,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the associated fulfillment provider to process the fulfillment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3413,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3414,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 3415,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3416,
					"name": "delivery_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address associated with the fulfillment. It's used for delivery."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 3612,
								"name": "CreateFulfillmentAddressDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "fulfillment_id"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 3417,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items associated with the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3625,
									"name": "CreateFulfillmentItemDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "fulfillment_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 3418,
					"name": "labels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The labels associated with the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3633,
									"name": "CreateFulfillmentLabelDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "fulfillment_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 3419,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3638,
						"name": "CreateFulfillmentOrderDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3407,
						3408,
						3409,
						3410,
						3411,
						3412,
						3413,
						3414,
						3415,
						3416,
						3417,
						3418,
						3419
					]
				}
			]
		},
		{
			"id": 3420,
			"name": "UpdateFulfillmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the fulfillment."
					}
				]
			},
			"children": [
				{
					"id": 3421,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3422,
					"name": "packed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was packed."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3423,
					"name": "shipped_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was shipped."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3424,
					"name": "delivered_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was delivered."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3425,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the associated fulfillment provider to process the fulfillment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3426,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3427,
					"name": "labels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The labels associated with the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3633,
									"name": "CreateFulfillmentLabelDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "fulfillment_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3421,
						3422,
						3423,
						3424,
						3425,
						3426,
						3427
					]
				}
			]
		},
		{
			"id": 3684,
			"name": "CreateGeoZoneBaseDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone to be created."
					}
				]
			},
			"children": [
				{
					"id": 3685,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3534,
						"name": "GeoZoneType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3686,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3687,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3688,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3685,
						3686,
						3687,
						3688
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 3508,
					"name": "CreateCountryGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 3513,
					"name": "CreateProvinceGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 3519,
					"name": "CreateCityGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 3526,
					"name": "CreateZipGeoZoneDTO"
				}
			]
		},
		{
			"id": 3508,
			"name": "CreateCountryGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone to be created of type "
					},
					{
						"kind": "code",
						"text": "`country`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3510,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3686,
						"name": "CreateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3511,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3687,
						"name": "CreateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3512,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3688,
						"name": "CreateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3509,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"country\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 3685,
						"name": "CreateGeoZoneBaseDTO.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3510,
						3511,
						3512,
						3509
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3684,
					"name": "CreateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3513,
			"name": "CreateProvinceGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone to be created of type "
					},
					{
						"kind": "code",
						"text": "`province`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3516,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3686,
						"name": "CreateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3517,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3687,
						"name": "CreateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3518,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3688,
						"name": "CreateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3514,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"province\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 3685,
						"name": "CreateGeoZoneBaseDTO.type"
					}
				},
				{
					"id": 3515,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3516,
						3517,
						3518,
						3514,
						3515
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3684,
					"name": "CreateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3519,
			"name": "CreateCityGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone to be created of type "
					},
					{
						"kind": "code",
						"text": "`city`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3523,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3686,
						"name": "CreateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3524,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3687,
						"name": "CreateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3525,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3688,
						"name": "CreateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3520,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"city\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 3685,
						"name": "CreateGeoZoneBaseDTO.type"
					}
				},
				{
					"id": 3521,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3522,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3523,
						3524,
						3525,
						3520,
						3521,
						3522
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3684,
					"name": "CreateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3526,
			"name": "CreateZipGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone to be created of type "
					},
					{
						"kind": "code",
						"text": "`zip`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3531,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3686,
						"name": "CreateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3532,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3687,
						"name": "CreateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3533,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3688,
						"name": "CreateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3527,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"zip\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 3685,
						"name": "CreateGeoZoneBaseDTO.type"
					}
				},
				{
					"id": 3528,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3529,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3530,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal expression of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3531,
						3532,
						3533,
						3527,
						3528,
						3529,
						3530
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3684,
					"name": "CreateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3216,
			"name": "CreateGeoZoneDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone to be created. The value of the "
					},
					{
						"kind": "code",
						"text": "`type`"
					},
					{
						"kind": "text",
						"text": " attributes allows for passing more attributes."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 3508,
						"name": "CreateCountryGeoZoneDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3513,
						"name": "CreateProvinceGeoZoneDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3519,
						"name": "CreateCityGeoZoneDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3526,
						"name": "CreateZipGeoZoneDTO",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 3689,
			"name": "UpdateGeoZoneBaseDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the geo zone."
					}
				]
			},
			"children": [
				{
					"id": 3691,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3534,
						"name": "GeoZoneType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.type"
					}
				},
				{
					"id": 3692,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.service_zone_id"
					}
				},
				{
					"id": 3693,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.country_code"
					}
				},
				{
					"id": 3694,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.metadata"
					}
				},
				{
					"id": 3690,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3691,
						3692,
						3693,
						3694,
						3690
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 3684,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "Partial",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 3535,
					"name": "UpdateCountryGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 3541,
					"name": "UpdateProvinceGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 3548,
					"name": "UpdateCityGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 3556,
					"name": "UpdateZipGeoZoneDTO"
				}
			]
		},
		{
			"id": 3535,
			"name": "UpdateCountryGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the geo zone of type "
					},
					{
						"kind": "code",
						"text": "`country`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3538,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3692,
						"name": "UpdateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3539,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3693,
						"name": "UpdateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3540,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3694,
						"name": "UpdateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3537,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3690,
						"name": "UpdateGeoZoneBaseDTO.id"
					}
				},
				{
					"id": 3536,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"country\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 3691,
						"name": "UpdateGeoZoneBaseDTO.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3538,
						3539,
						3540,
						3537,
						3536
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3689,
					"name": "UpdateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3541,
			"name": "UpdateProvinceGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the geo zone of type "
					},
					{
						"kind": "code",
						"text": "`province`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3545,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3692,
						"name": "UpdateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3546,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3693,
						"name": "UpdateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3547,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3694,
						"name": "UpdateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3544,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3690,
						"name": "UpdateGeoZoneBaseDTO.id"
					}
				},
				{
					"id": 3542,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"province\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 3691,
						"name": "UpdateGeoZoneBaseDTO.type"
					}
				},
				{
					"id": 3543,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3545,
						3546,
						3547,
						3544,
						3542,
						3543
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3689,
					"name": "UpdateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3548,
			"name": "UpdateCityGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the geo zone of type "
					},
					{
						"kind": "code",
						"text": "`city`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3553,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3692,
						"name": "UpdateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3554,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3693,
						"name": "UpdateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3555,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3694,
						"name": "UpdateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3552,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3690,
						"name": "UpdateGeoZoneBaseDTO.id"
					}
				},
				{
					"id": 3549,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"city\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 3691,
						"name": "UpdateGeoZoneBaseDTO.type"
					}
				},
				{
					"id": 3550,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3551,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3553,
						3554,
						3555,
						3552,
						3549,
						3550,
						3551
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3689,
					"name": "UpdateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3556,
			"name": "UpdateZipGeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the geo zone of type "
					},
					{
						"kind": "code",
						"text": "`zip`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 3562,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3692,
						"name": "UpdateGeoZoneBaseDTO.service_zone_id"
					}
				},
				{
					"id": 3563,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3693,
						"name": "UpdateGeoZoneBaseDTO.country_code"
					}
				},
				{
					"id": 3564,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3694,
						"name": "UpdateGeoZoneBaseDTO.metadata"
					}
				},
				{
					"id": 3561,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3690,
						"name": "UpdateGeoZoneBaseDTO.id"
					}
				},
				{
					"id": 3557,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`\"zip\"`"
									}
								]
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 3691,
						"name": "UpdateGeoZoneBaseDTO.type"
					}
				},
				{
					"id": 3558,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3559,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3560,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal expression of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3562,
						3563,
						3564,
						3561,
						3557,
						3558,
						3559,
						3560
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3689,
					"name": "UpdateGeoZoneBaseDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3217,
			"name": "UpdateGeoZoneDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the geo zone. The value of the "
					},
					{
						"kind": "code",
						"text": "`type`"
					},
					{
						"kind": "text",
						"text": " attributes allows for passing more attributes."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 3535,
						"name": "UpdateCountryGeoZoneDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3541,
						"name": "UpdateProvinceGeoZoneDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3548,
						"name": "UpdateCityGeoZoneDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 3556,
						"name": "UpdateZipGeoZoneDTO",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 3181,
			"name": "CreateServiceZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The service zone to be created."
					}
				]
			},
			"children": [
				{
					"id": 3182,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3183,
					"name": "fulfillment_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment set's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3184,
					"name": "geo_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zones associated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3508,
											"name": "CreateCountryGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3513,
											"name": "CreateProvinceGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3519,
											"name": "CreateCityGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3526,
											"name": "CreateZipGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3182,
						3183,
						3184
					]
				}
			]
		},
		{
			"id": 3185,
			"name": "UpdateServiceZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the service zone."
					}
				]
			},
			"children": [
				{
					"id": 3186,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3187,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3188,
					"name": "geo_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zones associated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3508,
											"name": "CreateCountryGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3513,
											"name": "CreateProvinceGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3519,
											"name": "CreateCityGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3526,
											"name": "CreateZipGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 3189,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 3190,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the geo zone."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													3190
												]
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3186,
						3187,
						3188
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 3191,
					"name": "UpsertServiceZoneDTO"
				}
			]
		},
		{
			"id": 3191,
			"name": "UpsertServiceZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A service zone to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 3192,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3186,
						"name": "UpdateServiceZoneDTO.id"
					}
				},
				{
					"id": 3193,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3187,
						"name": "UpdateServiceZoneDTO.name"
					}
				},
				{
					"id": 3194,
					"name": "geo_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zones associated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3508,
											"name": "CreateCountryGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3513,
											"name": "CreateProvinceGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3519,
											"name": "CreateCityGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3526,
											"name": "CreateZipGeoZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "service_zone_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 3195,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 3196,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the geo zone."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													3196
												]
											}
										]
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3188,
						"name": "UpdateServiceZoneDTO.geo_zones"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3192,
						3193,
						3194
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3185,
					"name": "UpdateServiceZoneDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3346,
			"name": "CreateShippingOptionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option rule to be created."
					}
				]
			},
			"children": [
				{
					"id": 3347,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3348,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3571,
						"name": "RuleOperatorType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3349,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value(s) of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3350,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3347,
						3348,
						3349,
						3350
					]
				}
			]
		},
		{
			"id": 3351,
			"name": "UpdateShippingOptionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the shipping option rule."
					}
				]
			},
			"children": [
				{
					"id": 3353,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.attribute"
					}
				},
				{
					"id": 3354,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3571,
						"name": "RuleOperatorType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.operator"
					}
				},
				{
					"id": 3355,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value(s) of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.value"
					}
				},
				{
					"id": 3356,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.shipping_option_id"
					}
				},
				{
					"id": 3352,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3353,
						3354,
						3355,
						3356,
						3352
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 3346,
							"name": "CreateShippingOptionRuleDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "Partial",
					"package": "typescript"
				}
			]
		},
		{
			"id": 3566,
			"name": "CreateShippingOptionTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option type to be created."
					}
				]
			},
			"children": [
				{
					"id": 3567,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3568,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3569,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3570,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3567,
						3568,
						3569,
						3570
					]
				}
			]
		},
		{
			"id": 3266,
			"name": "CreateShippingOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option to be created."
					}
				]
			},
			"children": [
				{
					"id": 3267,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3268,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping option's price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3565,
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3269,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3270,
					"name": "shipping_profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping profile's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3271,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3272,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option type associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 3566,
								"name": "CreateShippingOptionTypeDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "shipping_option_id"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 3273,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the associated fulfillment provider to process the shipping option\nand its associated fulfillments."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3274,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option rules associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 3346,
									"name": "CreateShippingOptionRuleDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "shipping_option_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3267,
						3268,
						3269,
						3270,
						3271,
						3272,
						3273,
						3274
					]
				}
			]
		},
		{
			"id": 3275,
			"name": "UpdateShippingOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the shipping option."
					}
				]
			},
			"children": [
				{
					"id": 3276,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3277,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3278,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping option's price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3565,
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3279,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3280,
					"name": "shipping_profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping profile's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3281,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3282,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option type associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3566,
										"name": "CreateShippingOptionTypeDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "shipping_option_id"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3283,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3284,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option type."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3284
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3285,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the associated fulfillment provider to process the shipping option\nand its associated fulfillments."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 3286,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option rules associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3346,
											"name": "CreateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "shipping_option_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 3287,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 3288,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the shipping option rule."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													3288
												]
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3276,
						3277,
						3278,
						3279,
						3280,
						3281,
						3282,
						3285,
						3286
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 3289,
					"name": "UpsertShippingOptionDTO"
				}
			]
		},
		{
			"id": 3289,
			"name": "UpsertShippingOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shipping option to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 3290,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3276,
						"name": "UpdateShippingOptionDTO.id"
					}
				},
				{
					"id": 3291,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3277,
						"name": "UpdateShippingOptionDTO.name"
					}
				},
				{
					"id": 3292,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping option's price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3565,
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3278,
						"name": "UpdateShippingOptionDTO.price_type"
					}
				},
				{
					"id": 3293,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3279,
						"name": "UpdateShippingOptionDTO.service_zone_id"
					}
				},
				{
					"id": 3294,
					"name": "shipping_profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping profile's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3280,
						"name": "UpdateShippingOptionDTO.shipping_profile_id"
					}
				},
				{
					"id": 3295,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3281,
						"name": "UpdateShippingOptionDTO.provider_id"
					}
				},
				{
					"id": 3296,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option type associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3566,
										"name": "CreateShippingOptionTypeDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "shipping_option_id"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3297,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3298,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option type."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3298
											]
										}
									]
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3282,
						"name": "UpdateShippingOptionDTO.type"
					}
				},
				{
					"id": 3299,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the associated fulfillment provider to process the shipping option\nand its associated fulfillments."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3285,
						"name": "UpdateShippingOptionDTO.data"
					}
				},
				{
					"id": 3300,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping option rules associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 3346,
											"name": "CreateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "shipping_option_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 3301,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 3302,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the shipping option rule."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													3302
												]
											}
										]
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3286,
						"name": "UpdateShippingOptionDTO.rules"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3290,
						3291,
						3292,
						3293,
						3294,
						3295,
						3296,
						3299,
						3300
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3275,
					"name": "UpdateShippingOptionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3319,
			"name": "CreateShippingProfileDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping profile to be created."
					}
				]
			},
			"children": [
				{
					"id": 3320,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3321,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3322,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3320,
						3321,
						3322
					]
				}
			]
		},
		{
			"id": 3323,
			"name": "UpdateShippingProfileDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the shipping profile."
					}
				]
			},
			"children": [
				{
					"id": 3324,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.name"
					}
				},
				{
					"id": 3325,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.type"
					}
				},
				{
					"id": 3326,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3324,
						3325,
						3326
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 3319,
							"name": "CreateShippingProfileDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "Partial",
					"package": "typescript"
				}
			]
		},
		{
			"id": 2713,
			"name": "IFulfillmentModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Fulfillment Module."
					}
				]
			},
			"children": [
				{
					"id": 2714,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2715,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a fulfillment set by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved fulfillment set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a fulfillment set by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSet = await fulfillmentModuleService.retrieve(\"fuset_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSet = await fulfillmentModuleService.retrieve(\"fuset_123\", {\n  relations: [\"service_zones\"],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2716,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the fulfillment set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2717,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the fulfillment set is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a fulfillment set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3118,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2718,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3118,
										"name": "FulfillmentSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2719,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2720,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of fulfillment sets based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillment sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of fulfillment sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSets = await fulfillmentModuleService.list({\n  id: [\"fuset_123\", \"fuset_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the fulfillment set:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSets = await fulfillmentModuleService.list(\n  {\n    id: [\"fuset_123\", \"fuset_321\"],\n  },\n  {\n    relations: [\"search_zones\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSets = await fulfillmentModuleService.list(\n  {\n    id: [\"fuset_123\", \"fuset_321\"],\n  },\n  {\n    relations: [\"search_zones\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2721,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved fulfillment sets."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3139,
										"name": "FilterableFulfillmentSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2722,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the fulfillment set is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a fulfillment set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3118,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2723,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3118,
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2724,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2725,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of fulfillment sets along with the total count of available fulfillment sets satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillment sets along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of fulfillment sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [fulfillmentSets, count] =\n  await fulfillmentModuleService.listAndCount({\n    id: [\"fuset_123\", \"fuset_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the fulfillment set:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [fulfillmentSets, count] =\n  await fulfillmentModuleService.listAndCount(\n    {\n      id: [\"fuset_123\", \"fuset_321\"],\n    },\n    {\n      relations: [\"search_zones\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [fulfillmentSets, count] =\n  await fulfillmentModuleService.listAndCount(\n    {\n      id: [\"fuset_123\", \"fuset_321\"],\n    },\n    {\n      relations: [\"search_zones\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2726,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved fulfillment sets."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3139,
										"name": "FilterableFulfillmentSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2727,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the fulfillment set is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a fulfillment set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3118,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2728,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3118,
													"name": "FulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2729,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2730,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates fulfillment sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created fulfillment sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSets = await fulfillmentModuleService.create(\n  [\n    {\n      name: \"Shipping\",\n      type: \"default\",\n    },\n    {\n      name: \"Pickup\",\n      type: \"provider-controlled\",\n    },\n  ]\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2731,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment sets to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3146,
											"name": "CreateFulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2732,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3118,
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2733,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a fulfillment set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created fulfillment set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSet = await fulfillmentModuleService.create({\n  name: \"Shipping\",\n  type: \"default\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2734,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment set to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3146,
										"name": "CreateFulfillmentSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2735,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3118,
										"name": "FulfillmentSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2736,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2737,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing fulfillment sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated fulfillment sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSets = await fulfillmentModuleService.update(\n  [\n    {\n      id: \"fuset_123\",\n      name: \"Shipping\",\n    },\n    {\n      id: \"fuset_321\",\n      name: \"Pickup\",\n    },\n  ]\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2738,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the fulfillment sets."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3150,
											"name": "UpdateFulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2739,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3118,
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2740,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing fulfillment set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated fulfillment set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillmentSet = await fulfillmentModuleService.update({\n  id: \"fuset_123\",\n  name: \"Shipping\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2741,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the fulfillment set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3150,
										"name": "UpdateFulfillmentSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2742,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3118,
										"name": "FulfillmentSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2743,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2744,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes fulfillment sets by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the fulfillment sets are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.delete([\n  \"fuset_123\",\n  \"fuset_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2745,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the fulfillment sets."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2746,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2747,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a fulfillment set by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the fulfillment set is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.delete(\"fuset_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2748,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the fulfillment set."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2749,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2750,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2751,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes fulfillment sets by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.softDelete([\n  \"fuset_123\",\n  \"fuset_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2752,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2753,
									"name": "fulfillmentIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the fulfillment sets."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2754,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3157,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2752,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2755,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2756,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2757,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted fulfillment by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.restore([\n  \"fuset_123\",\n  \"fuset_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2758,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2759,
									"name": "fulfillmentIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the fulfillment sets."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2760,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the fulfillment sets. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the fulfillment set's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3160,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2758,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2761,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2762,
					"name": "retrieveServiceZone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2763,
							"name": "retrieveServiceZone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a service zone by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved service zone."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a service zone by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst serviceZone =\n  await fulfillmentModuleService.retrieveServiceZone(\n    \"serzo_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst serviceZone =\n  await fulfillmentModuleService.retrieveServiceZone(\n    \"serzo_123\",\n    {\n      relations: [\"shipping_options\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2764,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the service zone."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2765,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the service zone is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a service zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3163,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2766,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3163,
										"name": "ServiceZoneDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2767,
					"name": "listServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2768,
							"name": "listServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of service zones based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of service zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of service zones using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst serviceZones =\n  await fulfillmentModuleService.listServiceZones({\n    id: [\"serzo_123\", \"serzo_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the service zone:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst serviceZones =\n  await fulfillmentModuleService.listServiceZones(\n    {\n      id: [\"serzo_123\", \"serzo_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst serviceZones =\n  await fulfillmentModuleService.listServiceZones(\n    {\n      id: [\"serzo_123\", \"serzo_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2769,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved service zones."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3173,
										"name": "FilterableServiceZoneProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2770,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the service zone is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a service zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3163,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2771,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3163,
											"name": "ServiceZoneDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2772,
					"name": "listAndCountServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2773,
							"name": "listAndCountServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of service zones along with the total count of available service zones satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of service zones along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of service zones using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [serviceZones, count] =\n  await fulfillmentModuleService.listAndCountServiceZones({\n    id: [\"serzo_123\", \"serzo_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the service zone:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [serviceZones, count] =\n  await fulfillmentModuleService.listAndCountServiceZones(\n    {\n      id: [\"serzo_123\", \"serzo_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [serviceZones, count] =\n  await fulfillmentModuleService.listAndCountServiceZones(\n    {\n      id: [\"serzo_123\", \"serzo_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2774,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved service zones."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3173,
										"name": "FilterableServiceZoneProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2775,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the service zone is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a service zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3163,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2776,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3163,
													"name": "ServiceZoneDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2777,
					"name": "createServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2778,
							"name": "createServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates service zones."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created service zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst serviceZones =\n  await fulfillmentModuleService.createServiceZones([\n    {\n      name: \"Nordic Shipping Methods\",\n      fulfillment_set_id: \"fuset_123\",\n    },\n    {\n      name: \"Pickup Service Area\",\n      fulfillment_set_id: \"fuset_321\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2779,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The service zones to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3181,
											"name": "CreateServiceZoneDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2780,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3163,
											"name": "ServiceZoneDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2781,
							"name": "createServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a service zone."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created service zone."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst serviceZone =\n  await fulfillmentModuleService.createServiceZones({\n    name: \"Nordic Shipping Methods\",\n    fulfillment_set_id: \"fuset_123\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2782,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The service zone to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3181,
										"name": "CreateServiceZoneDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2783,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3163,
										"name": "ServiceZoneDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2784,
					"name": "updateServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2785,
							"name": "updateServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing service zone."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated service zone."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst serviceZone =\n  await fulfillmentModuleService.updateServiceZones(\n    \"serzo_123\",\n    {\n      name: \"US\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2786,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the service zone."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2787,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the service zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3185,
										"name": "UpdateServiceZoneDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2788,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3163,
										"name": "ServiceZoneDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2789,
							"name": "updateServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing service zones matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated service zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst serviceZones =\n  await fulfillmentModuleService.updateServiceZones(\n    {\n      id: [\"serzo_123\", \"serzo_321\"],\n    },\n    {\n      name: \"US\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2790,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which service zones to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3173,
										"name": "FilterableServiceZoneProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2791,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the service zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3185,
										"name": "UpdateServiceZoneDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2792,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3163,
											"name": "ServiceZoneDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2793,
					"name": "upsertServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2794,
							"name": "upsertServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a service zone if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated service zone."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst serviceZone =\n  await fulfillmentModuleService.upsertServiceZones({\n    id: \"serzo_123\",\n    name: \"US\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2795,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the service zone to be created or updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3191,
										"name": "UpsertServiceZoneDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2796,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3163,
										"name": "ServiceZoneDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2797,
							"name": "upsertServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates service zones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated service zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst serviceZones =\n  await fulfillmentModuleService.upsertServiceZones([\n    {\n      id: \"serzo_123\",\n      name: \"US\",\n    },\n    {\n      name: \"US\",\n      fulfillment_set_id: \"fuset_123\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2798,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the service zones to be created or updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3191,
											"name": "UpsertServiceZoneDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2799,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3163,
											"name": "ServiceZoneDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2800,
					"name": "deleteServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2801,
							"name": "deleteServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes service zones by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the service zones are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteServiceZones([\n  \"serzo_123\",\n  \"serzo_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2802,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the service zone."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2803,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2804,
							"name": "deleteServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a service zone by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the service zone is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteServiceZones(\"serzo_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2805,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the service zone."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2806,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2807,
					"name": "softDeleteServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2808,
							"name": "softDeleteServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes service zones by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.softDeleteServiceZones([\n  \"serzo_123\",\n  \"serzo_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2809,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2810,
									"name": "serviceZoneIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the service zones."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2811,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3157,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2809,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2812,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2813,
					"name": "restoreServiceZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2814,
							"name": "restoreServiceZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted service zones by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.restoreServiceZones([\n  \"serzo_123\",\n  \"serzo_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2815,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2816,
									"name": "serviceZoneIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the service zones."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2817,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the service zones. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the service zone's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`{type relation name}`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3160,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2815,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2818,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2819,
					"name": "retrieveGeoZone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2820,
							"name": "retrieveGeoZone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a geo zone by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved geo zone."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a geo zone by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst geoZone =\n  await fulfillmentModuleService.retrieveGeoZone(\"fgz_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst geoZone =\n  await fulfillmentModuleService.retrieveGeoZone(\"fgz_123\", {\n    relations: [\"service_zone\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2821,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the geo zone."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2822,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the geo zone is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a geo zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3197,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2823,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3197,
										"name": "GeoZoneDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2824,
					"name": "listGeoZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2825,
							"name": "listGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of geo zones based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of geo zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of geo zones using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst geoZones = await fulfillmentModuleService.listGeoZones({\n  id: [\"fgz_123\", \"fgz_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the geo zone:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst geoZones = await fulfillmentModuleService.listGeoZones(\n  {\n    id: [\"fgz_123\", \"fgz_321\"],\n  },\n  {\n    relations: [\"service_zone\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst geoZones = await fulfillmentModuleService.listGeoZones(\n  {\n    id: [\"fgz_123\", \"fgz_321\"],\n  },\n  {\n    relations: [\"service_zone\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2826,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved geo zones."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3208,
										"name": "FilterableGeoZoneProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2827,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the geo zone is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a geo zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3197,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2828,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3197,
											"name": "GeoZoneDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2829,
					"name": "listAndCountGeoZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2830,
							"name": "listAndCountGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of geo zones along with the total count of available geo zones satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of geo zones along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of geo zones using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [geoZones, count] =\n  await fulfillmentModuleService.listAndCountGeoZones({\n    id: [\"fgz_123\", \"fgz_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the geo zone:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [geoZones, count] =\n  await fulfillmentModuleService.listAndCountGeoZones(\n    {\n      id: [\"fgz_123\", \"fgz_321\"],\n    },\n    {\n      relations: [\"service_zone\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [geoZones, count] =\n  await fulfillmentModuleService.listAndCountGeoZones(\n    {\n      id: [\"fgz_123\", \"fgz_321\"],\n    },\n    {\n      relations: [\"service_zone\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2831,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved geo zones."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3208,
										"name": "FilterableGeoZoneProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2832,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the geo zone is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a geo zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3197,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2833,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3197,
													"name": "GeoZoneDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2834,
					"name": "createGeoZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2835,
							"name": "createGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates geo zones."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created geo zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst geoZones =\n  await fulfillmentModuleService.createGeoZones([\n    {\n      type: \"country\",\n      service_zone_id: \"serzo_123\",\n      country_code: \"us\",\n    },\n    {\n      type: \"city\",\n      service_zone_id: \"serzo_321\",\n      province_code: \"VT\",\n      city: \"Vermont\",\n      country_code: \"us\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2836,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The geo zones to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3216,
											"name": "CreateGeoZoneDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2837,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3197,
											"name": "GeoZoneDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2838,
							"name": "createGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a geo zones."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created geo zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst geoZones =\n  await fulfillmentModuleService.createGeoZones({\n    type: \"country\",\n    service_zone_id: \"serzo_123\",\n    country_code: \"us\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2839,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The geo zone to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3216,
										"name": "CreateGeoZoneDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2840,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3197,
										"name": "GeoZoneDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2841,
					"name": "updateGeoZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2842,
							"name": "updateGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing geo zones."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated geo zones."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst geoZones =\n  await fulfillmentModuleService.updateGeoZones([\n    {\n      id: \"fgz_123\",\n      type: \"country\",\n      country_code: \"us\",\n    },\n    {\n      id: \"fgz_321\",\n      type: \"city\",\n      province_code: \"VT\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2843,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the geo zones."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3217,
											"name": "UpdateGeoZoneDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2844,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3197,
											"name": "GeoZoneDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2845,
							"name": "updateGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing fulfillment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated fulfillment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst geoZones =\n  await fulfillmentModuleService.updateGeoZones({\n    id: \"fgz_123\",\n    type: \"country\",\n    country_code: \"us\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2846,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the geo zone."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3217,
										"name": "UpdateGeoZoneDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2847,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3197,
										"name": "GeoZoneDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2848,
					"name": "deleteGeoZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2849,
							"name": "deleteGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes geo zones by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the geo zones are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteGeoZones([\n  \"fgz_123\",\n  \"fgz_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2850,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the geo zones."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2851,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2852,
							"name": "deleteGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a geo zone by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the geo zone is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteGeoZones(\"fgz_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2853,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the geo zone."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2854,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2855,
					"name": "softDeleteGeoZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2856,
							"name": "softDeleteGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes geo zones by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.softDeleteGeoZones([\n  \"fgz_123\",\n  \"fgz_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2857,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2858,
									"name": "geoZoneIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the geo zones."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2859,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3157,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2857,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2860,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2861,
					"name": "restoreGeoZones",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2862,
							"name": "restoreGeoZones",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted geo zones by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.restoreGeoZones([\n  \"fgz_123\",\n  \"fgz_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2863,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2864,
									"name": "geoZoneIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the geo zones."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2865,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the geo zones. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the geo zone's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`{type relation name}`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3160,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2863,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2866,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2867,
					"name": "retrieveShippingOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2868,
							"name": "retrieveShippingOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a shipping option by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved shipping option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a shipping option by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOption =\n  await fulfillmentModuleService.retrieveShippingOption(\n    \"so_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOption =\n  await fulfillmentModuleService.retrieveShippingOption(\n    \"so_123\",\n    {\n      relations: [\"fulfillments\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2869,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping option."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2870,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3218,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2871,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3218,
										"name": "ShippingOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2872,
					"name": "listShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2873,
							"name": "listShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping options based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.listShippingOptions({\n    id: [\"so_123\", \"so_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping option:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.listShippingOptions(\n    {\n      id: [\"so_123\", \"so_321\"],\n    },\n    {\n      relations: [\"fulfillments\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.listShippingOptions(\n    {\n      id: [\"so_123\", \"so_321\"],\n    },\n    {\n      relations: [\"fulfillments\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2874,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3237,
										"name": "FilterableShippingOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2875,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3218,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2876,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3218,
											"name": "ShippingOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2877,
					"name": "listShippingOptionsForContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2878,
							"name": "listShippingOptionsForContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping options based on the provided context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping options matching a context:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.listShippingOptionsForContext(\n    {\n      fulfillment_set_id: [\"fuset_123\"],\n      address: {\n        country_code: \"us\",\n      },\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping option:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.listShippingOptionsForContext(\n    {\n      fulfillment_set_id: [\"fuset_123\"],\n      address: {\n        country_code: \"us\",\n      },\n    },\n    {\n      relations: [\"fulfillments\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.listShippingOptionsForContext(\n    {\n      fulfillment_set_id: [\"fuset_123\"],\n      address: {\n        country_code: \"us\",\n      },\n    },\n    {\n      relations: [\"fulfillments\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2879,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the how the shipping option is being used. It\nacts as a filter for the retrieved shipping options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3247,
										"name": "FilterableShippingOptionForContextProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2880,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3218,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2881,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3218,
											"name": "ShippingOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2882,
					"name": "listAndCountShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2883,
							"name": "listAndCountShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping options along with the total count of available shipping options satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping options along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptions, count] =\n  await fulfillmentModuleService.listAndCountShippingOptions({\n    id: [\"so_123\", \"so_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping option:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptions, count] =\n  await fulfillmentModuleService.listAndCountShippingOptions(\n    {\n      id: [\"so_123\", \"so_321\"],\n    },\n    {\n      relations: [\"fulfillments\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptions, count] =\n  await fulfillmentModuleService.listAndCountShippingOptions(\n    {\n      id: [\"so_123\", \"so_321\"],\n    },\n    {\n      relations: [\"fulfillments\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2884,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Construct a type with the properties of T except for those in type K."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3237,
												"name": "FilterableShippingOptionProps",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "context"
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								},
								{
									"id": 2885,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3218,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2886,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3218,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2887,
					"name": "createShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2888,
							"name": "createShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates shipping options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created shipping options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.createShippingOptions([\n    {\n      name: \"DHL Express Shipping\",\n      price_type: \"flat\",\n      service_zone_id: \"serzo_123\",\n      shipping_profile_id: \"sp_123\",\n      provider_id: \"dhl\",\n      type: {\n        label: \"Express\",\n        description: \"Ship in 24 hours\",\n        code: \"express\",\n      },\n    },\n    {\n      name: \"Webshipper Shipping\",\n      price_type: \"flat\",\n      service_zone_id: \"serzo_321\",\n      shipping_profile_id: \"sp_321\",\n      provider_id: \"webshipper\",\n      type: {\n        label: \"Express\",\n        description: \"Ship in 24 hours\",\n        code: \"express\",\n      },\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2889,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping options to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3266,
											"name": "CreateShippingOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2890,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3218,
											"name": "ShippingOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2891,
							"name": "createShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a shipping option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created shipping option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOption =\n  await fulfillmentModuleService.createShippingOptions({\n    name: \"DHL Express Shipping\",\n    price_type: \"flat\",\n    service_zone_id: \"serzo_123\",\n    shipping_profile_id: \"sp_123\",\n    provider_id: \"dhl\",\n    type: {\n      label: \"Express\",\n      description: \"Ship in 24 hours\",\n      code: \"express\",\n    },\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2892,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping option to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3266,
										"name": "CreateShippingOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2893,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3218,
										"name": "ShippingOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2894,
					"name": "updateShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2895,
							"name": "updateShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing shipping option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated shipping option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOption =\n  await fulfillmentModuleService.updateShippingOptions(\n    \"so_123\",\n    {\n      name: \"Express shipping\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2896,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping option."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2897,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3275,
										"name": "UpdateShippingOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2898,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3218,
										"name": "ShippingOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2899,
							"name": "updateShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing shipping options matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated shipping options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.updateShippingOptions(\n    {\n      id: [\"so_123\", \"so_321\"],\n    },\n    {\n      name: \"Express Shipping\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2900,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which shipping options to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3237,
										"name": "FilterableShippingOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2901,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3275,
										"name": "UpdateShippingOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2902,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3218,
											"name": "ShippingOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2903,
					"name": "upsertShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2904,
							"name": "upsertShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a shipping option if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated shipping option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.upsertShippingOptions({\n    id: \"so_123\",\n    name: \"Express Shipping\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2905,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the shipping option to be created or updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3289,
										"name": "UpsertShippingOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2906,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3218,
										"name": "ShippingOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2907,
							"name": "upsertShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates shipping options if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated shipping options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptions =\n  await fulfillmentModuleService.upsertShippingOptions([\n    {\n      id: \"so_123\",\n      name: \"Express Shipping\",\n    },\n    {\n      name: \"Express Shipping\",\n      price_type: \"flat\",\n      service_zone_id: \"serzo_123\",\n      shipping_profile_id: \"sp_123\",\n      provider_id: \"webshipper\",\n      type: {\n        label: \"Express\",\n        description: \"express shipping\",\n        code: \"express\",\n      },\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2908,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the shipping options to be created or updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3289,
											"name": "UpsertShippingOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2909,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3218,
											"name": "ShippingOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2910,
					"name": "deleteShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2911,
							"name": "deleteShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes shipping options by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping options are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingOptions([\n  \"so_123\",\n  \"so_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2912,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping options."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2913,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2914,
							"name": "deleteShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a shipping option by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping option is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingOptions(\"so_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2915,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping option."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2916,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2917,
					"name": "softDeleteShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2918,
							"name": "softDeleteShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes shipping option by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.softDeleteShippingOptions([\n  \"so_123\",\n  \"so_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2919,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2920,
									"name": "shippingOptionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping options."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2921,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3157,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2919,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2922,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2923,
					"name": "restoreShippingOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2924,
							"name": "restoreShippingOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted shipping options by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.restoreShippingOptions([\n  \"so_123\",\n  \"so_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2925,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2926,
									"name": "shippingOptionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of {summary}"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2927,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the shipping options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the shipping option's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3160,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2925,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2928,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2929,
					"name": "retrieveShippingProfile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2930,
							"name": "retrieveShippingProfile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a shipping profile by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved shipping profile."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a shipping profile by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfile =\n  await fulfillmentModuleService.retrieveShippingProfile(\n    \"sp_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfile =\n  await fulfillmentModuleService.retrieveShippingProfile(\n    \"sp_123\",\n    {\n      relations: [\"options\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2931,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping profile."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2932,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping profile is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping profile."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3303,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2933,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3303,
										"name": "ShippingProfileDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2934,
					"name": "listShippingProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2935,
							"name": "listShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping profiles based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping profiles."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping profiles using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfiles =\n  await fulfillmentModuleService.listShippingProfiles({\n    id: [\"sp_123\", \"sp_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping profile:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfiles =\n  await fulfillmentModuleService.listShippingProfiles(\n    {\n      id: [\"sp_123\", \"sp_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfiles =\n  await fulfillmentModuleService.listShippingProfiles(\n    {\n      id: [\"sp_123\", \"sp_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2936,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping profiles."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3312,
										"name": "FilterableShippingProfileProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2937,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping profile is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping profile."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3303,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2938,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3303,
											"name": "ShippingProfileDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2939,
					"name": "listAndCountShippingProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2940,
							"name": "listAndCountShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping profiles along with the total count of available shipping profiles satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping profiles along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping profiles using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingProfiles, count] =\n  await fulfillmentModuleService.listAndCountShippingProfiles(\n    {\n      id: [\"sp_123\", \"sp_321\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping profile:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingProfiles, count] =\n  await fulfillmentModuleService.listAndCountShippingProfiles(\n    {\n      id: [\"sp_123\", \"sp_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingProfiles, count] =\n  await fulfillmentModuleService.listAndCountShippingProfiles(\n    {\n      id: [\"sp_123\", \"sp_321\"],\n    },\n    {\n      relations: [\"shipping_options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2941,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping profiles."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3312,
										"name": "FilterableShippingProfileProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2942,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping profile is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping profile."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3303,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2943,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3303,
													"name": "ShippingProfileDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2944,
					"name": "createShippingProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2945,
							"name": "createShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates shipping profiles."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created shipping profiles."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfiles =\n  await fulfillmentModuleService.createShippingProfiles([\n    {\n      name: \"Default\",\n    },\n    {\n      name: \"Digital\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2946,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping profiles to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3319,
											"name": "CreateShippingProfileDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2947,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3303,
											"name": "ShippingProfileDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2948,
							"name": "createShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a shipping profile."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created shipping profile."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfile =\n  await fulfillmentModuleService.createShippingProfiles({\n    name: \"Default\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2949,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping profile to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3319,
										"name": "CreateShippingProfileDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2950,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3303,
										"name": "ShippingProfileDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2951,
					"name": "updateShippingProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2952,
							"name": "updateShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing shipping profiles."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated shipping profiles."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfiles =\n  await fulfillmentModuleService.updateShippingProfiles([\n    {\n      id: \"sp_123\",\n      name: \"Default\",\n    },\n    {\n      id: \"sp_321\",\n      name: \"Digital\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2953,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping profiles to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3323,
											"name": "UpdateShippingProfileDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2954,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3303,
											"name": "ShippingProfileDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2955,
							"name": "updateShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing shipping profiles."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated shipping profiles."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingProfiles =\n  await fulfillmentModuleService.updateShippingProfiles({\n    id: \"sp_123\",\n    name: \"Default\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2956,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping profile to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3323,
										"name": "UpdateShippingProfileDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2957,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3303,
										"name": "ShippingProfileDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2958,
					"name": "deleteShippingProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2959,
							"name": "deleteShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes shipping profiles by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping profiles are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingProfiles([\n  \"sp_123\",\n  \"sp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2960,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping profiles."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2961,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2962,
							"name": "deleteShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a shipping profile by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping profile is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingProfiles(\n  \"sp_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2963,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping profile."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2964,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2965,
					"name": "softDeleteShippingProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2966,
							"name": "softDeleteShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes shipping profiles by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.softDeleteShippingProfiles([\n  \"sp_123\",\n  \"sp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2967,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2968,
									"name": "shippingProfileIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping profiles."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2969,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3157,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2967,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2970,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2971,
					"name": "restoreShippingProfiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2972,
							"name": "restoreShippingProfiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted shipping profiles by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.restoreShippingProfiles([\n  \"sp_123\",\n  \"sp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2973,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 2974,
									"name": "shippingProfileIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping profiles."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 2975,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the shipping profiles. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the shipping profile's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`{type relation name}`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3160,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2973,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2976,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2977,
					"name": "retrieveShippingOptionRule",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2978,
							"name": "retrieveShippingOptionRule",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a shipping option rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved shipping option rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a shipping option rule by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRule =\n  await fulfillmentModuleService.retrieveShippingOptionRule(\n    \"sorul_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRule =\n  await fulfillmentModuleService.retrieveShippingOptionRule(\n    \"sorul_123\",\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2979,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping option rule."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2980,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3327,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2981,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3327,
										"name": "ShippingOptionRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2982,
					"name": "listShippingOptionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2983,
							"name": "listShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping option rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping option rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping option rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRules =\n  await fulfillmentModuleService.listShippingOptionRules({\n    id: [\"sorul_123\", \"sorul_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping option rule:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRules =\n  await fulfillmentModuleService.listShippingOptionRules(\n    {\n      id: [\"sorul_123\", \"sorul_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRules =\n  await fulfillmentModuleService.listShippingOptionRules(\n    {\n      id: [\"sorul_123\", \"sorul_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2984,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping option rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3339,
										"name": "FilterableShippingOptionRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2985,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3327,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2986,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3327,
											"name": "ShippingOptionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2987,
					"name": "listAndCountShippingOptionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2988,
							"name": "listAndCountShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping option rules along with the total count of available shipping option rules satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping option rules along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping option rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptionRules, count] =\n  await fulfillmentModuleService.listAndCountShippingOptionRules(\n    {\n      id: [\"sorul_123\", \"sorul_321\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping option rule:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptionRules, count] =\n  await fulfillmentModuleService.listAndCountShippingOptionRules(\n    {\n      id: [\"sorul_123\", \"sorul_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptionRules, count] =\n  await fulfillmentModuleService.listAndCountShippingOptionRules(\n    {\n      id: [\"sorul_123\", \"sorul_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2989,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping option rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3339,
										"name": "FilterableShippingOptionRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2990,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3327,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2991,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3327,
													"name": "ShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2992,
					"name": "createShippingOptionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2993,
							"name": "createShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates shipping option rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created shipping option rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRules =\n  await fulfillmentModuleService.createShippingOptionRules([\n    {\n      attribute: \"customer_group\",\n      operator: \"in\",\n      value: \"cg_vipgroup\",\n      shipping_option_id: \"so_123\",\n    },\n    {\n      attribute: \"total_weight\",\n      operator: \"lt\",\n      value: \"2000\",\n      shipping_option_id: \"so_321\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2994,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping option rules to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3346,
											"name": "CreateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 2995,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3327,
											"name": "ShippingOptionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 2996,
							"name": "createShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a shipping option rule."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created shipping option rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRule =\n  await fulfillmentModuleService.createShippingOptionRules({\n    attribute: \"customer_group\",\n    operator: \"in\",\n    value: \"cg_vipgroup\",\n    shipping_option_id: \"so_123\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2997,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping option rule to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3346,
										"name": "CreateShippingOptionRuleDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 2998,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3327,
										"name": "ShippingOptionRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2999,
					"name": "updateShippingOptionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3000,
							"name": "updateShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing shipping option rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated shipping option rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRules =\n  await fulfillmentModuleService.updateShippingOptionRules([\n    {\n      id: \"sorul_123\",\n      operator: \"in\",\n    },\n    {\n      id: \"sorul_321\",\n      attribute: \"customer_group\",\n      value: \"cp_vipgroup\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3001,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the shipping option rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3351,
											"name": "UpdateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 3002,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3327,
											"name": "ShippingOptionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 3003,
							"name": "updateShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing shipping option rule."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated shipping option rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionRule =\n  await fulfillmentModuleService.updateShippingOptionRules({\n    id: \"sorul_123\",\n    operator: \"in\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3004,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the shipping option rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3351,
										"name": "UpdateShippingOptionRuleDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3005,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3327,
										"name": "ShippingOptionRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3006,
					"name": "deleteShippingOptionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3007,
							"name": "deleteShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes shipping option rules by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping option rules are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingOptionRules([\n  \"sorul_123\",\n  \"sorul_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3008,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping option rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3009,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 3010,
							"name": "deleteShippingOptionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a shipping option by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping option is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingOptionRules(\n  \"sorul_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3011,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping option."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3012,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3013,
					"name": "retrieveShippingOptionType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3014,
							"name": "retrieveShippingOptionType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a shipping option type by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved shipping option type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a shipping option type by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionType =\n  await fulfillmentModuleService.retrieveShippingOptionType(\n    \"sotype_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionType =\n  await fulfillmentModuleService.retrieveShippingOptionType(\n    \"sotype_123\",\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3015,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping option type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3016,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3357,
												"name": "ShippingOptionTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3017,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3357,
										"name": "ShippingOptionTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3018,
					"name": "listShippingOptionTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3019,
							"name": "listShippingOptionTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping option types based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping option types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping option types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionTypes =\n  await fulfillmentModuleService.listShippingOptionTypes({\n    id: [\"sotype_123\", \"sotype_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping option type:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionTypes =\n  await fulfillmentModuleService.listShippingOptionTypes(\n    {\n      id: [\"sotype_123\", \"sotype_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingOptionTypes =\n  await fulfillmentModuleService.listShippingOptionTypes(\n    {\n      id: [\"sotype_123\", \"sotype_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3020,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping option types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3367,
										"name": "FilterableShippingOptionTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3021,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3357,
												"name": "ShippingOptionTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3022,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3357,
											"name": "ShippingOptionTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3023,
					"name": "listAndCountShippingOptionTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3024,
							"name": "listAndCountShippingOptionTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping option types along with the total count of available shipping option types satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping option types along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping option types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptionTypes, count] =\n  await fulfillmentModuleService.listAndCountShippingOptionTypes(\n    {\n      id: [\"sotype_123\", \"sotype_321\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping option type:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptionTypes, count] =\n  await fulfillmentModuleService.listAndCountShippingOptionTypes(\n    {\n      id: [\"sotype_123\", \"sotype_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [shippingOptionTypes, count] =\n  await fulfillmentModuleService.listAndCountShippingOptionTypes(\n    {\n      id: [\"sotype_123\", \"sotype_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3025,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping option types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3367,
										"name": "FilterableShippingOptionTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3026,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping option type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping option type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3357,
												"name": "ShippingOptionTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3027,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3357,
													"name": "ShippingOptionTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3028,
					"name": "deleteShippingOptionTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3029,
							"name": "deleteShippingOptionTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes shipping option types by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping option types are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingOptionTypes([\n  \"sotype_123\",\n  \"sotype_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3030,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping option types."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3031,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 3032,
							"name": "deleteShippingOptionTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a shipping option type by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping option type is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait fulfillmentModuleService.deleteShippingOptionTypes(\n  \"sotype_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3033,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping option type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3034,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3035,
					"name": "retrieveFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3036,
							"name": "retrieveFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a fulfillment by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved fulfillment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a fulfillment by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillment =\n  await fulfillmentModuleService.retrieveFulfillment(\n    \"ful_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillment =\n  await fulfillmentModuleService.retrieveFulfillment(\n    \"ful_123\",\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3037,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the fulfillment."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3038,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the fulfillment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3374,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3039,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3374,
										"name": "FulfillmentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3040,
					"name": "listFulfillments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3041,
							"name": "listFulfillments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of fulfillments based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of fulfillments using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillments =\n  await fulfillmentModuleService.listFulfillments({\n    id: [\"ful_123\", \"ful_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the fulfillment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillments =\n  await fulfillmentModuleService.listFulfillments(\n    {\n      id: [\"ful_123\", \"ful_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst fulfillments =\n  await fulfillmentModuleService.listFulfillments(\n    {\n      id: [\"ful_123\", \"ful_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3042,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved fulfillments."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3393,
										"name": "FilterableFulfillmentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3043,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the fulfillment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3374,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3044,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3374,
											"name": "FulfillmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3045,
					"name": "listAndCountFulfillments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3046,
							"name": "listAndCountFulfillments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of fulfillments along with the total count of available fulfillments satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillments along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of fulfillments using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [fulfillments, count] =\n  await fulfillmentModuleService.listAndCountFulfillments(\n    {\n      id: [\"ful_123\", \"ful_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the fulfillment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [fulfillments, count] =\n  await fulfillmentModuleService.listAndCountFulfillments(\n    {\n      id: [\"ful_123\", \"ful_321\"],\n    },\n    {\n      relations: [\"shipping_option\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [fulfillments, count] =\n  await fulfillmentModuleService.listAndCountFulfillments({\n    id: [\"ful_123\", \"ful_321\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3047,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved fulfillment sets."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3393,
										"name": "FilterableFulfillmentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3048,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the fulfillment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3374,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3049,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3374,
													"name": "FulfillmentDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3050,
					"name": "createFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3051,
							"name": "createFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a fulfillment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created fulfillment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillment =\n  await fulfillmentModuleService.createFulfillment({\n    location_id: \"loc_123\",\n    provider_id: \"webshipper\",\n    delivery_address: {\n      address_1: \"4120 Auto Park Cir\",\n      country_code: \"us\",\n    },\n    items: [\n      {\n        title: \"Shirt\",\n        sku: \"SHIRT\",\n        quantity: 1,\n        barcode: \"ABCED\",\n      },\n    ],\n    labels: [\n      {\n        tracking_number: \"1234567\",\n        tracking_url: \"https://example.com/tracking\",\n        label_url: \"https://example.com/label\",\n      },\n    ],\n    order: {},\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3052,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3406,
										"name": "CreateFulfillmentDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3053,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3374,
										"name": "FulfillmentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3054,
					"name": "updateFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3055,
							"name": "updateFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing fulfillment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated fulfillment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillment =\n  await fulfillmentModuleService.updateFulfillment(\n    \"ful_123\",\n    {\n      location_id: \"loc_123\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3056,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the fulfillment."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3057,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3420,
										"name": "UpdateFulfillmentDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3058,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3374,
										"name": "FulfillmentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3059,
					"name": "cancelFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3060,
							"name": "cancelFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method cancels a fulfillment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "cancels a fulfillment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillment =\n await fulfillmentModuleService.cancelFulfillment(\"ful_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3061,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the fulfillment."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3062,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3374,
										"name": "FulfillmentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3063,
					"name": "retrieveFulfillmentOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3064,
							"name": "retrieveFulfillmentOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the fulfillment options of a fulfillment provider."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The fulfillment provider's options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst fulfillment =\n  await fulfillmentModuleService.retrieveFulfillmentOptions(\n    \"ful_123\"\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3065,
									"name": "providerId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment provider's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "unknown"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3066,
					"name": "validateFulfillmentOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3067,
							"name": "validateFulfillmentOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method validates a fulfillment option with the provider it belongs to."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the fulfillment option is valid with the specified provider."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst isValid =\n  await fulfillmentModuleService.validateFulfillmentOption(\n    \"webshipper\",\n    {\n      code: \"express\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3068,
									"name": "providerId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment provider's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3069,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment option to validate."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3070,
					"name": "validateShippingOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3071,
							"name": "validateShippingOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method checks whether a shipping option can be used for a specified context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the shipping option is valid for the specified context."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst isValid =\n  await fulfillmentModuleService.validateShippingOption(\n    \"so_123\",\n    {\n      customer_group: \"cg_vipgroup\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3072,
									"name": "shippingOptionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping option's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3073,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context to check."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3074,
					"name": "listFulfillmentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3075,
							"name": "listFulfillmentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of fulfillment providers based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillment providers."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of fulfillment providers using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst providers = await fulfillmentModuleService.listFulfillmentProviders({\n  id: [\"sepro_123\", \"sepro_321\"],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3076,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved fulfillment providers."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3428,
										"name": "FilterableFulfillmentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3077,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the fulfillment provider is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a fulfillment provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3106,
										"typeArguments": [
											{
												"type": "reference",
												"target": 3432,
												"name": "FulfillmentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3078,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3127,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3432,
											"name": "FulfillmentProviderDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						2714,
						2719,
						2724,
						2729,
						2736,
						2743,
						2750,
						2756,
						2762,
						2767,
						2772,
						2777,
						2784,
						2793,
						2800,
						2807,
						2813,
						2819,
						2824,
						2829,
						2834,
						2841,
						2848,
						2855,
						2861,
						2867,
						2872,
						2877,
						2882,
						2887,
						2894,
						2903,
						2910,
						2917,
						2923,
						2929,
						2934,
						2939,
						2944,
						2951,
						2958,
						2965,
						2971,
						2977,
						2982,
						2987,
						2992,
						2999,
						3006,
						3013,
						3018,
						3023,
						3028,
						3035,
						3040,
						3045,
						3050,
						3054,
						3059,
						3063,
						3066,
						3070,
						3074
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3092,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 3698,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3699,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3700,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3701,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3702,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3703,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3704,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3705,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3706,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3707,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3700,
								3701,
								3702,
								3703,
								3704,
								3705,
								3706,
								3707
							]
						}
					]
				}
			}
		},
		{
			"id": 3695,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3696,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3697,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3696,
						3697
					]
				}
			]
		},
		{
			"id": 3639,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3640,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3641,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 3695,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 3695,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 3642,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3643,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 3644,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3645,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3644,
														3645
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3646,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 3647,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3698,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 3648,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 3649,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 3650,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 3651,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 3698,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											3650,
											3651
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 3652,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3640,
						3641,
						3642,
						3646,
						3647,
						3648,
						3652
					]
				}
			]
		},
		{
			"id": 3440,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 3639,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3441,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3442,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3443,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3653,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 3444,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 3445,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 3446,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 3447,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 3448,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 3449,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 3450,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 3451,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							3449,
																							3450,
																							3451
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 3452,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 3653,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															3446,
															3447,
															3452
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 3453,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3454,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3455,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3456,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3457,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3458,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3459,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 3460,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3461,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3462,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3463,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 3464,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		},
																		{
																			"id": 3465,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 3466,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 3467,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				3464,
																				3465,
																				3466,
																				3467
																			]
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3460,
														3461,
														3462
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3442,
										3443,
										3444,
										3453,
										3454,
										3455,
										3456,
										3457,
										3458
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3653,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3698,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3654,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3655,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 3656,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3655,
										3656
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3092,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 2713,
					"name": "IFulfillmentModuleService"
				}
			]
		},
		{
			"id": 3663,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3664,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 3665,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3666,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 3667,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 3668,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3664,
						3665
					]
				}
			]
		},
		{
			"id": 3468,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3469,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3470,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3471,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3657,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3657,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3472,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3473,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3474,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 3663,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3657,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3475,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3476,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3477,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3478,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 3479,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3480,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3669,
												"typeArguments": [
													{
														"type": "reference",
														"target": 3479,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 3669,
													"typeArguments": [
														{
															"type": "reference",
															"target": 3479,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 3481,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						3469,
						3472,
						3475,
						3477
					]
				}
			]
		},
		{
			"id": 3127,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 3128,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 3129,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3138,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 3130,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3138,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 3131,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3132,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3133,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3134,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3135,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3468,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3136,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3137,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3128,
						3129,
						3130,
						3131,
						3132,
						3133,
						3134,
						3135,
						3136,
						3137
					]
				}
			],
			"typeParameters": [
				{
					"id": 3138,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				3106,
				3482,
				3157,
				3160,
				3572,
				3589,
				3602,
				3432,
				3428,
				3118,
				3139,
				3374,
				3393,
				3197,
				3208,
				3163,
				3173,
				3327,
				3339,
				3357,
				3367,
				3218,
				3237,
				3247,
				3303,
				3312,
				3612,
				3625,
				3633,
				3146,
				3150,
				3638,
				3406,
				3420,
				3684,
				3508,
				3513,
				3519,
				3526,
				3689,
				3535,
				3541,
				3548,
				3556,
				3181,
				3185,
				3191,
				3346,
				3351,
				3566,
				3266,
				3275,
				3289,
				3319,
				3323,
				2713,
				3695,
				3639,
				3092,
				3663,
				3468,
				3127
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				3571,
				3680,
				3682,
				3718,
				3743,
				3733,
				3486,
				3731,
				3728,
				3730,
				3722,
				3708,
				3657,
				3669,
				3534,
				3565,
				3216,
				3217,
				3698,
				3440,
				3653
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"2712": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": ""
		},
		"2713": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService"
		},
		"2714": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieve"
		},
		"2715": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieve"
		},
		"2716": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2717": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2718": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2719": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.list"
		},
		"2720": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.list"
		},
		"2721": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2722": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2723": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2724": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCount"
		},
		"2725": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCount"
		},
		"2726": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2727": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2728": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2729": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"2730": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"2731": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2732": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2733": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"2734": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2735": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2736": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"2737": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"2738": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2739": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2740": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"2741": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2742": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2743": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"2744": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"2745": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2746": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2747": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"2748": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2749": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2750": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDelete"
		},
		"2751": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDelete"
		},
		"2752": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2753": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "fulfillmentIds"
		},
		"2754": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2755": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2756": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restore"
		},
		"2757": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restore"
		},
		"2758": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2759": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "fulfillmentIds"
		},
		"2760": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2761": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2762": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveServiceZone"
		},
		"2763": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveServiceZone"
		},
		"2764": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2765": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2766": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2767": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listServiceZones"
		},
		"2768": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listServiceZones"
		},
		"2769": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2770": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2771": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2772": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountServiceZones"
		},
		"2773": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountServiceZones"
		},
		"2774": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2775": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2776": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2777": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"2778": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"2779": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2780": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2781": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"2782": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2783": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2784": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"2785": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"2786": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2787": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2788": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2789": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"2790": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "selector"
		},
		"2791": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2792": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2793": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.upsertServiceZones"
		},
		"2794": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.upsertServiceZones"
		},
		"2795": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2796": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2797": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.upsertServiceZones"
		},
		"2798": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2799": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2800": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"2801": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"2802": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2803": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2804": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"2805": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2806": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2807": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteServiceZones"
		},
		"2808": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteServiceZones"
		},
		"2809": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2810": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "serviceZoneIds"
		},
		"2811": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2812": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2813": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreServiceZones"
		},
		"2814": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreServiceZones"
		},
		"2815": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2816": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "serviceZoneIds"
		},
		"2817": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2818": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2819": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveGeoZone"
		},
		"2820": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveGeoZone"
		},
		"2821": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2822": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2823": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2824": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listGeoZones"
		},
		"2825": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listGeoZones"
		},
		"2826": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2827": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2828": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2829": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountGeoZones"
		},
		"2830": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountGeoZones"
		},
		"2831": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2832": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2833": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2834": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"2835": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"2836": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2837": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2838": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"2839": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2840": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2841": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"2842": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"2843": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2844": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2845": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"2846": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2847": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2848": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"2849": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"2850": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2851": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2852": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"2853": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2854": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2855": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteGeoZones"
		},
		"2856": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteGeoZones"
		},
		"2857": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2858": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "geoZoneIds"
		},
		"2859": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2860": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2861": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreGeoZones"
		},
		"2862": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreGeoZones"
		},
		"2863": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2864": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "geoZoneIds"
		},
		"2865": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2866": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2867": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOption"
		},
		"2868": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOption"
		},
		"2869": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2870": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2871": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2872": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptions"
		},
		"2873": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptions"
		},
		"2874": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2875": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2876": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2877": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionsForContext"
		},
		"2878": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionsForContext"
		},
		"2879": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2880": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2881": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2882": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptions"
		},
		"2883": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptions"
		},
		"2884": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2885": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2886": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2887": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"2888": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"2889": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2890": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2891": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"2892": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2893": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2894": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"2895": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"2896": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2897": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2898": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2899": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"2900": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "selector"
		},
		"2901": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2902": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2903": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.upsertShippingOptions"
		},
		"2904": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.upsertShippingOptions"
		},
		"2905": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2906": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2907": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.upsertShippingOptions"
		},
		"2908": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2909": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2910": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"2911": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"2912": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2913": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2914": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"2915": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2916": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2917": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingOptions"
		},
		"2918": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingOptions"
		},
		"2919": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2920": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionIds"
		},
		"2921": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2922": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2923": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingOptions"
		},
		"2924": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingOptions"
		},
		"2925": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2926": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionIds"
		},
		"2927": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2928": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2929": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingProfile"
		},
		"2930": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingProfile"
		},
		"2931": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2932": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2933": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2934": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingProfiles"
		},
		"2935": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingProfiles"
		},
		"2936": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2937": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2938": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2939": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingProfiles"
		},
		"2940": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingProfiles"
		},
		"2941": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2942": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2943": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2944": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"2945": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"2946": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2947": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2948": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"2949": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2950": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2951": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"2952": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"2953": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2954": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2955": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"2956": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2957": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2958": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"2959": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"2960": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"2961": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2962": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"2963": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2964": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2965": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingProfiles"
		},
		"2966": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingProfiles"
		},
		"2967": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2968": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingProfileIds"
		},
		"2969": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2970": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2971": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingProfiles"
		},
		"2972": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingProfiles"
		},
		"2973": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"2974": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingProfileIds"
		},
		"2975": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2976": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2977": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionRule"
		},
		"2978": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionRule"
		},
		"2979": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"2980": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2981": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2982": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionRules"
		},
		"2983": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionRules"
		},
		"2984": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2985": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2986": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2987": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionRules"
		},
		"2988": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionRules"
		},
		"2989": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"2990": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"2991": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2992": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"2993": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"2994": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2995": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2996": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"2997": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"2998": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"2999": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"3000": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"3001": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"3002": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3003": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"3004": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"3005": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3006": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"3007": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"3008": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"3009": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3010": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"3011": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"3012": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3013": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionType"
		},
		"3014": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionType"
		},
		"3015": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"3016": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"3017": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3018": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionTypes"
		},
		"3019": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionTypes"
		},
		"3020": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"3021": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"3022": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3023": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionTypes"
		},
		"3024": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionTypes"
		},
		"3025": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"3026": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"3027": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3028": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"3029": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"3030": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"3031": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3032": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"3033": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"3034": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3035": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillment"
		},
		"3036": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillment"
		},
		"3037": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"3038": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"3039": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3040": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillments"
		},
		"3041": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillments"
		},
		"3042": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"3043": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"3044": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3045": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountFulfillments"
		},
		"3046": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountFulfillments"
		},
		"3047": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"3048": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"3049": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3050": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createFulfillment"
		},
		"3051": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createFulfillment"
		},
		"3052": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"3053": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3054": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateFulfillment"
		},
		"3055": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateFulfillment"
		},
		"3056": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"3057": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"3058": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3059": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.cancelFulfillment"
		},
		"3060": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.cancelFulfillment"
		},
		"3061": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"3062": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3063": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillmentOptions"
		},
		"3064": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillmentOptions"
		},
		"3065": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "providerId"
		},
		"3066": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateFulfillmentOption"
		},
		"3067": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateFulfillmentOption"
		},
		"3068": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "providerId"
		},
		"3069": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"3070": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateShippingOption"
		},
		"3071": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateShippingOption"
		},
		"3072": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionId"
		},
		"3073": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "context"
		},
		"3074": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillmentProviders"
		},
		"3075": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillmentProviders"
		},
		"3076": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"3077": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"3078": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"3092": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"3106": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"3107": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"3108": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"3109": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"3110": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"3111": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"3112": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"3113": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"3115": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"3116": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"3117": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"3118": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO"
		},
		"3119": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.id"
		},
		"3120": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.name"
		},
		"3121": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.type"
		},
		"3122": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.metadata"
		},
		"3123": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.service_zones"
		},
		"3124": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.created_at"
		},
		"3125": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.updated_at"
		},
		"3126": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.deleted_at"
		},
		"3127": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"3128": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"3129": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"3130": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"3131": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"3132": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"3133": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"3134": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"3135": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"3136": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"3137": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"3138": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"3139": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps"
		},
		"3140": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.id"
		},
		"3141": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.name"
		},
		"3142": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.type"
		},
		"3143": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.service_zones"
		},
		"3144": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3145": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3146": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO"
		},
		"3147": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.name"
		},
		"3148": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.type"
		},
		"3149": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.service_zones"
		},
		"3150": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO"
		},
		"3151": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.id"
		},
		"3152": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.name"
		},
		"3153": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.type"
		},
		"3154": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.service_zones"
		},
		"3155": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "__type"
		},
		"3156": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "__type.id"
		},
		"3157": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"3158": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"3159": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"3160": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"3161": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"3162": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"3163": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO"
		},
		"3164": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.id"
		},
		"3165": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.name"
		},
		"3166": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.metadata"
		},
		"3167": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.fulfillment_sets"
		},
		"3168": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.geo_zones"
		},
		"3169": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.shipping_options"
		},
		"3170": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.created_at"
		},
		"3171": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.updated_at"
		},
		"3172": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.deleted_at"
		},
		"3173": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps"
		},
		"3174": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.id"
		},
		"3175": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.name"
		},
		"3176": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.geo_zones"
		},
		"3177": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.fulfillment_set"
		},
		"3179": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3180": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3181": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO"
		},
		"3182": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.name"
		},
		"3183": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.fulfillment_set_id"
		},
		"3184": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.geo_zones"
		},
		"3185": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO"
		},
		"3186": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.id"
		},
		"3187": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.name"
		},
		"3188": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.geo_zones"
		},
		"3189": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type"
		},
		"3190": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type.id"
		},
		"3191": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpsertServiceZoneDTO"
		},
		"3192": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.id"
		},
		"3193": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.name"
		},
		"3194": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.geo_zones"
		},
		"3195": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type"
		},
		"3196": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type.id"
		},
		"3197": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO"
		},
		"3198": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.id"
		},
		"3199": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.type"
		},
		"3200": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.country_code"
		},
		"3201": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.province_code"
		},
		"3202": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.city"
		},
		"3203": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.postal_expression"
		},
		"3204": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.metadata"
		},
		"3205": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.created_at"
		},
		"3206": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.updated_at"
		},
		"3207": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.deleted_at"
		},
		"3208": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps"
		},
		"3209": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.id"
		},
		"3210": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.type"
		},
		"3211": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.country_code"
		},
		"3212": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.province_code"
		},
		"3213": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.city"
		},
		"3214": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3215": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3216": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneDTO"
		},
		"3217": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneDTO"
		},
		"3218": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO"
		},
		"3219": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.id"
		},
		"3220": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.name"
		},
		"3221": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.price_type"
		},
		"3222": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone_id"
		},
		"3223": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile_id"
		},
		"3224": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.provider_id"
		},
		"3225": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_option_type_id"
		},
		"3226": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.data"
		},
		"3227": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.metadata"
		},
		"3228": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone"
		},
		"3229": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile"
		},
		"3230": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillment_provider"
		},
		"3231": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.type"
		},
		"3232": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.rules"
		},
		"3233": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillments"
		},
		"3234": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.created_at"
		},
		"3235": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.updated_at"
		},
		"3236": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.deleted_at"
		},
		"3237": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps"
		},
		"3238": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.id"
		},
		"3239": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.name"
		},
		"3240": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_profile_id"
		},
		"3241": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.price_type"
		},
		"3242": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.service_zone"
		},
		"3243": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_option_type"
		},
		"3244": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.rules"
		},
		"3245": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3246": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3247": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps"
		},
		"3248": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.fulfillment_set_id"
		},
		"3249": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.fulfillment_set_type"
		},
		"3250": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.address"
		},
		"3251": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"3252": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.country_code"
		},
		"3253": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.province_code"
		},
		"3254": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.city"
		},
		"3255": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.postal_expression"
		},
		"3256": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.context"
		},
		"3257": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.id"
		},
		"3258": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.name"
		},
		"3259": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_profile_id"
		},
		"3260": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.price_type"
		},
		"3261": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.service_zone"
		},
		"3262": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_option_type"
		},
		"3263": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.rules"
		},
		"3264": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3265": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3266": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO"
		},
		"3267": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.name"
		},
		"3268": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.price_type"
		},
		"3269": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.service_zone_id"
		},
		"3270": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.shipping_profile_id"
		},
		"3271": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.provider_id"
		},
		"3272": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.type"
		},
		"3273": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.data"
		},
		"3274": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.rules"
		},
		"3275": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO"
		},
		"3276": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.id"
		},
		"3277": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.name"
		},
		"3278": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.price_type"
		},
		"3279": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.service_zone_id"
		},
		"3280": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.shipping_profile_id"
		},
		"3281": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.provider_id"
		},
		"3282": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.type"
		},
		"3283": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"3284": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"3285": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.data"
		},
		"3286": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.rules"
		},
		"3287": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"3288": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"3289": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpsertShippingOptionDTO"
		},
		"3290": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.id"
		},
		"3291": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.name"
		},
		"3292": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.price_type"
		},
		"3293": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.service_zone_id"
		},
		"3294": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.shipping_profile_id"
		},
		"3295": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.provider_id"
		},
		"3296": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.type"
		},
		"3297": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"3298": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"3299": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.data"
		},
		"3300": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.rules"
		},
		"3301": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"3302": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"3303": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO"
		},
		"3304": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.id"
		},
		"3305": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.name"
		},
		"3306": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.type"
		},
		"3307": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.metadata"
		},
		"3308": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.shipping_options"
		},
		"3309": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.created_at"
		},
		"3310": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.updated_at"
		},
		"3311": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.deleted_at"
		},
		"3312": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps"
		},
		"3313": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.id"
		},
		"3314": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.name"
		},
		"3315": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.type"
		},
		"3316": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.shipping_options"
		},
		"3317": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3318": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3319": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO"
		},
		"3320": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.name"
		},
		"3321": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.type"
		},
		"3322": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.metadata"
		},
		"3323": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "UpdateShippingProfileDTO"
		},
		"3324": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "name"
		},
		"3325": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "type"
		},
		"3326": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "metadata"
		},
		"3327": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO"
		},
		"3328": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.id"
		},
		"3329": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.attribute"
		},
		"3330": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.operator"
		},
		"3331": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.value"
		},
		"3332": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type"
		},
		"3333": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type.value"
		},
		"3334": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option_id"
		},
		"3335": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option"
		},
		"3336": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.created_at"
		},
		"3337": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.updated_at"
		},
		"3338": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.deleted_at"
		},
		"3339": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps"
		},
		"3340": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.id"
		},
		"3341": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.attribute"
		},
		"3342": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.operator"
		},
		"3343": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.value"
		},
		"3344": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3345": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3346": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO"
		},
		"3347": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.attribute"
		},
		"3348": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.operator"
		},
		"3349": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.value"
		},
		"3350": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.shipping_option_id"
		},
		"3351": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "UpdateShippingOptionRuleDTO"
		},
		"3352": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "UpdateShippingOptionRuleDTO.id"
		},
		"3353": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "attribute"
		},
		"3354": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "operator"
		},
		"3355": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "value"
		},
		"3356": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "shipping_option_id"
		},
		"3357": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO"
		},
		"3358": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.id"
		},
		"3359": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.label"
		},
		"3360": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.description"
		},
		"3361": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.code"
		},
		"3362": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option_id"
		},
		"3363": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option"
		},
		"3364": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.created_at"
		},
		"3365": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.updated_at"
		},
		"3366": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.deleted_at"
		},
		"3367": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps"
		},
		"3368": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.id"
		},
		"3369": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.label"
		},
		"3370": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.description"
		},
		"3371": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.code"
		},
		"3372": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3373": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3374": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO"
		},
		"3375": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.id"
		},
		"3376": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.location_id"
		},
		"3377": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.packed_at"
		},
		"3378": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipped_at"
		},
		"3379": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivered_at"
		},
		"3380": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.canceled_at"
		},
		"3381": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.data"
		},
		"3382": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider_id"
		},
		"3383": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option_id"
		},
		"3384": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.metadata"
		},
		"3385": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option"
		},
		"3386": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider"
		},
		"3387": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivery_address"
		},
		"3388": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.items"
		},
		"3389": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.labels"
		},
		"3390": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.created_at"
		},
		"3391": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.updated_at"
		},
		"3392": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.deleted_at"
		},
		"3393": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps"
		},
		"3394": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.id"
		},
		"3395": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.location_id"
		},
		"3396": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.packed_at"
		},
		"3397": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.shipped_at"
		},
		"3398": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.delivered_at"
		},
		"3399": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.canceled_at"
		},
		"3400": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.provider_id"
		},
		"3401": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.shipping_option_id"
		},
		"3402": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.created_at"
		},
		"3403": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.updated_at"
		},
		"3404": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3405": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3406": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO"
		},
		"3407": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.location_id"
		},
		"3408": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.packed_at"
		},
		"3409": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.shipped_at"
		},
		"3410": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.delivered_at"
		},
		"3411": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.canceled_at"
		},
		"3412": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.data"
		},
		"3413": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.provider_id"
		},
		"3414": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.shipping_option_id"
		},
		"3415": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.metadata"
		},
		"3416": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.delivery_address"
		},
		"3417": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.items"
		},
		"3418": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.labels"
		},
		"3419": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.order"
		},
		"3420": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO"
		},
		"3421": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.location_id"
		},
		"3422": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.packed_at"
		},
		"3423": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.shipped_at"
		},
		"3424": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.delivered_at"
		},
		"3425": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.data"
		},
		"3426": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.metadata"
		},
		"3427": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.labels"
		},
		"3428": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FilterableFulfillmentProviderProps"
		},
		"3429": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FilterableFulfillmentProviderProps.id"
		},
		"3430": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3431": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3432": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO"
		},
		"3433": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.id"
		},
		"3434": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.name"
		},
		"3435": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.metadata"
		},
		"3436": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.shipping_options"
		},
		"3437": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.created_at"
		},
		"3438": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.updated_at"
		},
		"3439": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.deleted_at"
		},
		"3440": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"3441": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3442": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"3443": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"3444": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"3445": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3446": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"3447": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"3448": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3449": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"3450": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"3451": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"3452": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"3453": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"3454": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"3455": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"3456": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"3457": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"3458": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"3459": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3460": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"3461": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"3462": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"3463": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3464": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"3465": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"3466": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"3467": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"3468": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"3469": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"3470": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"3471": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"3472": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"3473": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"3474": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"3475": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"3476": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"3477": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"3478": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"3479": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"3480": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"3481": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"3482": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"3483": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"3484": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"3485": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"3486": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"3487": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3488": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"3489": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"3490": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"3491": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"3492": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"3493": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"3494": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"3495": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"3496": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"3497": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"3498": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"3499": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"3500": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"3501": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"3502": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"3503": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"3504": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"3505": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"3506": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"3507": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"3508": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCountryGeoZoneDTO"
		},
		"3509": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCountryGeoZoneDTO.type"
		},
		"3510": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"3511": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"3512": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"3513": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO"
		},
		"3514": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO.type"
		},
		"3515": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO.province_code"
		},
		"3516": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"3517": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"3518": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"3519": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO"
		},
		"3520": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.type"
		},
		"3521": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.province_code"
		},
		"3522": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.city"
		},
		"3523": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"3524": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"3525": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"3526": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO"
		},
		"3527": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.type"
		},
		"3528": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.province_code"
		},
		"3529": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.city"
		},
		"3530": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.postal_expression"
		},
		"3531": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"3532": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"3533": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"3534": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneType"
		},
		"3535": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCountryGeoZoneDTO"
		},
		"3536": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCountryGeoZoneDTO.type"
		},
		"3537": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"3538": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"3539": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"3540": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"3541": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO"
		},
		"3542": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO.type"
		},
		"3543": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO.province_code"
		},
		"3544": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"3545": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"3546": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"3547": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"3548": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO"
		},
		"3549": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.type"
		},
		"3550": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.province_code"
		},
		"3551": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.city"
		},
		"3552": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"3553": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"3554": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"3555": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"3556": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO"
		},
		"3557": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.type"
		},
		"3558": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.province_code"
		},
		"3559": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.city"
		},
		"3560": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.postal_expression"
		},
		"3561": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"3562": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"3563": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"3564": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"3565": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionPriceType"
		},
		"3566": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO"
		},
		"3567": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.label"
		},
		"3568": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.description"
		},
		"3569": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.code"
		},
		"3570": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.shipping_option_id"
		},
		"3571": {
			"sourceFileName": "../../../packages/types/src/common/rule.ts",
			"qualifiedName": "RuleOperatorType"
		},
		"3572": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO"
		},
		"3573": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.id"
		},
		"3574": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.fulfillment_id"
		},
		"3575": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.company"
		},
		"3576": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.first_name"
		},
		"3577": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.last_name"
		},
		"3578": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_1"
		},
		"3579": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_2"
		},
		"3580": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.city"
		},
		"3581": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.country_code"
		},
		"3582": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.province"
		},
		"3583": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.postal_code"
		},
		"3584": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.phone"
		},
		"3585": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.metadata"
		},
		"3586": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.created_at"
		},
		"3587": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.updated_at"
		},
		"3588": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.deleted_at"
		},
		"3589": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO"
		},
		"3590": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.id"
		},
		"3591": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.title"
		},
		"3592": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.quantity"
		},
		"3593": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.sku"
		},
		"3594": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.barcode"
		},
		"3595": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.line_item_id"
		},
		"3596": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.inventory_item_id"
		},
		"3597": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment_id"
		},
		"3598": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment"
		},
		"3599": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.created_at"
		},
		"3600": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.updated_at"
		},
		"3601": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.deleted_at"
		},
		"3602": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO"
		},
		"3603": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.id"
		},
		"3604": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_number"
		},
		"3605": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_url"
		},
		"3606": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.label_url"
		},
		"3607": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment_id"
		},
		"3608": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment"
		},
		"3609": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.created_at"
		},
		"3610": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.updated_at"
		},
		"3611": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.deleted_at"
		},
		"3612": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO"
		},
		"3613": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.fulfillment_id"
		},
		"3614": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.company"
		},
		"3615": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.first_name"
		},
		"3616": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.last_name"
		},
		"3617": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.address_1"
		},
		"3618": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.address_2"
		},
		"3619": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.city"
		},
		"3620": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.country_code"
		},
		"3621": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.province"
		},
		"3622": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.postal_code"
		},
		"3623": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.phone"
		},
		"3624": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.metadata"
		},
		"3625": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO"
		},
		"3626": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.fulfillment_id"
		},
		"3627": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.title"
		},
		"3628": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.sku"
		},
		"3629": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.quantity"
		},
		"3630": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.barcode"
		},
		"3631": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.line_item_id"
		},
		"3632": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.inventory_item_id"
		},
		"3633": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO"
		},
		"3634": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.tracking_number"
		},
		"3635": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.tracking_url"
		},
		"3636": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.label_url"
		},
		"3637": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.fulfillment_id"
		},
		"3638": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentOrderDTO"
		},
		"3639": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"3640": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"3641": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"3642": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"3643": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"3644": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"3645": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"3646": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"3647": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"3648": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"3649": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"3650": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"3651": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"3652": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"3653": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"3654": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"3655": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"3656": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"3657": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"3658": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"3659": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"3660": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"3661": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"3662": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"3663": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"3664": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"3665": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"3666": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"3667": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"3669": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"3670": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"3671": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"3672": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"3673": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"3674": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"3675": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"3676": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"3677": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"3678": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"3679": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"3680": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"3681": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"3682": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"3683": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"3684": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO"
		},
		"3685": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.type"
		},
		"3686": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"3687": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"3688": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"3689": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO"
		},
		"3690": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"3691": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "type"
		},
		"3692": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"3693": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"3694": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"3695": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"3696": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"3697": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"3698": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"3699": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"3700": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"3701": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"3702": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"3703": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"3704": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"3705": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"3706": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"3707": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"3708": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"3709": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"3710": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"3711": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"3712": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"3713": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"3714": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"3715": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"3716": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"3717": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"3718": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"3719": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3720": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"3721": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"3722": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"3723": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3724": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"3726": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"3727": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"3728": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"3729": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"3730": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"3731": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"3732": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"3733": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"3734": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3735": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"3736": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3737": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"3738": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3739": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"3740": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"3741": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"3742": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"3743": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"3744": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}