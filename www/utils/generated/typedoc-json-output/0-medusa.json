{
	"id": 19904,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 23637,
			"name": "MedusaError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Standardized error to be used across Medusa project."
					}
				]
			},
			"children": [
				{
					"id": 23660,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23661,
					"name": "message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.message"
					}
				},
				{
					"id": 23662,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23663,
					"name": "date",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23638,
					"name": "Types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23639,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23640,
									"name": "DB_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Errors stemming from the database"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23641,
									"name": "DUPLICATE_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23642,
									"name": "INVALID_ARGUMENT",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23643,
									"name": "INVALID_DATA",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23644,
									"name": "UNAUTHORIZED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23645,
									"name": "NOT_FOUND",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23646,
									"name": "NOT_ALLOWED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23647,
									"name": "UNEXPECTED_STATE",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23648,
									"name": "CONFLICT",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23649,
									"name": "PAYMENT_AUTHORIZATION_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23640,
										23641,
										23642,
										23643,
										23644,
										23645,
										23646,
										23647,
										23648,
										23649
									]
								}
							]
						}
					}
				},
				{
					"id": 23650,
					"name": "Codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23651,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23652,
									"name": "INSUFFICIENT_INVENTORY",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23653,
									"name": "CART_INCOMPATIBLE_STATE",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23652,
										23653
									]
								}
							]
						}
					}
				},
				{
					"id": 23654,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23655,
							"name": "new MedusaError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a standardized error to be used across Medusa project."
									}
								]
							},
							"parameters": [
								{
									"id": 23656,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "type of error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23657,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "message to go along with error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23658,
									"name": "code",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "code of error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23659,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "params"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 23637,
								"name": "MedusaError",
								"package": "medusa-core-utils"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23654
					]
				},
				{
					"title": "Properties",
					"children": [
						23660,
						23661,
						23662,
						23663,
						23638,
						23650
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			]
		},
		{
			"id": 23666,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
							"qualifiedName": "AwilixContainer"
						},
						"name": "AwilixContainer",
						"package": "awilix"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 23667,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23668,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 23669,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 23670,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameter": [
														{
															"id": 23673,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 23671,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 23672,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 23673,
																"name": "T",
																"package": "medusa-core-utils",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 23666,
														"name": "MedusaContainer",
														"package": "medusa-core-utils"
													}
												}
											]
										}
									}
								},
								{
									"id": 23674,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 23675,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 23676,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 23666,
														"name": "MedusaContainer",
														"package": "medusa-core-utils"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23668,
										23674
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22620,
			"name": "authenticateCustomer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22621,
					"name": "authenticateCustomer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 22618,
			"name": "authenticate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22619,
					"name": "authenticate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 23632,
			"name": "handler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23633,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 23634,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 23635,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
											"qualifiedName": "e.Request"
										},
										"name": "Request",
										"package": "@types/express",
										"qualifiedName": "e.Request"
									}
								},
								{
									"id": 23636,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
											"qualifiedName": "e.Response"
										},
										"name": "Response",
										"package": "@types/express",
										"qualifiedName": "e.Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 22622,
			"name": "wrapHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22623,
					"name": "wrapHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`import { wrapHandler } from \"@medusajs/utils\"`"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 22624,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23632,
								"name": "handler",
								"package": "@medusajs/medusa"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 22625,
			"name": "canAccessBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22626,
					"name": "canAccessBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 22627,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 22628,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 22629,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 22630,
			"name": "getRequestedBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22631,
					"name": "getRequestedBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 22632,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 22633,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 22634,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 22635,
			"name": "doesConditionBelongToDiscount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22636,
					"name": "doesConditionBelongToDiscount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 22637,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 22638,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 22639,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 22640,
			"name": "errorHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22641,
					"name": "errorHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22642,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 22643,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 22644,
											"name": "err",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 23637,
												"name": "MedusaError",
												"package": "medusa-core-utils"
											}
										},
										{
											"id": 22645,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 22646,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 22647,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 22648,
			"name": "isFeatureFlagEnabled",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22649,
					"name": "isFeatureFlagEnabled",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 22650,
							"name": "flagKey",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22651,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 22652,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 22653,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 22654,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 22655,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 22656,
			"name": "normalizeQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22657,
					"name": "normalizeQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Normalize an input query, especially from array like query params to an array type\ne.g: /admin/orders/?fields[]=id,status,cart_id becomes { fields: [\"id\", \"status\", \"cart_id\"] }"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22658,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 22659,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 22660,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 22661,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 22662,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 22663,
			"name": "requireCustomerAuthentication",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22664,
					"name": "requireCustomerAuthentication",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 22665,
			"name": "transformBody",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22666,
					"name": "transformBody",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 22667,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 22668,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22891,
								"typeArguments": [
									{
										"type": "reference",
										"target": 22667,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 22669,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22670,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 22671,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 22672,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 22673,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 22674,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 22675,
			"name": "transformIncludesOptions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22676,
					"name": "transformIncludesOptions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve the includes options from the fields query param.\nIf the include option is present then assigned it to includes on req"
							}
						]
					},
					"parameters": [
						{
							"id": 22677,
							"name": "allowedIncludes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fields that can be passed and assign to req.includes"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 22678,
							"name": "expectedIncludes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fields that the consumer can pass to the end point using this middleware. It is a subset of "
									},
									{
										"kind": "code",
										"text": "`allowedIncludes`"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22679,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 22680,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 22681,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 22682,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 22683,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 22684,
			"name": "transformQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22685,
					"name": "transformQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Middleware that transform the query input for the admin end points"
							}
						]
					},
					"typeParameter": [
						{
							"id": 22686,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22807,
								"name": "RequestQueryFields",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 22687,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
									"qualifiedName": "BaseEntity"
								},
								"name": "BaseEntity",
								"package": "@medusajs/medusa"
							}
						}
					],
					"parameters": [
						{
							"id": 22688,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22891,
								"typeArguments": [
									{
										"type": "reference",
										"target": 22686,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 22689,
							"name": "queryConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22796,
								"typeArguments": [
									{
										"type": "reference",
										"target": 22687,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryConfig",
								"package": "@medusajs/medusa"
							},
							"defaultValue": "{}"
						},
						{
							"id": 22690,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22691,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 22692,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 22693,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 22694,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 22695,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 22696,
			"name": "transformStoreQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22697,
					"name": "transformStoreQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Middleware that transform the query input for the store endpoints"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`transformQuery`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 22698,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22807,
								"name": "RequestQueryFields",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 22699,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
									"qualifiedName": "BaseEntity"
								},
								"name": "BaseEntity",
								"package": "@medusajs/medusa"
							}
						}
					],
					"parameters": [
						{
							"id": 22700,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22891,
								"typeArguments": [
									{
										"type": "reference",
										"target": 22698,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 22701,
							"name": "queryConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 22796,
								"typeArguments": [
									{
										"type": "reference",
										"target": 22699,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryConfig",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 22702,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22703,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 22704,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 22705,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 22706,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 22707,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 19909,
			"name": "AdminPostAnalyticsConfigReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19910,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19911,
							"name": "new AdminPostAnalyticsConfigReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19909,
								"name": "AdminPostAnalyticsConfigReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19912,
					"name": "opt_out",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19913,
					"name": "anonymize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19910
					]
				},
				{
					"title": "Properties",
					"children": [
						19912,
						19913
					]
				}
			]
		},
		{
			"id": 19905,
			"name": "AdminAnalyticsConfigRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19906,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19907,
							"name": "analytics_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
									"qualifiedName": "AnalyticsConfig"
								},
								"name": "AnalyticsConfig",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19907
							]
						}
					]
				}
			}
		},
		{
			"id": 19908,
			"name": "AdminAnalyticsConfigDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19914,
			"name": "AdminPostAnalyticsConfigAnalyticsConfigReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19915,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19916,
							"name": "new AdminPostAnalyticsConfigAnalyticsConfigReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19914,
								"name": "AdminPostAnalyticsConfigAnalyticsConfigReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19917,
					"name": "opt_out",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19918,
					"name": "anonymize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19915
					]
				},
				{
					"title": "Properties",
					"children": [
						19917,
						19918
					]
				}
			]
		},
		{
			"id": 19925,
			"name": "AdminPostAuthReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The admin's credentials used to log in."
					}
				]
			},
			"children": [
				{
					"id": 19926,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19927,
							"name": "new AdminPostAuthReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The admin's credentials used to log in."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19925,
								"name": "AdminPostAuthReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19928,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19929,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19926
					]
				},
				{
					"title": "Properties",
					"children": [
						19928,
						19929
					]
				}
			]
		},
		{
			"id": 19919,
			"name": "AdminAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19920,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19921,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "User details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19921
							]
						}
					]
				}
			}
		},
		{
			"id": 19922,
			"name": "AdminBearerAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The access token of the user, if they're authenticated successfully."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19923,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19924,
							"name": "access_token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access token that can be used to send authenticated requests."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19924
							]
						}
					]
				}
			}
		},
		{
			"id": 19937,
			"name": "AdminPostBatchesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the batch job to create."
					}
				]
			},
			"children": [
				{
					"id": 19938,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19939,
							"name": "new AdminPostBatchesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the batch job to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19937,
								"name": "AdminPostBatchesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19940,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of batch job to start, which is defined by the `batchType` property of the associated batch job strategy."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19941,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional infomration regarding the batch to be used for processing."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 19942,
					"name": "dry_run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set a batch job in dry_run mode, which would delay executing the batch job until it's confirmed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19938
					]
				},
				{
					"title": "Properties",
					"children": [
						19940,
						19941,
						19942
					]
				}
			]
		},
		{
			"id": 19930,
			"name": "AdminBatchJobRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The batch job's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19931,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19932,
							"name": "batch_job",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Batch job details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
									"qualifiedName": "BatchJob"
								},
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19932
							]
						}
					]
				}
			}
		},
		{
			"id": 19933,
			"name": "AdminBatchJobListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19934,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19935,
									"name": "batch_jobs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of batch job details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
												"qualifiedName": "BatchJob"
											},
											"name": "BatchJob",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19935
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19936,
			"name": "defaultAdminBatchFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19943,
			"name": "AdminGetBatchPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request parameters used to configure and paginate retrieved batch jobs."
					}
				]
			},
			"children": [
				{
					"id": 19944,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19945,
							"name": "new AdminGetBatchPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19943,
								"name": "AdminGetBatchPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19946,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 19947,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 19948,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19949,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19950,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19944
					]
				},
				{
					"title": "Properties",
					"children": [
						19946,
						19947,
						19948,
						19949,
						19950
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 19951,
					"name": "AdminGetBatchParams"
				}
			]
		},
		{
			"id": 19951,
			"name": "AdminGetBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure pagination of the retrieved batch jobs."
					}
				]
			},
			"children": [
				{
					"id": 19952,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19953,
							"name": "new AdminGetBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19951,
								"name": "AdminGetBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 19945,
								"name": "AdminGetBatchPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 19944,
						"name": "AdminGetBatchPaginationParams.constructor"
					}
				},
				{
					"id": 19963,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 19946,
						"name": "AdminGetBatchPaginationParams.limit"
					}
				},
				{
					"id": 19964,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 19947,
						"name": "AdminGetBatchPaginationParams.offset"
					}
				},
				{
					"id": 19965,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 19948,
						"name": "AdminGetBatchPaginationParams.expand"
					}
				},
				{
					"id": 19966,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 19949,
						"name": "AdminGetBatchPaginationParams.fields"
					}
				},
				{
					"id": 19967,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 19950,
						"name": "AdminGetBatchPaginationParams.order"
					}
				},
				{
					"id": 19954,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter batch jobs by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19955,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter batch jobs by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19956,
					"name": "confirmed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`confirmed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 22824,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19957,
					"name": "pre_processed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`pre_processed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 22824,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19958,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`completed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 22824,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19959,
					"name": "failed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`failed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 22824,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19960,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 22824,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19961,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19962,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19952
					]
				},
				{
					"title": "Properties",
					"children": [
						19963,
						19964,
						19965,
						19966,
						19967,
						19954,
						19955,
						19956,
						19957,
						19958,
						19959,
						19960,
						19961,
						19962
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 19943,
					"name": "AdminGetBatchPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19982,
			"name": "AdminPostProductsToCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the collection."
					}
				]
			},
			"children": [
				{
					"id": 19983,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19984,
							"name": "new AdminPostProductsToCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19982,
								"name": "AdminPostProductsToCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19985,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product IDs to add to the Product Collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19983
					]
				},
				{
					"title": "Properties",
					"children": [
						19985
					]
				}
			]
		},
		{
			"id": 19986,
			"name": "AdminPostCollectionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection's details."
					}
				]
			},
			"children": [
				{
					"id": 19987,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19988,
							"name": "new AdminPostCollectionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product collection's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19986,
								"name": "AdminPostCollectionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19989,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19990,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional handle to be used in slugs. If none is provided, the kebab-case version of the title will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19991,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19987
					]
				},
				{
					"title": "Properties",
					"children": [
						19989,
						19990,
						19991
					]
				}
			]
		},
		{
			"id": 19968,
			"name": "defaultAdminCollectionsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19969,
			"name": "defaultAdminCollectionsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19970,
			"name": "AdminCollectionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19971,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19972,
									"name": "collections",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of collection details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
												"qualifiedName": "ProductCollection"
											},
											"name": "ProductCollection",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19972
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19973,
			"name": "AdminCollectionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19974,
			"name": "AdminDeleteProductsFromCollectionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Deletion operation details"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19975,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19976,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the collection"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 19977,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of object the removal was executed on"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "product-collection"
						},
						{
							"id": 19978,
							"name": "removed_products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs of the products removed from the collection"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19976,
								19977,
								19978
							]
						}
					]
				}
			}
		},
		{
			"id": 19979,
			"name": "AdminCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19980,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19981,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product Collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
									"qualifiedName": "ProductCollection"
								},
								"name": "ProductCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19981
							]
						}
					]
				}
			}
		},
		{
			"id": 19992,
			"name": "AdminGetCollectionsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 19993,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19994,
							"name": "new AdminGetCollectionsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19992,
								"name": "AdminGetCollectionsPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19995,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 19996,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19993
					]
				},
				{
					"title": "Properties",
					"children": [
						19995,
						19996
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 19997,
					"name": "AdminGetCollectionsParams"
				}
			]
		},
		{
			"id": 19997,
			"name": "AdminGetCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 19998,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19999,
							"name": "new AdminGetCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19997,
								"name": "AdminGetCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 19994,
								"name": "AdminGetCollectionsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 19993,
						"name": "AdminGetCollectionsPaginationParams.constructor"
					}
				},
				{
					"id": 20008,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 19995,
						"name": "AdminGetCollectionsPaginationParams.limit"
					}
				},
				{
					"id": 20009,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 19996,
						"name": "AdminGetCollectionsPaginationParams.offset"
					}
				},
				{
					"id": 20000,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter product collections by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20001,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product collections by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20002,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20003,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20004,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20005,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Term to search product collections by their title and handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20006,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20007,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product collections by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19998
					]
				},
				{
					"title": "Properties",
					"children": [
						20008,
						20009,
						20000,
						20001,
						20002,
						20003,
						20004,
						20005,
						20006,
						20007
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 19992,
					"name": "AdminGetCollectionsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20010,
			"name": "AdminDeleteProductsFromCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to remove from the collection."
					}
				]
			},
			"children": [
				{
					"id": 20011,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20012,
							"name": "new AdminDeleteProductsFromCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to remove from the collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20010,
								"name": "AdminDeleteProductsFromCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20013,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product IDs to remove from the Product Collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20011
					]
				},
				{
					"title": "Properties",
					"children": [
						20013
					]
				}
			]
		},
		{
			"id": 20014,
			"name": "AdminPostCollectionsCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection's details to update."
					}
				]
			},
			"children": [
				{
					"id": 20015,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20016,
							"name": "new AdminPostCollectionsCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product collection's details to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20014,
								"name": "AdminPostCollectionsCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20017,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20018,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional handle to be used in slugs. If none is provided, the kebab-case version of the title will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20019,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20015
					]
				},
				{
					"title": "Properties",
					"children": [
						20017,
						20018,
						20019
					]
				}
			]
		},
		{
			"id": 20020,
			"name": "AdminCurrenciesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of currencies with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20021,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20022,
									"name": "currencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of currency details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
												"qualifiedName": "Currency"
											},
											"name": "Currency",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20022
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20023,
			"name": "AdminCurrenciesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A currency's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20024,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20025,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
									"qualifiedName": "Currency"
								},
								"name": "Currency",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20025
							]
						}
					]
				}
			}
		},
		{
			"id": 20026,
			"name": "AdminGetCurrenciesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved currencies."
					}
				]
			},
			"children": [
				{
					"id": 20027,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20028,
							"name": "new AdminGetCurrenciesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20026,
								"name": "AdminGetCurrenciesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22883,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22882,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 20029,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Code to filter currencies by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20030,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search parameter for currencies."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20031,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter currencies by whether they include tax."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "tax_inclusive_pricing"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20032,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": ".\nBy default, the returned currencies will be sorted by their "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 22886,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 20033,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 22884,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 20034,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 22885,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20027
					]
				},
				{
					"title": "Properties",
					"children": [
						20029,
						20030,
						20031,
						20032,
						20033,
						20034
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22881,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20035,
			"name": "AdminPostCurrenciesCurrencyReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update in the currency"
					}
				]
			},
			"children": [
				{
					"id": 20036,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20037,
							"name": "new AdminPostCurrenciesCurrencyReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update in the currency"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20035,
								"name": "AdminPostCurrenciesCurrencyReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20038,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of currency."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20036
					]
				},
				{
					"title": "Properties",
					"children": [
						20038
					]
				}
			]
		},
		{
			"id": 20047,
			"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customers to add to the customer group."
					}
				]
			},
			"children": [
				{
					"id": 20048,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20049,
							"name": "new AdminPostCustomerGroupsGroupCustomersBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers to add to the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20047,
								"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20050,
					"name": "customer_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ids of the customers to add"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23135,
							"name": "CustomerGroupsBatchCustomer",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20048
					]
				},
				{
					"title": "Properties",
					"children": [
						20050
					]
				}
			]
		},
		{
			"id": 20051,
			"name": "AdminPostCustomerGroupsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer group to create."
					}
				]
			},
			"children": [
				{
					"id": 20052,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20053,
							"name": "new AdminPostCustomerGroupsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer group to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20051,
								"name": "AdminPostCustomerGroupsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20054,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name of the customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20055,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata of the customer group."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20052
					]
				},
				{
					"title": "Properties",
					"children": [
						20054,
						20055
					]
				}
			]
		},
		{
			"id": 20056,
			"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customers to remove from the customer group."
					}
				]
			},
			"children": [
				{
					"id": 20057,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20058,
							"name": "new AdminDeleteCustomerGroupsGroupCustomerBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers to remove from the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20056,
								"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20059,
					"name": "customer_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ids of the customers to remove"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23135,
							"name": "CustomerGroupsBatchCustomer",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20057
					]
				},
				{
					"title": "Properties",
					"children": [
						20059
					]
				}
			]
		},
		{
			"id": 20060,
			"name": "AdminGetCustomerGroupsGroupParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20061,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20062,
							"name": "new AdminGetCustomerGroupsGroupParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20060,
								"name": "AdminGetCustomerGroupsGroupParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20063,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20064,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20061
					]
				},
				{
					"title": "Properties",
					"children": [
						20063,
						20064
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20039,
			"name": "AdminCustomerGroupsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer group's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20040,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20041,
							"name": "customer_group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer group details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
									"qualifiedName": "CustomerGroup"
								},
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20041
							]
						}
					]
				}
			}
		},
		{
			"id": 20042,
			"name": "AdminCustomerGroupsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20043,
			"name": "AdminCustomerGroupsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20044,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20045,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of customer group details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
												"qualifiedName": "CustomerGroup"
											},
											"name": "CustomerGroup",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20045
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20046,
			"name": "defaultAdminCustomerGroupsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 20065,
			"name": "AdminGetCustomerGroupsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved customer groups."
					}
				]
			},
			"children": [
				{
					"id": 20066,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20067,
							"name": "new AdminGetCustomerGroupsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20065,
								"name": "AdminGetCustomerGroupsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23141,
								"name": "FilterableCustomerGroupProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23140,
						"name": "FilterableCustomerGroupProps.constructor"
					}
				},
				{
					"id": 20068,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20069,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20070,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 20071,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20072,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "FindPaginationParams.fields"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20073,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23142,
						"name": "FilterableCustomerGroupProps.id"
					}
				},
				{
					"id": 20074,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search customer groups by their name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23143,
						"name": "FilterableCustomerGroupProps.q"
					}
				},
				{
					"id": 20075,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23144,
						"name": "FilterableCustomerGroupProps.name"
					}
				},
				{
					"id": 20076,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23145,
						"name": "FilterableCustomerGroupProps.updated_at"
					}
				},
				{
					"id": 20077,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23146,
						"name": "FilterableCustomerGroupProps.created_at"
					}
				},
				{
					"id": 20078,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customer groups by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23147,
						"name": "FilterableCustomerGroupProps.discount_condition_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20066
					]
				},
				{
					"title": "Properties",
					"children": [
						20068,
						20069,
						20070,
						20071,
						20072,
						20073,
						20074,
						20075,
						20076,
						20077,
						20078
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23139,
					"name": "FilterableCustomerGroupProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20079,
			"name": "AdminPostCustomerGroupsGroupReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update in the customer group."
					}
				]
			},
			"children": [
				{
					"id": 20080,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20081,
							"name": "new AdminPostCustomerGroupsGroupReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update in the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20079,
								"name": "AdminPostCustomerGroupsGroupReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20082,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name of the customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20083,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata of the customer group."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20080
					]
				},
				{
					"title": "Properties",
					"children": [
						20082,
						20083
					]
				}
			]
		},
		{
			"id": 20091,
			"name": "AdminPostCustomersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to create."
					}
				]
			},
			"children": [
				{
					"id": 20092,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20093,
							"name": "new AdminPostCustomersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20091,
								"name": "AdminPostCustomersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20094,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20095,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20096,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20097,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20098,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20099,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20092
					]
				},
				{
					"title": "Properties",
					"children": [
						20094,
						20095,
						20096,
						20097,
						20098,
						20099
					]
				}
			]
		},
		{
			"id": 20084,
			"name": "AdminCustomersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20085,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20086,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20086
							]
						}
					]
				}
			}
		},
		{
			"id": 20087,
			"name": "AdminCustomersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of customers with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20088,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20089,
									"name": "customers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of customer details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
												"qualifiedName": "Customer"
											},
											"name": "Customer",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20089
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20090,
			"name": "defaultAdminCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20100,
			"name": "AdminGetCustomersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved customers."
					}
				]
			},
			"children": [
				{
					"id": 20101,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20102,
							"name": "new AdminGetCustomersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20100,
								"name": "AdminGetCustomersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23150,
								"name": "AdminListCustomerSelector.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23149,
						"name": "AdminListCustomerSelector.constructor"
					}
				},
				{
					"id": 20103,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 20104,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20105,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20106,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20107,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term used to search customers' email, first name, last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23151,
						"name": "AdminListCustomerSelector.q"
					}
				},
				{
					"id": 20108,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by whether they have an account."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23152,
						"name": "AdminListCustomerSelector.has_account"
					}
				},
				{
					"id": 20109,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by the customer's customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23153,
						"name": "AdminListCustomerSelector.groups"
					}
				},
				{
					"id": 20110,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23154,
						"name": "AdminListCustomerSelector.order"
					}
				},
				{
					"id": 20111,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23155,
						"name": "AdminListCustomerSelector.created_at"
					}
				},
				{
					"id": 20112,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23156,
						"name": "AdminListCustomerSelector.updated_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20101
					]
				},
				{
					"title": "Properties",
					"children": [
						20103,
						20104,
						20105,
						20106,
						20107,
						20108,
						20109,
						20110,
						20111,
						20112
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23148,
					"name": "AdminListCustomerSelector",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 23157,
			"name": "Group",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23158,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23159,
							"name": "new Group",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23157,
								"name": "Group",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23160,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23158
					]
				},
				{
					"title": "Properties",
					"children": [
						23160
					]
				}
			]
		},
		{
			"id": 20113,
			"name": "AdminPostCustomersCustomerReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to update."
					}
				]
			},
			"children": [
				{
					"id": 20114,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20115,
							"name": "new AdminPostCustomersCustomerReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20113,
								"name": "AdminPostCustomersCustomerReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20116,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's email. You can't update the email of a registered customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20117,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20118,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20119,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20120,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20121,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 20122,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of customer groups to which the customer belongs."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23157,
							"name": "Group",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20114
					]
				},
				{
					"title": "Properties",
					"children": [
						20116,
						20117,
						20118,
						20119,
						20120,
						20121,
						20122
					]
				}
			]
		},
		{
			"id": 20278,
			"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the resources to add."
					}
				]
			},
			"children": [
				{
					"id": 20279,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20280,
							"name": "new AdminPostDiscountsDiscountConditionsConditionBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the resources to add."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20278,
								"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20281,
					"name": "resources",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The resources to be added to the discount condition"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 20282,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 20283,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The ID of the item"
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											20283
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20279
					]
				},
				{
					"title": "Properties",
					"children": [
						20281
					]
				}
			]
		},
		{
			"id": 20284,
			"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20285,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20286,
							"name": "new AdminPostDiscountsDiscountConditionsConditionBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20284,
								"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20287,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20288,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20285
					]
				},
				{
					"title": "Properties",
					"children": [
						20287,
						20288
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20140,
			"name": "AdminPostDiscountsDiscountConditions",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20141,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20142,
							"name": "new AdminPostDiscountsDiscountConditions",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20140,
								"name": "AdminPostDiscountsDiscountConditions",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23163,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23162,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 20143,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Operator of the condition. `in` indicates that discountable resources are within the specified resources. `not_in` indicates that discountable resources are everything but the specified resources."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20144,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23164,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 20145,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23165,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 20146,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23166,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 20147,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23167,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 20148,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23168,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20141
					]
				},
				{
					"title": "Properties",
					"children": [
						20143,
						20144,
						20145,
						20146,
						20147,
						20148
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23161,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20149,
			"name": "AdminPostDiscountsDiscountConditionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20150,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20151,
							"name": "new AdminPostDiscountsDiscountConditionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20149,
								"name": "AdminPostDiscountsDiscountConditionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20152,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20153,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20150
					]
				},
				{
					"title": "Properties",
					"children": [
						20152,
						20153
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20154,
			"name": "AdminPostDiscountsDiscountRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the discount rule to create."
					}
				]
			},
			"children": [
				{
					"id": 20155,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20156,
							"name": "new AdminPostDiscountsDiscountRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20154,
								"name": "AdminPostDiscountsDiscountRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20157,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20158,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "DiscountRuleType"
						},
						"name": "DiscountRuleType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20159,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20160,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's allocation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20161,
					"name": "conditions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's conditions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20175,
							"name": "AdminCreateCondition",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20155
					]
				},
				{
					"title": "Properties",
					"children": [
						20157,
						20158,
						20159,
						20160,
						20161
					]
				}
			]
		},
		{
			"id": 20162,
			"name": "AdminPostDiscountsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the discount to create."
					}
				]
			},
			"children": [
				{
					"id": 20163,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20164,
							"name": "new AdminPostDiscountsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the discount to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20162,
								"name": "AdminPostDiscountsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20165,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20166,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule that defines how discounts are calculated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20154,
						"name": "AdminPostDiscountsDiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20167,
					"name": "is_dynamic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount should have multiple instances of itself, each with a different code. This can be useful for automatically generated discount codes that all have to follow a common set of rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 20168,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount code is disabled on creation. If set to `true`, it will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 20169,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20170,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should no longer be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20171,
					"name": "valid_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration the discount runs between"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20172,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount can be used"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20173,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of region IDs representing the Regions in which the Discount can be used."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20174,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20163
					]
				},
				{
					"title": "Properties",
					"children": [
						20165,
						20166,
						20167,
						20168,
						20169,
						20170,
						20171,
						20172,
						20173,
						20174
					]
				}
			]
		},
		{
			"id": 20175,
			"name": "AdminCreateCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the discount condition to create."
					}
				]
			},
			"children": [
				{
					"id": 20176,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20177,
							"name": "new AdminCreateCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20175,
								"name": "AdminCreateCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23163,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23162,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 20178,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the discount condition."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20179,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23164,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 20180,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23165,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 20181,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23166,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 20182,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23167,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 20183,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23168,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20176
					]
				},
				{
					"title": "Properties",
					"children": [
						20178,
						20179,
						20180,
						20181,
						20182,
						20183
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23161,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20184,
			"name": "AdminPostDiscountsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20185,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20186,
							"name": "new AdminPostDiscountsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20184,
								"name": "AdminPostDiscountsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20187,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20188,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20185
					]
				},
				{
					"title": "Properties",
					"children": [
						20187,
						20188
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20189,
			"name": "AdminPostDiscountsDiscountDynamicCodesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the dynamic discount to create."
					}
				]
			},
			"children": [
				{
					"id": 20190,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20191,
							"name": "new AdminPostDiscountsDiscountDynamicCodesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the dynamic discount to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20189,
								"name": "AdminPostDiscountsDiscountDynamicCodesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20192,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the Discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20193,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount code can be used"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1"
				},
				{
					"id": 20194,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20190
					]
				},
				{
					"title": "Properties",
					"children": [
						20192,
						20193,
						20194
					]
				}
			]
		},
		{
			"id": 20195,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20196,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20197,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20195,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20198,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20199,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20196
					]
				},
				{
					"title": "Properties",
					"children": [
						20198,
						20199
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20289,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20290,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20291,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20289,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20292,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20293,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20290
					]
				},
				{
					"title": "Properties",
					"children": [
						20292,
						20293
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20294,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The resources to remove."
					}
				]
			},
			"children": [
				{
					"id": 20295,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20296,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The resources to remove."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20294,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20297,
					"name": "resources",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The resources to be removed from the discount condition"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 20298,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 20299,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The id of the item"
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											20299
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20295
					]
				},
				{
					"title": "Properties",
					"children": [
						20297
					]
				}
			]
		},
		{
			"id": 20200,
			"name": "AdminGetDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20201,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20202,
							"name": "new AdminGetDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20200,
								"name": "AdminGetDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20203,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20204,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20201
					]
				},
				{
					"title": "Properties",
					"children": [
						20203,
						20204
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20210,
			"name": "AdminGetDiscountsDiscountCodeParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20211,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20212,
							"name": "new AdminGetDiscountsDiscountCodeParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20210,
								"name": "AdminGetDiscountsDiscountCodeParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20213,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20214,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20211
					]
				},
				{
					"title": "Properties",
					"children": [
						20213,
						20214
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20205,
			"name": "AdminGetDiscountParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20206,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20207,
							"name": "new AdminGetDiscountParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20205,
								"name": "AdminGetDiscountParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20208,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20209,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20206
					]
				},
				{
					"title": "Properties",
					"children": [
						20208,
						20209
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20123,
			"name": "defaultAdminDiscountsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
							"qualifiedName": "Discount"
						},
						"name": "Discount",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20124,
			"name": "defaultAdminDiscountsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20125,
			"name": "defaultAdminDiscountConditionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountCondition"
						},
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20126,
			"name": "defaultAdminDiscountConditionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20127,
			"name": "AdminDiscountsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The discount's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20128,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20129,
							"name": "discount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Discount details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
									"qualifiedName": "Discount"
								},
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20129
							]
						}
					]
				}
			}
		},
		{
			"id": 20130,
			"name": "AdminDiscountConditionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20131,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20132,
							"name": "discount_condition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Discount condition details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
									"qualifiedName": "DiscountCondition"
								},
								"name": "DiscountCondition",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20132
							]
						}
					]
				}
			}
		},
		{
			"id": 20133,
			"name": "AdminDiscountsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20134,
			"name": "AdminDiscountConditionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22817,
						"name": "DeleteResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20135,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20136,
									"name": "discount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Discount to which the condition used to belong to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
											"qualifiedName": "Discount"
										},
										"name": "Discount",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20136
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20137,
			"name": "AdminDiscountsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of discounts with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20138,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20139,
									"name": "discounts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of discounts."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
												"qualifiedName": "Discount"
											},
											"name": "Discount",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20139
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20215,
			"name": "AdminGetDiscountsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved discounts."
					}
				]
			},
			"children": [
				{
					"id": 20219,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by their associated rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23169,
						"name": "AdminGetDiscountsDiscountRuleParams",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20220,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search discounts' code fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20221,
					"name": "is_dynamic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by whether they're dynamic."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20222,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by whether they're disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20223,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the discounts' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20224,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the discounts' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20225,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 20226,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 20227,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 20228,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 20229,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 20216,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20217,
							"name": "new AdminGetDiscountsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20218,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20215,
								"name": "AdminGetDiscountsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20216
					]
				},
				{
					"title": "Properties",
					"children": [
						20219,
						20220,
						20221,
						20222,
						20223,
						20224,
						20225,
						20226,
						20227,
						20228,
						20229
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20230,
			"name": "AdminPostDiscountsDiscountConditionsCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20231,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20232,
							"name": "new AdminPostDiscountsDiscountConditionsCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20230,
								"name": "AdminPostDiscountsDiscountConditionsCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23163,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23162,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 20233,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23164,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 20234,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23165,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 20235,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23166,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 20236,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23167,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 20237,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23168,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20231
					]
				},
				{
					"title": "Properties",
					"children": [
						20233,
						20234,
						20235,
						20236,
						20237
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23161,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20238,
			"name": "AdminPostDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20239,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20240,
							"name": "new AdminPostDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20238,
								"name": "AdminPostDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20241,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20242,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20239
					]
				},
				{
					"title": "Properties",
					"children": [
						20241,
						20242
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20243,
			"name": "AdminUpdateDiscountRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes of the discount rule to update."
					}
				]
			},
			"children": [
				{
					"id": 20244,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20245,
							"name": "new AdminUpdateDiscountRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20243,
								"name": "AdminUpdateDiscountRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20246,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20247,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20248,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20249,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's allocation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20250,
					"name": "conditions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's discount conditions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20263,
							"name": "AdminUpsertCondition",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20244
					]
				},
				{
					"title": "Properties",
					"children": [
						20246,
						20247,
						20248,
						20249,
						20250
					]
				}
			]
		},
		{
			"id": 20251,
			"name": "AdminPostDiscountsDiscountReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the discount to update."
					}
				]
			},
			"children": [
				{
					"id": 20252,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20253,
							"name": "new AdminPostDiscountsDiscountReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the discount to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20251,
								"name": "AdminPostDiscountsDiscountReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20254,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20255,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule that defines how discounts are calculated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20243,
						"name": "AdminUpdateDiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20256,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount code is disabled on creation. If set to `true`, it will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20257,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20258,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should no longer be available."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 20259,
					"name": "valid_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration the discount runs between"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 20260,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount can be used"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 20261,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of region IDs representing the Regions in which the Discount can be used."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20262,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing metadata of the discount"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20252
					]
				},
				{
					"title": "Properties",
					"children": [
						20254,
						20255,
						20256,
						20257,
						20258,
						20259,
						20260,
						20261,
						20262
					]
				}
			]
		},
		{
			"id": 20263,
			"name": "AdminUpsertCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to create or update in the discount condition."
					}
				]
			},
			"children": [
				{
					"id": 20264,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20265,
							"name": "new AdminUpsertCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20263,
								"name": "AdminUpsertCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23163,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23162,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 20266,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20267,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition's operator."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20268,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23164,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 20269,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23165,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 20270,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23166,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 20271,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23167,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 20272,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23168,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20264
					]
				},
				{
					"title": "Properties",
					"children": [
						20266,
						20267,
						20268,
						20269,
						20270,
						20271,
						20272
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23161,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20273,
			"name": "AdminPostDiscountsDiscountParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20274,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20275,
							"name": "new AdminPostDiscountsDiscountParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20273,
								"name": "AdminPostDiscountsDiscountParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20276,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20277,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20274
					]
				},
				{
					"title": "Properties",
					"children": [
						20276,
						20277
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20314,
			"name": "AdminPostDraftOrdersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the draft order to create."
					}
				]
			},
			"children": [
				{
					"id": 20315,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20316,
							"name": "new AdminPostDraftOrdersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the draft order to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20314,
								"name": "AdminPostDraftOrdersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20317,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the draft order. The draft order's default status is `open`. It's changed to `completed` when its payment is marked as paid."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20318,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer of the draft order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20319,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20320,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20321,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The draft order's line items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23174,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20322,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region for the draft order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20323,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounts to add to the draft order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23182,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20324,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer this draft order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20325,
					"name": "no_notification_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag passed to the resulting order that indicates whether the customer should receive notifications about order updates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20326,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping methods for the draft order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23186,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20327,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Draft Order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20315
					]
				},
				{
					"title": "Properties",
					"children": [
						20317,
						20318,
						20319,
						20320,
						20321,
						20322,
						20323,
						20324,
						20325,
						20326,
						20327
					]
				}
			]
		},
		{
			"id": 23186,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 23187,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23188,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23186,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23189,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option in use"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23190,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional additional data needed for the shipping method"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				},
				{
					"id": 23191,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23187
					]
				},
				{
					"title": "Properties",
					"children": [
						23189,
						23190,
						23191
					]
				}
			]
		},
		{
			"id": 23182,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 23183,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23184,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23182,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23185,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the discount to apply"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23183
					]
				},
				{
					"title": "Properties",
					"children": [
						23185
					]
				}
			]
		},
		{
			"id": 23174,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23175,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23176,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23174,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23177,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23178,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23179,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant associated with the line item. If the line item is custom, the `variant_id` should be omitted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23180,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23181,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23175
					]
				},
				{
					"title": "Properties",
					"children": [
						23177,
						23178,
						23179,
						23180,
						23181
					]
				}
			]
		},
		{
			"id": 20328,
			"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item to create."
					}
				]
			},
			"children": [
				{
					"id": 20329,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20330,
							"name": "new AdminPostDraftOrdersDraftOrderLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20328,
								"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20331,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"Custom item\""
				},
				{
					"id": 20332,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20333,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant associated with the line item. If the line item is custom, the `variant_id` should be omitted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20334,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20335,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20329
					]
				},
				{
					"title": "Properties",
					"children": [
						20331,
						20332,
						20333,
						20334,
						20335
					]
				}
			]
		},
		{
			"id": 20300,
			"name": "defaultAdminDraftOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20301,
			"name": "defaultAdminDraftOrdersCartRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20302,
			"name": "defaultAdminDraftOrdersCartFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
							"qualifiedName": "Cart"
						},
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20303,
			"name": "defaultAdminDraftOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
							"qualifiedName": "DraftOrder"
						},
						"name": "DraftOrder",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20304,
			"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20305,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20306,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20306
							]
						}
					]
				}
			}
		},
		{
			"id": 20307,
			"name": "AdminDraftOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of draft orders."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20308,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20309,
							"name": "draft_order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Draft order's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
									"qualifiedName": "DraftOrder"
								},
								"name": "DraftOrder",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20309
							]
						}
					]
				}
			}
		},
		{
			"id": 20310,
			"name": "AdminDraftOrdersDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20311,
			"name": "AdminDraftOrdersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of draft orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20312,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20313,
									"name": "draft_orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of draft order's details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
												"qualifiedName": "DraftOrder"
											},
											"name": "DraftOrder",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20313
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20336,
			"name": "AdminGetDraftOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved draft orders."
					}
				]
			},
			"children": [
				{
					"id": 20340,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search draft orders by their display IDs and emails."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20341,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).expand"
					}
				},
				{
					"id": 20342,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).fields"
					}
				},
				{
					"id": 20343,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter draft orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23192,
							"name": "DraftOrderStatusValue",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20344,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the draft orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20345,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the draft orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20346,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).offset"
					}
				},
				{
					"id": 20347,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).limit"
					}
				},
				{
					"id": 20348,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).order"
					}
				},
				{
					"id": 20337,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20338,
							"name": "new AdminGetDraftOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20339,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20336,
								"name": "AdminGetDraftOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20337
					]
				},
				{
					"title": "Properties",
					"children": [
						20340,
						20341,
						20342,
						20343,
						20344,
						20345,
						20346,
						20347,
						20348
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20349,
			"name": "reserveQuantityForDraftOrder",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20350,
					"name": "reserveQuantityForDraftOrder",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20351,
							"name": "order",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20352,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20353,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20354,
											"name": "productVariantInventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										},
										{
											"id": 20355,
											"name": "locationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20354,
												20355
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 20356,
			"name": "AdminPostDraftOrdersDraftOrderReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the draft order to update."
					}
				]
			},
			"children": [
				{
					"id": 20357,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20358,
							"name": "new AdminPostDraftOrdersDraftOrderReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the draft order to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20356,
								"name": "AdminPostDraftOrdersDraftOrderReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20359,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Draft Order in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20360,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code for the Country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20361,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An email to be used in the Draft Order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20362,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20363,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20364,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Discount codes to add to the Draft Order."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23193,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20365,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer this draft order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20366,
					"name": "no_notification_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag passed to the resulting order that indicates whether the customer should receive notifications about order updates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20357
					]
				},
				{
					"title": "Properties",
					"children": [
						20359,
						20360,
						20361,
						20362,
						20363,
						20364,
						20365,
						20366
					]
				}
			]
		},
		{
			"id": 23193,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 23194,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23195,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23193,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23196,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code that a Discount is identifed by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23194
					]
				},
				{
					"title": "Properties",
					"children": [
						23196
					]
				}
			]
		},
		{
			"id": 20367,
			"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"children": [
				{
					"id": 20368,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20369,
							"name": "new AdminPostDraftOrdersDraftOrderLineItemsItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20367,
								"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20370,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20371,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20372,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20373,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20368
					]
				},
				{
					"title": "Properties",
					"children": [
						20370,
						20371,
						20372,
						20373
					]
				}
			]
		},
		{
			"id": 20383,
			"name": "AdminPostGiftCardsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the gift card to create."
					}
				]
			},
			"children": [
				{
					"id": 20384,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20385,
							"name": "new AdminPostGiftCardsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the gift card to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20383,
								"name": "AdminPostGiftCardsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20386,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value (excluding VAT) that the Gift Card should represent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20387,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the Gift Card should no longer be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20388,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Gift Card is disabled on creation. If set to `true`, the gift card will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20389,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Gift Card can be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20390,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20384
					]
				},
				{
					"title": "Properties",
					"children": [
						20386,
						20387,
						20388,
						20389,
						20390
					]
				}
			]
		},
		{
			"id": 20374,
			"name": "defaultAdminGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
							"qualifiedName": "GiftCard"
						},
						"name": "GiftCard",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20375,
			"name": "defaultAdminGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20376,
			"name": "AdminGiftCardsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The gift card's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20377,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20378,
							"name": "gift_card",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A gift card's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
									"qualifiedName": "GiftCard"
								},
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20378
							]
						}
					]
				}
			}
		},
		{
			"id": 20379,
			"name": "AdminGiftCardsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20380,
			"name": "AdminGiftCardsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of gift cards with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20381,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20382,
									"name": "gift_cards",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of gift cards."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
												"qualifiedName": "GiftCard"
											},
											"name": "GiftCard",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20382
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20391,
			"name": "AdminGetGiftCardsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved gift cards."
					}
				]
			},
			"children": [
				{
					"id": 20392,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20393,
							"name": "new AdminGetGiftCardsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20391,
								"name": "AdminGetGiftCardsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20394,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 20395,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20396,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search gift cards by their code and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20397,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20392
					]
				},
				{
					"title": "Properties",
					"children": [
						20394,
						20395,
						20396,
						20397
					]
				}
			]
		},
		{
			"id": 20398,
			"name": "AdminPostGiftCardsGiftCardReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the gift card."
					}
				]
			},
			"children": [
				{
					"id": 20399,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20400,
							"name": "new AdminPostGiftCardsGiftCardReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the gift card."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20398,
								"name": "AdminPostGiftCardsGiftCardReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20401,
					"name": "balance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value (excluding VAT) that the Gift Card should represent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20402,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Gift Card is disabled on creation. If set to `true`, the gift card will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20403,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the Gift Card should no longer be available."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 20404,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Gift Card can be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20405,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20399
					]
				},
				{
					"title": "Properties",
					"children": [
						20401,
						20402,
						20403,
						20404,
						20405
					]
				}
			]
		},
		{
			"id": 20431,
			"name": "AdminPostInventoryItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the inventory item to create."
					}
				]
			},
			"children": [
				{
					"id": 20432,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20433,
							"name": "new AdminPostInventoryItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the inventory item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20431,
								"name": "AdminPostInventoryItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20434,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the variant to create the inventory item for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20435,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the associated Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20436,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20437,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20438,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20439,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20440,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20441,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20442,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20443,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20444,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20445,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20446,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20447,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20432
					]
				},
				{
					"title": "Properties",
					"children": [
						20434,
						20435,
						20436,
						20437,
						20438,
						20439,
						20440,
						20441,
						20442,
						20443,
						20444,
						20445,
						20446,
						20447
					]
				}
			]
		},
		{
			"id": 20448,
			"name": "AdminPostInventoryItemsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20449,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20450,
							"name": "new AdminPostInventoryItemsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20448,
								"name": "AdminPostInventoryItemsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20451,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20452,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20449
					]
				},
				{
					"title": "Properties",
					"children": [
						20451,
						20452
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20453,
			"name": "AdminPostInventoryItemsItemLocationLevelsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the location level to create."
					}
				]
			},
			"children": [
				{
					"id": 20454,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20455,
							"name": "new AdminPostInventoryItemsItemLocationLevelsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the location level to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20453,
								"name": "AdminPostInventoryItemsItemLocationLevelsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20456,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20457,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the stock quantity of the inventory item at this location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20458,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the incoming stock quantity of the inventory item at this location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20454
					]
				},
				{
					"title": "Properties",
					"children": [
						20456,
						20457,
						20458
					]
				}
			]
		},
		{
			"id": 20459,
			"name": "AdminPostInventoryItemsItemLocationLevelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20460,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20461,
							"name": "new AdminPostInventoryItemsItemLocationLevelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20459,
								"name": "AdminPostInventoryItemsItemLocationLevelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20462,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20463,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20460
					]
				},
				{
					"title": "Properties",
					"children": [
						20462,
						20463
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20464,
			"name": "AdminGetInventoryItemsItemParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20465,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20466,
							"name": "new AdminGetInventoryItemsItemParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20464,
								"name": "AdminGetInventoryItemsItemParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20467,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20468,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20465
					]
				},
				{
					"title": "Properties",
					"children": [
						20467,
						20468
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20406,
			"name": "defaultAdminInventoryItemFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 23197,
						"name": "InventoryItemDTO",
						"package": "@medusajs/types"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20407,
			"name": "defaultAdminLocationLevelFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 23217,
						"name": "InventoryLevelDTO",
						"package": "@medusajs/types"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20408,
			"name": "defaultAdminInventoryItemRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 20409,
			"name": "AdminInventoryItemsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The inventory item's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20410,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20411,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inventory Item details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23197,
								"name": "InventoryItemDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20411
							]
						}
					]
				}
			}
		},
		{
			"id": 20412,
			"name": "AdminInventoryItemsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20413,
			"name": "AdminInventoryItemsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20414,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20415,
									"name": "inventory_items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of Inventory Item details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23197,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20415
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20416,
			"name": "DecoratedInventoryItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23197,
						"name": "InventoryItemDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20417,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20418,
									"name": "location_levels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of location level details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23217,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 20419,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variant details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
												"qualifiedName": "ProductVariant"
											},
											"name": "ProductVariant",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 20420,
									"name": "stocked_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total quantity of the item in stock across levels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 20421,
									"name": "reserved_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total quantity of the item available across levels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20418,
										20419,
										20420,
										20421
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20422,
			"name": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20423,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20424,
									"name": "inventory_items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of Inventory Item details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 20416,
											"name": "DecoratedInventoryItemDTO",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20424
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20425,
			"name": "AdminInventoryItemsLocationLevelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of inventory items and their associated location levels."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20426,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20427,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An inventory item's ID and associated location levels."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20428,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20429,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the location"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 20430,
											"name": "location_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "List of stock levels at a given location"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 23217,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20429,
												20430
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20427
							]
						}
					]
				}
			}
		},
		{
			"id": 20469,
			"name": "AdminGetInventoryItemsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved inventory items."
					}
				]
			},
			"children": [
				{
					"id": 20473,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20474,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search inventory items' sku, title, and description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20475,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20476,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SKUs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20477,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Origin countries to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20478,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "MID codes to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20479,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Materials to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20480,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`hs_code`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20481,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`weight`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20482,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`length`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20483,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20484,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20485,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by whether they require shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20486,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 20487,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 20488,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 20489,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 20490,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 20470,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20471,
							"name": "new AdminGetInventoryItemsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20472,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20469,
								"name": "AdminGetInventoryItemsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20470
					]
				},
				{
					"title": "Properties",
					"children": [
						20473,
						20474,
						20475,
						20476,
						20477,
						20478,
						20479,
						20480,
						20481,
						20482,
						20483,
						20484,
						20485,
						20486,
						20487,
						20488,
						20489,
						20490
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20491,
			"name": "AdminGetInventoryItemsItemLocationLevelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20492,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20493,
							"name": "new AdminGetInventoryItemsItemLocationLevelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20491,
								"name": "AdminGetInventoryItemsItemLocationLevelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20494,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter location levels."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20495,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20496,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20492
					]
				},
				{
					"title": "Properties",
					"children": [
						20494,
						20495,
						20496
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20497,
			"name": "AdminPostInventoryItemsInventoryItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in an inventory item."
					}
				]
			},
			"children": [
				{
					"id": 20498,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20499,
							"name": "new AdminPostInventoryItemsInventoryItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The attributes to update in an inventory item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20497,
								"name": "AdminPostInventoryItemsInventoryItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20500,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20501,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20502,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20503,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20504,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20505,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20506,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20507,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20508,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20509,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20510,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20511,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20512,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20498
					]
				},
				{
					"title": "Properties",
					"children": [
						20500,
						20501,
						20502,
						20503,
						20504,
						20505,
						20506,
						20507,
						20508,
						20509,
						20510,
						20511,
						20512
					]
				}
			]
		},
		{
			"id": 20513,
			"name": "AdminPostInventoryItemsInventoryItemParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20514,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20515,
							"name": "new AdminPostInventoryItemsInventoryItemParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20513,
								"name": "AdminPostInventoryItemsInventoryItemParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20516,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20517,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20514
					]
				},
				{
					"title": "Properties",
					"children": [
						20516,
						20517
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20518,
			"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20519,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20520,
							"name": "new AdminPostInventoryItemsItemLocationLevelsLevelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20518,
								"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20521,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the incoming stock quantity of an inventory item at the given location ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20522,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the total stock quantity of an inventory item at the given location ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20519
					]
				},
				{
					"title": "Properties",
					"children": [
						20521,
						20522
					]
				}
			]
		},
		{
			"id": 20523,
			"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20524,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20525,
							"name": "new AdminPostInventoryItemsItemLocationLevelsLevelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20523,
								"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20526,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20527,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20524
					]
				},
				{
					"title": "Properties",
					"children": [
						20526,
						20527
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20535,
			"name": "AdminPostInvitesInviteAcceptUserReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the use accepting the invite."
					}
				]
			},
			"children": [
				{
					"id": 20536,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20537,
							"name": "new AdminPostInvitesInviteAcceptUserReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20535,
								"name": "AdminPostInvitesInviteAcceptUserReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20538,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20539,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20540,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's password"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20536
					]
				},
				{
					"title": "Properties",
					"children": [
						20538,
						20539,
						20540
					]
				}
			]
		},
		{
			"id": 20541,
			"name": "AdminPostInvitesInviteAcceptReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the invite to be accepted."
					}
				]
			},
			"children": [
				{
					"id": 20542,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20543,
							"name": "new AdminPostInvitesInviteAcceptReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the invite to be accepted."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20541,
								"name": "AdminPostInvitesInviteAcceptReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20544,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The token of the invite to accept. This is a unique token generated when the invite was created or resent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20545,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the user to create."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20535,
						"name": "AdminPostInvitesInviteAcceptUserReq",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20542
					]
				},
				{
					"title": "Properties",
					"children": [
						20544,
						20545
					]
				}
			]
		},
		{
			"id": 20546,
			"name": "AdminPostInvitesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20547,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20548,
							"name": "new AdminPostInvitesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20546,
								"name": "AdminPostInvitesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20549,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the invite. Once the invite is accepted, the email will be associated with the created user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20550,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role of the user to be created. This does not actually change the privileges of the user that is eventually created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20547
					]
				},
				{
					"title": "Properties",
					"children": [
						20549,
						20550
					]
				}
			]
		},
		{
			"id": 20528,
			"name": "unauthenticatedInviteRoutes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20529,
					"name": "unauthenticatedInviteRoutes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20530,
							"name": "app",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 20531,
			"name": "AdminInviteDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20532,
			"name": "AdminListInvitesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of invites."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20533,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20534,
							"name": "invites",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of invites"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
										"qualifiedName": "Invite"
									},
									"name": "Invite",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20534
							]
						}
					]
				}
			}
		},
		{
			"id": 20558,
			"name": "AdminPostNotesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the note to be created."
					}
				]
			},
			"children": [
				{
					"id": 20559,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20560,
							"name": "new AdminPostNotesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the note to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20558,
								"name": "AdminPostNotesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20561,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource which the Note relates to. For example, an order ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20562,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of resource which the Note relates to. For example, `order`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20563,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The content of the Note to create."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20559
					]
				},
				{
					"title": "Properties",
					"children": [
						20561,
						20562,
						20563
					]
				}
			]
		},
		{
			"id": 20551,
			"name": "AdminNotesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The note's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20552,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20553,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Note details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/note.ts",
									"qualifiedName": "Note"
								},
								"name": "Note",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20553
							]
						}
					]
				}
			}
		},
		{
			"id": 20554,
			"name": "AdminNotesDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20555,
			"name": "AdminNotesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of notes with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20556,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20557,
									"name": "notes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of notes"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/note.ts",
												"qualifiedName": "Note"
											},
											"name": "Note",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20557
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20564,
			"name": "AdminGetNotesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved notes."
					}
				]
			},
			"children": [
				{
					"id": 20565,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20566,
							"name": "new AdminGetNotesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20564,
								"name": "AdminGetNotesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20567,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource ID to filter notes by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20568,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 20569,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20565
					]
				},
				{
					"title": "Properties",
					"children": [
						20567,
						20568,
						20569
					]
				}
			]
		},
		{
			"id": 20570,
			"name": "AdminPostNotesNoteReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the note."
					}
				]
			},
			"children": [
				{
					"id": 20571,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20572,
							"name": "new AdminPostNotesNoteReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the note."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20570,
								"name": "AdminPostNotesNoteReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20573,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20571
					]
				},
				{
					"title": "Properties",
					"children": [
						20573
					]
				}
			]
		},
		{
			"id": 20574,
			"name": "defaultAdminNotificationsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20575,
			"name": "defaultAdminNotificationsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20576,
			"name": "AdminNotificationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23229,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20577,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20578,
									"name": "notifications",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of notifications"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
												"qualifiedName": "Notification"
											},
											"name": "Notification",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20578
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20579,
			"name": "AdminNotificationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The notification's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20580,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20581,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Notification details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
									"qualifiedName": "Notification"
								},
								"name": "Notification",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20581
							]
						}
					]
				}
			}
		},
		{
			"id": 20582,
			"name": "AdminGetNotificationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved notifications."
					}
				]
			},
			"children": [
				{
					"id": 20583,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20584,
							"name": "new AdminGetNotificationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20582,
								"name": "AdminGetNotificationsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20585,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 20586,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20587,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20588,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20589,
					"name": "event_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event name to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20590,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource type to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20591,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource ID to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20592,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter notifications by their "
							},
							{
								"kind": "code",
								"text": "`to`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20593,
					"name": "include_resends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include resends in the results."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20583
					]
				},
				{
					"title": "Properties",
					"children": [
						20585,
						20586,
						20587,
						20588,
						20589,
						20590,
						20591,
						20592,
						20593
					]
				}
			]
		},
		{
			"id": 20594,
			"name": "AdminPostNotificationsNotificationResendReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The resend details."
					}
				]
			},
			"children": [
				{
					"id": 20595,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20596,
							"name": "new AdminPostNotificationsNotificationResendReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The resend details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20594,
								"name": "AdminPostNotificationsNotificationResendReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20597,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A new address or user identifier that the Notification should be sent to. If not provided, the previous `to` field of the notification will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20595
					]
				},
				{
					"title": "Properties",
					"children": [
						20597
					]
				}
			]
		},
		{
			"id": 20610,
			"name": "AdminPostOrderEditsEditLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item change to create."
					}
				]
			},
			"children": [
				{
					"id": 20611,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20612,
							"name": "new AdminPostOrderEditsEditLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item change to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20610,
								"name": "AdminPostOrderEditsEditLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20613,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant associated with the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20614,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20615,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20611
					]
				},
				{
					"title": "Properties",
					"children": [
						20613,
						20614,
						20615
					]
				}
			]
		},
		{
			"id": 20616,
			"name": "AdminPostOrderEditsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order edit to create."
					}
				]
			},
			"children": [
				{
					"id": 20617,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20618,
							"name": "new AdminPostOrderEditsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order edit to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20616,
								"name": "AdminPostOrderEditsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20619,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order to create the edit for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20620,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note to associate with the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20621,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20617
					]
				},
				{
					"title": "Properties",
					"children": [
						20619,
						20620,
						20621
					]
				}
			]
		},
		{
			"id": 20622,
			"name": "GetOrderEditsOrderEditParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20623,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20624,
							"name": "new GetOrderEditsOrderEditParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20622,
								"name": "GetOrderEditsOrderEditParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20625,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20626,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20623
					]
				},
				{
					"title": "Properties",
					"children": [
						20625,
						20626
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20598,
			"name": "AdminOrderEditsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order edit details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20599,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20600,
							"name": "order_edit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order edit details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
									"qualifiedName": "OrderEdit"
								},
								"name": "OrderEdit",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20600
							]
						}
					]
				}
			}
		},
		{
			"id": 20601,
			"name": "AdminOrderEditsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of order edits with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20602,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20603,
									"name": "order_edits",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of order edit details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
												"qualifiedName": "OrderEdit"
											},
											"name": "OrderEdit",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20603
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20604,
			"name": "AdminOrderEditDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20605,
			"name": "AdminOrderEditItemChangeDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting order edit item changes."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20606,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20607,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Order Edit Item Change."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20608,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "item_change"
							},
							"defaultValue": "item_change"
						},
						{
							"id": 20609,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the Order Edit Item Change was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20607,
								20608,
								20609
							]
						}
					]
				}
			}
		},
		{
			"id": 20627,
			"name": "GetOrderEditsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved order edits."
					}
				]
			},
			"children": [
				{
					"id": 20631,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search order edits by their internal note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20632,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the order edits by their associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20633,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 20634,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 20635,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 20636,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 20637,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 20628,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20629,
							"name": "new GetOrderEditsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20630,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20627,
								"name": "GetOrderEditsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20628
					]
				},
				{
					"title": "Properties",
					"children": [
						20631,
						20632,
						20633,
						20634,
						20635,
						20636,
						20637
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20638,
			"name": "AdminPostOrderEditsRequestConfirmationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20639,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20640,
							"name": "new AdminPostOrderEditsRequestConfirmationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20638,
								"name": "AdminPostOrderEditsRequestConfirmationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20641,
					"name": "payment_collection_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20639
					]
				},
				{
					"title": "Properties",
					"children": [
						20641
					]
				}
			]
		},
		{
			"id": 20646,
			"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to create or update of the line item change."
					}
				]
			},
			"children": [
				{
					"id": 20647,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20648,
							"name": "new AdminPostOrderEditsEditLineItemsLineItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to create or update of the line item change."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20646,
								"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20649,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to update"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20647
					]
				},
				{
					"title": "Properties",
					"children": [
						20649
					]
				}
			]
		},
		{
			"id": 20642,
			"name": "AdminPostOrderEditsOrderEditReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the order edit."
					}
				]
			},
			"children": [
				{
					"id": 20643,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20644,
							"name": "new AdminPostOrderEditsOrderEditReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the order edit."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20642,
								"name": "AdminPostOrderEditsOrderEditReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20645,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note to create or update in the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20643
					]
				},
				{
					"title": "Properties",
					"children": [
						20645
					]
				}
			]
		},
		{
			"id": 20661,
			"name": "AdminPostOrdersOrderShippingMethodsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method's details."
					}
				]
			},
			"children": [
				{
					"id": 20662,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20663,
							"name": "new AdminPostOrdersOrderShippingMethodsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20661,
								"name": "AdminPostOrdersOrderShippingMethodsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20664,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price (excluding VAT) that should be charged for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20665,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20666,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data required for the Shipping Option to create a Shipping Method. This depends on the Fulfillment Provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20662
					]
				},
				{
					"title": "Properties",
					"children": [
						20664,
						20665,
						20666
					]
				}
			]
		},
		{
			"id": 20667,
			"name": "AdminPostOrdersOrderShippingMethodsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20668,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20669,
							"name": "new AdminPostOrdersOrderShippingMethodsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20667,
								"name": "AdminPostOrdersOrderShippingMethodsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20670,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20671,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20668
					]
				},
				{
					"title": "Properties",
					"children": [
						20670,
						20671
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20672,
			"name": "AdminPostOrdersOrderArchiveParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20673,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20674,
							"name": "new AdminPostOrdersOrderArchiveParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20672,
								"name": "AdminPostOrdersOrderArchiveParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20675,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20676,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20673
					]
				},
				{
					"title": "Properties",
					"children": [
						20675,
						20676
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20677,
			"name": "AdminPostOrdersClaimCancel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20678,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20679,
							"name": "new AdminPostOrdersClaimCancel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20677,
								"name": "AdminPostOrdersClaimCancel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20680,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20681,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20678
					]
				},
				{
					"title": "Properties",
					"children": [
						20680,
						20681
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20693,
			"name": "AdminPostOrdersClaimFulfillmentsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20694,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20695,
							"name": "new AdminPostOrdersClaimFulfillmentsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20693,
								"name": "AdminPostOrdersClaimFulfillmentsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20696,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20697,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20694
					]
				},
				{
					"title": "Properties",
					"children": [
						20696,
						20697
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20698,
			"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20699,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20700,
							"name": "new AdminPostOrdersOrderSwapFulfillementsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20698,
								"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20701,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20702,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20699
					]
				},
				{
					"title": "Properties",
					"children": [
						20701,
						20702
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20682,
			"name": "adjustInventoryForCancelledFulfillment",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20683,
					"name": "adjustInventoryForCancelledFulfillment",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20684,
							"name": "fulfillment",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Fulfillment is created once an admin can prepare the purchased goods. Fulfillments will eventually be shipped and hold information about how to track shipments. Fulfillments are created through a fulfillment provider, which typically integrates a third-party shipping service. Fulfillments can be associated with orders, claims, swaps, and returns."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
									"qualifiedName": "Fulfillment"
								},
								"name": "Fulfillment",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20685,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20686,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20687,
											"name": "productVariantInventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20687
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 20688,
			"name": "AdminPostOrdersOrderFulfillementsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20689,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20690,
							"name": "new AdminPostOrdersOrderFulfillementsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20688,
								"name": "AdminPostOrdersOrderFulfillementsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20691,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20692,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20689
					]
				},
				{
					"title": "Properties",
					"children": [
						20691,
						20692
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20703,
			"name": "AdminPostOrdersOrderCancel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20704,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20705,
							"name": "new AdminPostOrdersOrderCancel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20703,
								"name": "AdminPostOrdersOrderCancel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20706,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20707,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20704
					]
				},
				{
					"title": "Properties",
					"children": [
						20706,
						20707
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20708,
			"name": "AdminPostOrdersSwapCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20709,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20710,
							"name": "new AdminPostOrdersSwapCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20708,
								"name": "AdminPostOrdersSwapCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20711,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20712,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20709
					]
				},
				{
					"title": "Properties",
					"children": [
						20711,
						20712
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20713,
			"name": "AdminPostOrdersOrderCaptureParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20714,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20715,
							"name": "new AdminPostOrdersOrderCaptureParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20713,
								"name": "AdminPostOrdersOrderCaptureParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20716,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20717,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20714
					]
				},
				{
					"title": "Properties",
					"children": [
						20716,
						20717
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20718,
			"name": "AdminPostOrdersOrderCompleteParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20719,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20720,
							"name": "new AdminPostOrdersOrderCompleteParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20718,
								"name": "AdminPostOrdersOrderCompleteParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20721,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20722,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20719
					]
				},
				{
					"title": "Properties",
					"children": [
						20721,
						20722
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20741,
			"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20742,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20743,
							"name": "new AdminPostOrdersOrderClaimsClaimShipmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20741,
								"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20744,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20745,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20742
					]
				},
				{
					"title": "Properties",
					"children": [
						20744,
						20745
					]
				}
			]
		},
		{
			"id": 20746,
			"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20747,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20748,
							"name": "new AdminPostOrdersOrderClaimsClaimShipmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20746,
								"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20749,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20750,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20747
					]
				},
				{
					"title": "Properties",
					"children": [
						20749,
						20750
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 23243,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 23244,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23245,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23243,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23246,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23247,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23244
					]
				},
				{
					"title": "Properties",
					"children": [
						23246,
						23247
					]
				}
			]
		},
		{
			"id": 23253,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 23254,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23255,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23253,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23256,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23257,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create a Shipping Method from"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23258,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price to charge for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23259,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23254
					]
				},
				{
					"title": "Properties",
					"children": [
						23256,
						23257,
						23258,
						23259
					]
				}
			]
		},
		{
			"id": 23234,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23235,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23236,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23234,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23237,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that will be claimed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23238,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items that will be returned"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23239,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Short text describing the Claim Item in further detail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23240,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Claim"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
							"qualifiedName": "ClaimReason"
						},
						"name": "ClaimReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23241,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of tags to add to the Claim Item"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23242,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of image URL's that will be associated with the Claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23235
					]
				},
				{
					"title": "Properties",
					"children": [
						23237,
						23238,
						23239,
						23240,
						23241,
						23242
					]
				}
			]
		},
		{
			"id": 23248,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23249,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23250,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23248,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23251,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23252,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23249
					]
				},
				{
					"title": "Properties",
					"children": [
						23251,
						23252
					]
				}
			]
		},
		{
			"id": 20723,
			"name": "AdminPostOrdersOrderClaimsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the claim to be created."
					}
				]
			},
			"children": [
				{
					"id": 20724,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20725,
							"name": "new AdminPostOrdersOrderClaimsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the claim to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20723,
								"name": "AdminPostOrdersOrderClaimsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20726,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Claim. This will determine how the Claim is treated: `replace` Claims will result in a Fulfillment with new items being created, while a `refund` Claim will refund the amount paid for the claimed items."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "replace"
							},
							{
								"type": "literal",
								"value": "refund"
							}
						]
					}
				},
				{
					"id": 20727,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Claim Items that the Claim will consist of."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23234,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20728,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional details for the Return Shipping Method, if the items are to be sent back. Providing this field will result in a return being created and associated with the claim."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23243,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20729,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new items to send to the Customer. This is only used if the claim's type is `replace`."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23248,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20730,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Methods to send the additional Line Items with. This is only used if the claim's type is `replace`."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23253,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20731,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund the customer. This is used when the claim's type is `refund`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20732,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional shipping address to send the claimed items to. If not provided, the parent order's shipping address will be used."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22848,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20733,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20734,
					"name": "return_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20735,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20724
					]
				},
				{
					"title": "Properties",
					"children": [
						20726,
						20727,
						20728,
						20729,
						20730,
						20731,
						20732,
						20733,
						20734,
						20735
					]
				}
			]
		},
		{
			"id": 20736,
			"name": "AdminPostOrdersOrderClaimsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20737,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20738,
							"name": "new AdminPostOrdersOrderClaimsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20736,
								"name": "AdminPostOrdersOrderClaimsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20739,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20740,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20737
					]
				},
				{
					"title": "Properties",
					"children": [
						20739,
						20740
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20751,
			"name": "updateInventoryAndReservations",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20752,
					"name": "updateInventoryAndReservations",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20753,
							"name": "fulfillments",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
										"qualifiedName": "Fulfillment"
									},
									"name": "Fulfillment",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 20754,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20755,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20756,
											"name": "inventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										},
										{
											"id": 20757,
											"name": "locationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20756,
												20757
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 20758,
			"name": "AdminPostOrdersOrderFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the fulfillment to be created."
					}
				]
			},
			"children": [
				{
					"id": 20759,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20760,
							"name": "new AdminPostOrdersOrderFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the fulfillment to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20758,
								"name": "AdminPostOrdersOrderFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20761,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items to include in the Fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23260,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20762,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location where the items will be fulfilled from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20763,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20764,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20759
					]
				},
				{
					"title": "Properties",
					"children": [
						20761,
						20762,
						20763,
						20764
					]
				}
			]
		},
		{
			"id": 23260,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23261,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23262,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23260,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23263,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item to fulfill."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23264,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item to fulfill."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23261
					]
				},
				{
					"title": "Properties",
					"children": [
						23263,
						23264
					]
				}
			]
		},
		{
			"id": 20765,
			"name": "AdminPostOrdersOrderFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20766,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20767,
							"name": "new AdminPostOrdersOrderFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20765,
								"name": "AdminPostOrdersOrderFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20768,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20769,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20766
					]
				},
				{
					"title": "Properties",
					"children": [
						20768,
						20769
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20770,
			"name": "AdminPostOrdersOrderShipmentReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipment to create."
					}
				]
			},
			"children": [
				{
					"id": 20771,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20772,
							"name": "new AdminPostOrdersOrderShipmentReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipment to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20770,
								"name": "AdminPostOrdersOrderShipmentReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20773,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20774,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20775,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Shipment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20771
					]
				},
				{
					"title": "Properties",
					"children": [
						20773,
						20774,
						20775
					]
				}
			]
		},
		{
			"id": 20776,
			"name": "AdminPostOrdersOrderShipmentParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20777,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20778,
							"name": "new AdminPostOrdersOrderShipmentParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20776,
								"name": "AdminPostOrdersOrderShipmentParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20779,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20780,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20777
					]
				},
				{
					"title": "Properties",
					"children": [
						20779,
						20780
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20797,
			"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20798,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20799,
							"name": "new AdminPostOrdersOrderSwapsSwapShipmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20797,
								"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20800,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20801,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 20802,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be sent related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20798
					]
				},
				{
					"title": "Properties",
					"children": [
						20800,
						20801,
						20802
					]
				}
			]
		},
		{
			"id": 20803,
			"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20804,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20805,
							"name": "new AdminPostOrdersOrderSwapsSwapShipmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20803,
								"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20806,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20807,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20804
					]
				},
				{
					"title": "Properties",
					"children": [
						20806,
						20807
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 23265,
			"name": "ReturnItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
					}
				]
			},
			"children": [
				{
					"id": 23266,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23267,
							"name": "new ReturnItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23265,
								"name": "ReturnItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23268,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that will be returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23269,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items that will be returned"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23270,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Return Reason to use."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23271,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23266
					]
				},
				{
					"title": "Properties",
					"children": [
						23268,
						23269,
						23270,
						23271
					]
				}
			]
		},
		{
			"id": 23272,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 23273,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23274,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23272,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23275,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23276,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23273
					]
				},
				{
					"title": "Properties",
					"children": [
						23275,
						23276
					]
				}
			]
		},
		{
			"id": 23282,
			"name": "CustomShippingOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
					}
				]
			},
			"children": [
				{
					"id": 23283,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23284,
							"name": "new CustomShippingOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23282,
								"name": "CustomShippingOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23285,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23286,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23283
					]
				},
				{
					"title": "Properties",
					"children": [
						23285,
						23286
					]
				}
			]
		},
		{
			"id": 23277,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23278,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23279,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23277,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23280,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23281,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23278
					]
				},
				{
					"title": "Properties",
					"children": [
						23280,
						23281
					]
				}
			]
		},
		{
			"id": 20781,
			"name": "AdminPostOrdersOrderSwapsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap to create."
					}
				]
			},
			"children": [
				{
					"id": 20782,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20783,
							"name": "new AdminPostOrdersOrderSwapsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the swap to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20781,
								"name": "AdminPostOrdersOrderSwapsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20784,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items to associate with the swap's return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23265,
							"name": "ReturnItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20785,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method associated with the swap's return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23272,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20786,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel associated with the swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20787,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new items to send to the Customer."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23277,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20788,
					"name": "custom_shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of custom shipping options to potentially create a Shipping Method from to send the additional items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23282,
							"name": "CustomShippingOption",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 20789,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20790,
					"name": "return_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20791,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, swaps can be completed with items out of stock"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20782
					]
				},
				{
					"title": "Properties",
					"children": [
						20784,
						20785,
						20786,
						20787,
						20788,
						20789,
						20790,
						20791
					]
				}
			]
		},
		{
			"id": 20792,
			"name": "AdminPostOrdersOrderSwapsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20793,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20794,
							"name": "new AdminPostOrdersOrderSwapsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20792,
								"name": "AdminPostOrdersOrderSwapsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20795,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20796,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20793
					]
				},
				{
					"title": "Properties",
					"children": [
						20795,
						20796
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20808,
			"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20809,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20810,
							"name": "new AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20808,
								"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20811,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 20812,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20813,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment's location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20809
					]
				},
				{
					"title": "Properties",
					"children": [
						20811,
						20812,
						20813
					]
				}
			]
		},
		{
			"id": 20814,
			"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20815,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20816,
							"name": "new AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20814,
								"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20817,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20818,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20815
					]
				},
				{
					"title": "Properties",
					"children": [
						20817,
						20818
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20819,
			"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20820,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20821,
							"name": "new AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20819,
								"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20822,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 20823,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20824,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment's location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20820
					]
				},
				{
					"title": "Properties",
					"children": [
						20822,
						20823,
						20824
					]
				}
			]
		},
		{
			"id": 20825,
			"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20826,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20827,
							"name": "new AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20825,
								"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20828,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20829,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20826
					]
				},
				{
					"title": "Properties",
					"children": [
						20828,
						20829
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20830,
			"name": "AdminGetOrdersOrderParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20831,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20832,
							"name": "new AdminGetOrdersOrderParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20830,
								"name": "AdminGetOrdersOrderParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20833,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20834,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20831
					]
				},
				{
					"title": "Properties",
					"children": [
						20833,
						20834
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20650,
			"name": "AdminOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20651,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20652,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20652
							]
						}
					]
				}
			}
		},
		{
			"id": 20653,
			"name": "AdminOrdersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20654,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20655,
									"name": "orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of order details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order.ts",
												"qualifiedName": "Order"
											},
											"name": "Order",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20655
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20656,
			"name": "filterableAdminOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20657,
			"name": "AvailableOrderIncludes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20658,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20659,
							"name": "RETURNABLE_ITEMS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"returnable_items\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20659
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20660,
			"name": "allowedOrderIncludes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20835,
			"name": "AdminGetOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 20836,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20837,
							"name": "new AdminGetOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20835,
								"name": "AdminGetOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23289,
								"name": "AdminListOrdersSelector.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23288,
						"name": "AdminListOrdersSelector.constructor"
					}
				},
				{
					"id": 20838,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20839,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 20840,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20841,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20842,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort retrieved orders by. By default, the sort order is ascending.\nTo change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20843,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' shipping address, first name, email, and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23290,
						"name": "AdminListOrdersSelector.q"
					}
				},
				{
					"id": 20844,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23291,
						"name": "AdminListOrdersSelector.id"
					}
				},
				{
					"id": 20845,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23292,
						"name": "AdminListOrdersSelector.status"
					}
				},
				{
					"id": 20846,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23293,
						"name": "AdminListOrdersSelector.fulfillment_status"
					}
				},
				{
					"id": 20847,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23294,
						"name": "AdminListOrdersSelector.payment_status"
					}
				},
				{
					"id": 20848,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23295,
						"name": "AdminListOrdersSelector.display_id"
					}
				},
				{
					"id": 20849,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23296,
						"name": "AdminListOrdersSelector.cart_id"
					}
				},
				{
					"id": 20850,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Customer ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23297,
						"name": "AdminListOrdersSelector.customer_id"
					}
				},
				{
					"id": 20851,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23298,
						"name": "AdminListOrdersSelector.email"
					}
				},
				{
					"id": 20852,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Regions to filter orders by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23299,
						"name": "AdminListOrdersSelector.region_id"
					}
				},
				{
					"id": 20853,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23300,
						"name": "AdminListOrdersSelector.currency_code"
					}
				},
				{
					"id": 20854,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23301,
						"name": "AdminListOrdersSelector.tax_rate"
					}
				},
				{
					"id": 20855,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channel IDs to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23302,
						"name": "AdminListOrdersSelector.sales_channel_id"
					}
				},
				{
					"id": 20856,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23303,
						"name": "AdminListOrdersSelector.canceled_at"
					}
				},
				{
					"id": 20857,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23304,
						"name": "AdminListOrdersSelector.created_at"
					}
				},
				{
					"id": 20858,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23305,
						"name": "AdminListOrdersSelector.updated_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20836
					]
				},
				{
					"title": "Properties",
					"children": [
						20838,
						20839,
						20840,
						20841,
						20842,
						20843,
						20844,
						20845,
						20846,
						20847,
						20848,
						20849,
						20850,
						20851,
						20852,
						20853,
						20854,
						20855,
						20856,
						20857,
						20858
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23287,
					"name": "AdminListOrdersSelector",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20859,
			"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20860,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20861,
							"name": "new AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20859,
								"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20862,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20863,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20860
					]
				},
				{
					"title": "Properties",
					"children": [
						20862,
						20863
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20864,
			"name": "AdminPostOrdersOrderRefundsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order refund."
					}
				]
			},
			"children": [
				{
					"id": 20865,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20866,
							"name": "new AdminPostOrdersOrderRefundsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order refund."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20864,
								"name": "AdminPostOrdersOrderRefundsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20867,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund. It should be less than or equal the `refundable_amount` of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20868,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20869,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note with additional details about the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20870,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20865
					]
				},
				{
					"title": "Properties",
					"children": [
						20867,
						20868,
						20869,
						20870
					]
				}
			]
		},
		{
			"id": 20871,
			"name": "AdminPostOrdersOrderRefundsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20872,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20873,
							"name": "new AdminPostOrdersOrderRefundsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20871,
								"name": "AdminPostOrdersOrderRefundsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20874,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20875,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20872
					]
				},
				{
					"title": "Properties",
					"children": [
						20874,
						20875
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 23313,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 23314,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23315,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23313,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23316,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23317,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23314
					]
				},
				{
					"title": "Properties",
					"children": [
						23316,
						23317
					]
				}
			]
		},
		{
			"id": 20876,
			"name": "AdminPostOrdersOrderReturnsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the requested return."
					}
				]
			},
			"children": [
				{
					"id": 20877,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20878,
							"name": "new AdminPostOrdersOrderReturnsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the requested return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20876,
								"name": "AdminPostOrdersOrderReturnsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20879,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items that will be returned."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23306,
							"name": "OrdersReturnItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20880,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Method to be used to handle the return shipment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23313,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20881,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20882,
					"name": "receive_now",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if the Return should be registerd as received immediately."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 20883,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20884,
					"name": "refund",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20885,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20877
					]
				},
				{
					"title": "Properties",
					"children": [
						20879,
						20880,
						20881,
						20882,
						20883,
						20884,
						20885
					]
				}
			]
		},
		{
			"id": 20886,
			"name": "AdminPostOrdersOrderReturnsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20887,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20888,
							"name": "new AdminPostOrdersOrderReturnsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20886,
								"name": "AdminPostOrdersOrderReturnsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20889,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20890,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20887
					]
				},
				{
					"title": "Properties",
					"children": [
						20889,
						20890
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20891,
			"name": "AdminPostOrdersOrderClaimsClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20892,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20893,
							"name": "new AdminPostOrdersOrderClaimsClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20891,
								"name": "AdminPostOrdersOrderClaimsClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20894,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Claim Items that the Claim will consist of."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23318,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20895,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Methods to send the additional Line Items with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23327,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20896,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20897,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20892
					]
				},
				{
					"title": "Properties",
					"children": [
						20894,
						20895,
						20896,
						20897
					]
				}
			]
		},
		{
			"id": 23327,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 23328,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23329,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23327,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23330,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23331,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create a Shipping Method from"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23332,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price to charge for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23333,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23328
					]
				},
				{
					"title": "Properties",
					"children": [
						23330,
						23331,
						23332,
						23333
					]
				}
			]
		},
		{
			"id": 23318,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23319,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23320,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23318,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23321,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Claim Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23322,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Short text describing the Claim Item in further detail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23323,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Claim"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23324,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of image URL's that will be associated with the Claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23704,
							"name": "Image",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 23325,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list o tags to add to the Claim Item"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23709,
							"name": "Tag",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 23326,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23319
					]
				},
				{
					"title": "Properties",
					"children": [
						23321,
						23322,
						23323,
						23324,
						23325,
						23326
					]
				}
			]
		},
		{
			"id": 23704,
			"name": "Image",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
					}
				]
			},
			"children": [
				{
					"id": 23705,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23706,
							"name": "new Image",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23704,
								"name": "Image",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23707,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Image ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23708,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Image URL"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23705
					]
				},
				{
					"title": "Properties",
					"children": [
						23707,
						23708
					]
				}
			]
		},
		{
			"id": 23709,
			"name": "Tag",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23710,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23711,
							"name": "new Tag",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23709,
								"name": "Tag",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23712,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23713,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag value"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23710
					]
				},
				{
					"title": "Properties",
					"children": [
						23712,
						23713
					]
				}
			]
		},
		{
			"id": 20898,
			"name": "AdminPostOrdersOrderClaimsClaimParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20899,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20900,
							"name": "new AdminPostOrdersOrderClaimsClaimParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20898,
								"name": "AdminPostOrdersOrderClaimsClaimParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20901,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20902,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20899
					]
				},
				{
					"title": "Properties",
					"children": [
						20901,
						20902
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 23334,
			"name": "PaymentMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the order's payment method."
					}
				]
			},
			"children": [
				{
					"id": 23335,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23336,
							"name": "new PaymentMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23334,
								"name": "PaymentMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23337,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23338,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to attach to the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23335
					]
				},
				{
					"title": "Properties",
					"children": [
						23337,
						23338
					]
				}
			]
		},
		{
			"id": 23339,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the order's shipping method."
					}
				]
			},
			"children": [
				{
					"id": 23340,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23341,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23339,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23342,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping provider used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23343,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping profile used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23344,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23345,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to attach to the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 23346,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items associated with this shipping methods."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23340
					]
				},
				{
					"title": "Properties",
					"children": [
						23342,
						23343,
						23344,
						23345,
						23346
					]
				}
			]
		},
		{
			"id": 20903,
			"name": "AdminPostOrdersOrderReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the order."
					}
				]
			},
			"children": [
				{
					"id": 20904,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20905,
							"name": "new AdminPostOrdersOrderReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20903,
								"name": "AdminPostOrdersOrderReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20906,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20907,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's billing address"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22848,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20908,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's shipping address"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22848,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20909,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items of the order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				},
				{
					"id": 20910,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the region that the order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20911,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounts applied to the order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				},
				{
					"id": 20912,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer associated with the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20913,
					"name": "payment_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment method chosen for the order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23334,
						"name": "PaymentMethod",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20914,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Method used for shipping the order."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23339,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20915,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20904
					]
				},
				{
					"title": "Properties",
					"children": [
						20906,
						20907,
						20908,
						20909,
						20910,
						20911,
						20912,
						20913,
						20914,
						20915
					]
				}
			]
		},
		{
			"id": 20916,
			"name": "AdminPostOrdersOrderParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to configure the retrieved order."
					}
				]
			},
			"children": [
				{
					"id": 20917,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20918,
							"name": "new AdminPostOrdersOrderParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20916,
								"name": "AdminPostOrdersOrderParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20919,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20920,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20917
					]
				},
				{
					"title": "Properties",
					"children": [
						20919,
						20920
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20931,
			"name": "AdminGetPaymentCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20932,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20933,
							"name": "new AdminGetPaymentCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20931,
								"name": "AdminGetPaymentCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20934,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20935,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20932
					]
				},
				{
					"title": "Properties",
					"children": [
						20934,
						20935
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20921,
			"name": "defaultPaymentCollectionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20922,
			"name": "defaulPaymentCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20923,
			"name": "AdminPaymentCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20924,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20925,
							"name": "payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment Collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
									"qualifiedName": "PaymentCollection"
								},
								"name": "PaymentCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20925
							]
						}
					]
				}
			}
		},
		{
			"id": 20926,
			"name": "AdminPaymentCollectionDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a payment collection."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20927,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20928,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Payment Collection."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20929,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "payment_collection"
							},
							"defaultValue": "payment_collection"
						},
						{
							"id": 20930,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the Payment Collection was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20928,
								20929,
								20930
							]
						}
					]
				}
			}
		},
		{
			"id": 20936,
			"name": "AdminUpdatePaymentCollectionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 20937,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20938,
							"name": "new AdminUpdatePaymentCollectionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the payment collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20936,
								"name": "AdminUpdatePaymentCollectionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20939,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description to create or update the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20940,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20937
					]
				},
				{
					"title": "Properties",
					"children": [
						20939,
						20940
					]
				}
			]
		},
		{
			"id": 20948,
			"name": "GetPaymentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20949,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20950,
							"name": "new GetPaymentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20948,
								"name": "GetPaymentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20951,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20952,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20949
					]
				},
				{
					"title": "Properties",
					"children": [
						20951,
						20952
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20941,
			"name": "defaultPaymentFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20942,
			"name": "AdminPaymentRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20943,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20944,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
									"qualifiedName": "Payment"
								},
								"name": "Payment",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20944
							]
						}
					]
				}
			}
		},
		{
			"id": 20945,
			"name": "AdminRefundRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20946,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20947,
							"name": "refund",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Refund details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
									"qualifiedName": "Refund"
								},
								"name": "Refund",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20947
							]
						}
					]
				}
			}
		},
		{
			"id": 20953,
			"name": "AdminPostPaymentRefundsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the refund to create."
					}
				]
			},
			"children": [
				{
					"id": 20954,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20955,
							"name": "new AdminPostPaymentRefundsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the refund to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20953,
								"name": "AdminPostPaymentRefundsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20956,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20957,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
							"qualifiedName": "RefundReason"
						},
						"name": "RefundReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20958,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note with additional details about the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20954
					]
				},
				{
					"title": "Properties",
					"children": [
						20956,
						20957,
						20958
					]
				}
			]
		},
		{
			"id": 20978,
			"name": "AdminPostPriceListPricesPricesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the prices to add."
					}
				]
			},
			"children": [
				{
					"id": 20979,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20980,
							"name": "new AdminPostPriceListPricesPricesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the prices to add."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20978,
								"name": "AdminPostPriceListPricesPricesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20981,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to update or add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22980,
							"name": "AdminPriceListPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20982,
					"name": "override",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the prices will replace all existing prices associated with the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20979
					]
				},
				{
					"title": "Properties",
					"children": [
						20981,
						20982
					]
				}
			]
		},
		{
			"id": 23353,
			"name": "CustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer group that can be used to organize customers into groups of similar traits."
					}
				]
			},
			"children": [
				{
					"id": 23354,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23355,
							"name": "new CustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer group that can be used to organize customers into groups of similar traits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23353,
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23356,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23354
					]
				},
				{
					"title": "Properties",
					"children": [
						23356
					]
				}
			]
		},
		{
			"id": 20983,
			"name": "AdminPostPriceListsPriceListReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the price list to create."
					}
				]
			},
			"children": [
				{
					"id": 20984,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20985,
							"name": "new AdminPostPriceListsPriceListReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the price list to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20983,
								"name": "AdminPostPriceListsPriceListReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20986,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20987,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20988,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List starts being valid."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20989,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List ends being valid."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20990,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Price List. If the status is set to `draft`, the prices created in the price list will not be available of the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23347,
						"name": "PriceListStatus",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20991,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Price List."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23350,
						"name": "PriceListType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20992,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices of the Price List."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22990,
							"name": "AdminPriceListPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20993,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of customer groups that the Price List applies to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23353,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20994,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of price list"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20984
					]
				},
				{
					"title": "Properties",
					"children": [
						20986,
						20987,
						20988,
						20989,
						20990,
						20991,
						20992,
						20993,
						20994
					]
				}
			]
		},
		{
			"id": 20995,
			"name": "AdminDeletePriceListPricesPricesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the prices to delete."
					}
				]
			},
			"children": [
				{
					"id": 20996,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20997,
							"name": "new AdminDeletePriceListPricesPricesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the prices to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20995,
								"name": "AdminDeletePriceListPricesPricesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20998,
					"name": "price_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the prices to delete."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20996
					]
				},
				{
					"title": "Properties",
					"children": [
						20998
					]
				}
			]
		},
		{
			"id": 20999,
			"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products' prices to delete."
					}
				]
			},
			"children": [
				{
					"id": 21000,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21001,
							"name": "new AdminDeletePriceListsPriceListProductsPricesBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products' prices to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20999,
								"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21002,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to delete their associated prices."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21000
					]
				},
				{
					"title": "Properties",
					"children": [
						21002
					]
				}
			]
		},
		{
			"id": 20959,
			"name": "defaultAdminPriceListFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20960,
			"name": "defaultAdminPriceListRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20961,
			"name": "AdminPriceListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20962,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20963,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Price List details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
									"qualifiedName": "PriceList"
								},
								"name": "PriceList",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20963
							]
						}
					]
				}
			}
		},
		{
			"id": 20964,
			"name": "AdminPriceListDeleteBatchRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a price list."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20965,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20966,
							"name": "ids",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs of the deleted prices."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 20967,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 20968,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted. A price is also named `money-amount`."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "money-amount"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20966,
								20967,
								20968
							]
						}
					]
				}
			}
		},
		{
			"id": 20969,
			"name": "AdminPriceListDeleteProductPricesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20964,
				"name": "AdminPriceListDeleteBatchRes",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20970,
			"name": "AdminPriceListDeleteVariantPricesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20964,
				"name": "AdminPriceListDeleteBatchRes",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20971,
			"name": "AdminPriceListDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 20972,
			"name": "AdminPriceListsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of price lists with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20973,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20974,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of price lists details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
												"qualifiedName": "PriceList"
											},
											"name": "PriceList",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20974
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20975,
			"name": "AdminPriceListsProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20976,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20977,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product.ts",
												"qualifiedName": "Product"
											},
											"name": "Product",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20977
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21003,
			"name": "AdminGetPriceListsPriceListProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 21007,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21008,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, product variant's title and sku, and product collection's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21009,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21010,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated collection ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21011,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tags to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21012,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21013,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21014,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21015,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21016,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21017,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).order"
					}
				},
				{
					"id": 21018,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21019,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21020,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21021,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).expand"
					}
				},
				{
					"id": 21022,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).fields"
					}
				},
				{
					"id": 21023,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).offset"
					}
				},
				{
					"id": 21024,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of products returned in the list. Default is "
							},
							{
								"kind": "code",
								"text": "`50`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).limit"
					}
				},
				{
					"id": 21004,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21005,
							"name": "new AdminGetPriceListsPriceListProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21006,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21003,
								"name": "AdminGetPriceListsPriceListProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21004
					]
				},
				{
					"title": "Properties",
					"children": [
						21007,
						21008,
						21009,
						21010,
						21011,
						21012,
						21013,
						21014,
						21015,
						21016,
						21017,
						21018,
						21019,
						21020,
						21021,
						21022,
						21023,
						21024
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21025,
			"name": "AdminGetPriceListPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved price lists."
					}
				]
			},
			"children": [
				{
					"id": 21026,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21027,
							"name": "new AdminGetPriceListPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21025,
								"name": "AdminGetPriceListPaginationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22969,
								"name": "FilterablePriceListProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22968,
						"name": "FilterablePriceListProps.constructor"
					}
				},
				{
					"id": 21028,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 21029,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 21030,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21031,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21032,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22970,
						"name": "FilterablePriceListProps.id"
					}
				},
				{
					"id": 21033,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search price lists' description, name, and customer group's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22971,
						"name": "FilterablePriceListProps.q"
					}
				},
				{
					"id": 21034,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22964,
							"name": "PriceListStatus",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22972,
						"name": "FilterablePriceListProps.status"
					}
				},
				{
					"id": 21035,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22973,
						"name": "FilterablePriceListProps.name"
					}
				},
				{
					"id": 21036,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price lists by their associated customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22974,
						"name": "FilterablePriceListProps.customer_groups"
					}
				},
				{
					"id": 21037,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22975,
						"name": "FilterablePriceListProps.description"
					}
				},
				{
					"id": 21038,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22961,
							"name": "PriceListType",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22976,
						"name": "FilterablePriceListProps.type"
					}
				},
				{
					"id": 21039,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22977,
						"name": "FilterablePriceListProps.created_at"
					}
				},
				{
					"id": 21040,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22978,
						"name": "FilterablePriceListProps.updated_at"
					}
				},
				{
					"id": 21041,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22979,
						"name": "FilterablePriceListProps.deleted_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21026
					]
				},
				{
					"title": "Properties",
					"children": [
						21028,
						21029,
						21030,
						21031,
						21032,
						21033,
						21034,
						21035,
						21036,
						21037,
						21038,
						21039,
						21040,
						21041
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22967,
					"name": "FilterablePriceListProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 23357,
			"name": "CustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer group that can be used to organize customers into groups of similar traits."
					}
				]
			},
			"children": [
				{
					"id": 23358,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23359,
							"name": "new CustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer group that can be used to organize customers into groups of similar traits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23357,
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23360,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23358
					]
				},
				{
					"title": "Properties",
					"children": [
						23360
					]
				}
			]
		},
		{
			"id": 21042,
			"name": "AdminPostPriceListsPriceListPriceListReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 21043,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21044,
							"name": "new AdminPostPriceListsPriceListPriceListReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the payment collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21042,
								"name": "AdminPostPriceListsPriceListPriceListReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21045,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Price List"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21046,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21047,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List starts being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 21048,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List ends being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 21049,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Price List. If the status is set to `draft`, the prices created in the price list will not be available of the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23347,
						"name": "PriceListStatus",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 21050,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Price List."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23350,
						"name": "PriceListType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 21051,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices of the Price List."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22980,
							"name": "AdminPriceListPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21052,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of customer groups that the Price List applies to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23357,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21053,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of price list"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21043
					]
				},
				{
					"title": "Properties",
					"children": [
						21045,
						21046,
						21047,
						21048,
						21049,
						21050,
						21051,
						21052,
						21053
					]
				}
			]
		},
		{
			"id": 21115,
			"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the product category."
					}
				]
			},
			"children": [
				{
					"id": 21116,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21117,
							"name": "new AdminPostProductCategoriesCategoryProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21115,
								"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21118,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to add to the product category"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23369,
							"name": "ProductBatchProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21116
					]
				},
				{
					"title": "Properties",
					"children": [
						21118
					]
				}
			]
		},
		{
			"id": 21119,
			"name": "AdminPostProductCategoriesCategoryProductsBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21120,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21121,
							"name": "new AdminPostProductCategoriesCategoryProductsBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21119,
								"name": "AdminPostProductCategoriesCategoryProductsBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21122,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21123,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21120
					]
				},
				{
					"title": "Properties",
					"children": [
						21122,
						21123
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21084,
			"name": "AdminPostProductCategoriesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product category to create."
					}
				]
			},
			"children": [
				{
					"id": 21085,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21086,
							"name": "new AdminPostProductCategoriesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product category to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21084,
								"name": "AdminPostProductCategoriesReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23363,
								"name": "AdminProductCategoriesReqBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23362,
						"name": "AdminProductCategoriesReqBase.constructor"
					}
				},
				{
					"id": 21087,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21088,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21089,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23364,
						"name": "AdminProductCategoriesReqBase.description"
					}
				},
				{
					"id": 21090,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. If none is provided, the kebab-case version of the name will be used. This field can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23365,
						"name": "AdminProductCategoriesReqBase.handle"
					}
				},
				{
					"id": 21091,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the product category will only be available to admins."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23366,
						"name": "AdminProductCategoriesReqBase.is_internal"
					}
				},
				{
					"id": 21092,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `false`, the product category will not be available in the storefront."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23367,
						"name": "AdminProductCategoriesReqBase.is_active"
					}
				},
				{
					"id": 21093,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23368,
						"name": "AdminProductCategoriesReqBase.parent_category_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21085
					]
				},
				{
					"title": "Properties",
					"children": [
						21087,
						21088,
						21089,
						21090,
						21091,
						21092,
						21093
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23361,
					"name": "AdminProductCategoriesReqBase",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21094,
			"name": "AdminPostProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21095,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21096,
							"name": "new AdminPostProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21094,
								"name": "AdminPostProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21097,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21098,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21095
					]
				},
				{
					"title": "Properties",
					"children": [
						21097,
						21098
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21124,
			"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to delete from the product category."
					}
				]
			},
			"children": [
				{
					"id": 21125,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21126,
							"name": "new AdminDeleteProductCategoriesCategoryProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to delete from the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21124,
								"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21127,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to delete from the product category."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23369,
							"name": "ProductBatchProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21125
					]
				},
				{
					"title": "Properties",
					"children": [
						21127
					]
				}
			]
		},
		{
			"id": 21128,
			"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21129,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21130,
							"name": "new AdminDeleteProductCategoriesCategoryProductsBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21128,
								"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21131,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21132,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21129
					]
				},
				{
					"title": "Properties",
					"children": [
						21131,
						21132
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21064,
			"name": "AdminGetProductCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21065,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21066,
							"name": "new AdminGetProductCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21064,
								"name": "AdminGetProductCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21067,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21068,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21065
					]
				},
				{
					"title": "Properties",
					"children": [
						21067,
						21068
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21054,
			"name": "defaultAdminProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21055,
			"name": "allowedAdminProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21056,
			"name": "defaultProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21057,
			"name": "AdminProductCategoriesCategoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product category's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21058,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21059,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product category details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21059
							]
						}
					]
				}
			}
		},
		{
			"id": 21060,
			"name": "AdminProductCategoriesCategoryDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21061,
			"name": "AdminProductCategoriesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product categories with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21062,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21063,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product category details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
												"qualifiedName": "ProductCategory"
											},
											"name": "ProductCategory",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21063
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21069,
			"name": "AdminGetProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 21073,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product categories' names and handles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21074,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product categories by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21075,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include child product categories in the response."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21076,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21077,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21078,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by their associated parent ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 21079,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 21080,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 21081,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 21082,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of product categories returned in the list. The default is "
							},
							{
								"kind": "code",
								"text": "`100`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 21083,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 21070,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21071,
							"name": "new AdminGetProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21072,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21069,
								"name": "AdminGetProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21070
					]
				},
				{
					"title": "Properties",
					"children": [
						21073,
						21074,
						21075,
						21076,
						21077,
						21078,
						21079,
						21080,
						21081,
						21082,
						21083
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21099,
			"name": "AdminPostProductCategoriesCategoryReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the product category."
					}
				]
			},
			"children": [
				{
					"id": 21100,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21101,
							"name": "new AdminPostProductCategoriesCategoryReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21099,
								"name": "AdminPostProductCategoriesCategoryReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23363,
								"name": "AdminProductCategoriesReqBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23362,
						"name": "AdminProductCategoriesReqBase.constructor"
					}
				},
				{
					"id": 21102,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name to identify the Product Category by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21103,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A handle to be used in slugs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 23365,
						"name": "AdminProductCategoriesReqBase.handle"
					}
				},
				{
					"id": 21104,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rank of the category in the tree node (starting from 0)"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21105,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21106,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional text field to describe the Product Category by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23364,
						"name": "AdminProductCategoriesReqBase.description"
					}
				},
				{
					"id": 21107,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category an internal category for admins"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23366,
						"name": "AdminProductCategoriesReqBase.is_internal"
					}
				},
				{
					"id": 21108,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category visible/hidden in the store front"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23367,
						"name": "AdminProductCategoriesReqBase.is_active"
					}
				},
				{
					"id": 21109,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23368,
						"name": "AdminProductCategoriesReqBase.parent_category_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21100
					]
				},
				{
					"title": "Properties",
					"children": [
						21102,
						21103,
						21104,
						21105,
						21106,
						21107,
						21108,
						21109
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23361,
					"name": "AdminProductCategoriesReqBase",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21110,
			"name": "AdminPostProductCategoriesCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21111,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21112,
							"name": "new AdminPostProductCategoriesCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21110,
								"name": "AdminPostProductCategoriesCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21113,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21114,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21111
					]
				},
				{
					"title": "Properties",
					"children": [
						21113,
						21114
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21133,
			"name": "defaultAdminProductTagsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21134,
			"name": "defaultAdminProductTagsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 21135,
			"name": "AdminProductTagsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product tags with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21136,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21137,
									"name": "product_tags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product tag details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
												"qualifiedName": "ProductTag"
											},
											"name": "ProductTag",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21137
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21138,
			"name": "AdminGetProductTagsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 21139,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21140,
							"name": "new AdminGetProductTagsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21138,
								"name": "AdminGetProductTagsPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21141,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 21142,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21139
					]
				},
				{
					"title": "Properties",
					"children": [
						21141,
						21142
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 21143,
					"name": "AdminGetProductTagsParams"
				}
			]
		},
		{
			"id": 21143,
			"name": "AdminGetProductTagsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 21144,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21145,
							"name": "new AdminGetProductTagsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21143,
								"name": "AdminGetProductTagsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21140,
								"name": "AdminGetProductTagsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21139,
						"name": "AdminGetProductTagsPaginationParams.constructor"
					}
				},
				{
					"id": 21153,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 21141,
						"name": "AdminGetProductTagsPaginationParams.limit"
					}
				},
				{
					"id": 21154,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 21142,
						"name": "AdminGetProductTagsPaginationParams.offset"
					}
				},
				{
					"id": 21146,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 21147,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product tags' value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21148,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to search product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 21149,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product tags' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21150,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product tags' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21151,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21152,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product tags by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21144
					]
				},
				{
					"title": "Properties",
					"children": [
						21153,
						21154,
						21146,
						21147,
						21148,
						21149,
						21150,
						21151,
						21152
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21138,
					"name": "AdminGetProductTagsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21155,
			"name": "defaultAdminProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21156,
			"name": "defaultAdminProductTypeRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 21157,
			"name": "AdminProductTypesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product types with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21158,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21159,
									"name": "product_types",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product types details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
												"qualifiedName": "ProductType"
											},
											"name": "ProductType",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21159
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21160,
			"name": "AdminGetProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 21161,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21162,
							"name": "new AdminGetProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21160,
								"name": "AdminGetProductTypesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22883,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22882,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 21163,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 21164,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search product types' value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21165,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 21166,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21167,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21168,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 22886,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 21169,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product types by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21170,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 22884,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 21171,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 22885,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21161
					]
				},
				{
					"title": "Properties",
					"children": [
						21163,
						21164,
						21165,
						21166,
						21167,
						21168,
						21169,
						21170,
						21171
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22881,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21246,
			"name": "AdminPostProductsProductOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product option to create."
					}
				]
			},
			"children": [
				{
					"id": 21247,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21248,
							"name": "new AdminPostProductsProductOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product option to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21246,
								"name": "AdminPostProductsProductOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21249,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21247
					]
				},
				{
					"title": "Properties",
					"children": [
						21249
					]
				}
			]
		},
		{
			"id": 23714,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23715,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23716,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23714,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23717,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to give for the Product Option at the same index in the Product's `options` field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23715
					]
				},
				{
					"title": "Properties",
					"children": [
						23717
					]
				}
			]
		},
		{
			"id": 23394,
			"name": "ProductOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23395,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23396,
							"name": "new ProductOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23394,
								"name": "ProductOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23397,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23395
					]
				},
				{
					"title": "Properties",
					"children": [
						23397
					]
				}
			]
		},
		{
			"id": 23398,
			"name": "ProductVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23399,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23400,
							"name": "new ProductVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23398,
								"name": "ProductVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23401,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23402,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23403,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23404,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23405,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23406,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23407,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 23408,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Product Variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23409,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23410,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wieght of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23411,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23412,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23413,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23414,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23415,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23416,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23417,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 23418,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23420,
							"name": "ProductVariantPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 23419,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to. The option values should be added into the array in the same index as in the `options` field of the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23714,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23399
					]
				},
				{
					"title": "Properties",
					"children": [
						23401,
						23402,
						23403,
						23404,
						23405,
						23406,
						23407,
						23408,
						23409,
						23410,
						23411,
						23412,
						23413,
						23414,
						23415,
						23416,
						23417,
						23418,
						23419
					]
				}
			]
		},
		{
			"id": 21250,
			"name": "AdminPostProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product to create."
					}
				]
			},
			"children": [
				{
					"id": 21253,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21254,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21255,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21256,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if the Product represents a Gift Card. Purchasing Products with this flag set to `true` will result in a Gift Card being created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 21257,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if discounts can be applied to the Line Items generated from this Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 21258,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of images of the Product. Each value in the array is a URL to the image. You can use the upload API Routes to upload the image and obtain a URL."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21259,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail to use for the Product. The value is a URL to the thumbnail. You can use the upload API Routes to upload the thumbnail and obtain a URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21260,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique handle to identify the Product by. If not provided, the kebab-case version of the product title will be used. This can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21261,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product. The product is shown to the customer only if its status is `published`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "ProductStatus"
						},
						"name": "ProductStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "ProductStatus.DRAFT"
				},
				{
					"id": 21262,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Product Type to associate the Product with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23376,
						"name": "ProductTypeReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21263,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Collection the Product belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21264,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product Tags to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23381,
							"name": "ProductTagReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21265,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channels to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23386,
							"name": "ProductSalesChannelReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21266,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product categories to add the Product to."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23390,
							"name": "ProductProductCategoryReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21267,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Options that the Product should have. A new product option will be created for every item in the array."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23394,
							"name": "ProductOptionReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21268,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Variants to create with the Product. Each product variant must have a unique combination of Product Option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23398,
							"name": "ProductVariantReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21269,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21270,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21271,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21272,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21273,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21274,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21275,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21276,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21277,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21251,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21252,
							"name": "new AdminPostProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21250,
								"name": "AdminPostProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21251
					]
				},
				{
					"title": "Properties",
					"children": [
						21253,
						21254,
						21255,
						21256,
						21257,
						21258,
						21259,
						21260,
						21261,
						21262,
						21263,
						21264,
						21265,
						21266,
						21267,
						21268,
						21269,
						21270,
						21271,
						21272,
						21273,
						21274,
						21275,
						21276,
						21277
					]
				}
			]
		},
		{
			"id": 23428,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23429,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23430,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23428,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23431,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A value to give to the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23432,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23429
					]
				},
				{
					"title": "Properties",
					"children": [
						23431,
						23432
					]
				}
			]
		},
		{
			"id": 21278,
			"name": "AdminPostProductsProductVariantsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product variant to create."
					}
				]
			},
			"children": [
				{
					"id": 21279,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21280,
							"name": "new AdminPostProductsProductVariantsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product variant to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21278,
								"name": "AdminPostProductsProductVariantsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21281,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21282,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21283,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21284,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21285,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21286,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21287,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 21288,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21289,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 21290,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wieght of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21291,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21292,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21293,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21294,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21295,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21296,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21297,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21298,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23420,
							"name": "ProductVariantPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21299,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23428,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21279
					]
				},
				{
					"title": "Properties",
					"children": [
						21281,
						21282,
						21283,
						21284,
						21285,
						21286,
						21287,
						21288,
						21289,
						21290,
						21291,
						21292,
						21293,
						21294,
						21295,
						21296,
						21297,
						21298,
						21299
					]
				}
			]
		},
		{
			"id": 21300,
			"name": "AdminGetProductParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21301,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21302,
							"name": "new AdminGetProductParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21300,
								"name": "AdminGetProductParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21303,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21304,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21301
					]
				},
				{
					"title": "Properties",
					"children": [
						21303,
						21304
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21172,
			"name": "defaultAdminProductRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21173,
			"name": "defaultAdminProductFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "Product"
						},
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21174,
			"name": "defaultAdminGetProductsVariantsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21175,
			"name": "defaultAdminGetProductsVariantsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21176,
			"name": "defaultAdminProductRemoteQueryObject",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is temporary."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21177,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21178,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								}
							},
							"defaultValue": "defaultAdminProductFields"
						},
						{
							"id": 21179,
							"name": "images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21180,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21181,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21181
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21182,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21183,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21184,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21184
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21185,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21186,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21187,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21187
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21188,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21189,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21190,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21190
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21191,
							"name": "categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21192,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21193,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21193
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21194,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21195,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21196,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 21197,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 21198,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 21199,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																21199
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21196,
												21197
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21200,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21201,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21202,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 21203,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 21204,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 21205,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																21205
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21202,
												21203
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21206,
							"name": "profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21207,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21208,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21208
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 21209,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21210,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21211,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21211
											]
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21178,
								21179,
								21182,
								21185,
								21188,
								21191,
								21194,
								21200,
								21206,
								21209
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21212,
			"name": "AdminProductsDeleteOptionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product's option."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21213,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21214,
							"name": "option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product Option"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21215,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "option"
							},
							"defaultValue": "option"
						},
						{
							"id": 21216,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 21217,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21214,
								21215,
								21216,
								21217
							]
						}
					]
				}
			}
		},
		{
			"id": 21218,
			"name": "AdminProductsDeleteVariantRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product's variant."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21219,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21220,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product Variant."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21221,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product-variant"
							},
							"defaultValue": "product-variant"
						},
						{
							"id": 21222,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 21223,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21220,
								21221,
								21222,
								21223
							]
						}
					]
				}
			}
		},
		{
			"id": 21224,
			"name": "AdminProductsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21225,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21226,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21227,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product"
							},
							"defaultValue": "product"
						},
						{
							"id": 21228,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21226,
								21227,
								21228
							]
						}
					]
				}
			}
		},
		{
			"id": 21229,
			"name": "AdminProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21230,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21231,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 23373,
													"name": "PricedProduct",
													"package": "@medusajs/medusa"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/product.ts",
														"qualifiedName": "Product"
													},
													"name": "Product",
													"package": "@medusajs/medusa"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21231
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21232,
			"name": "AdminProductsListVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21233,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21234,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variants details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
												"qualifiedName": "ProductVariant"
											},
											"name": "ProductVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21234
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21235,
			"name": "AdminProductsListTypesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21236,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21237,
							"name": "types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product types details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
										"qualifiedName": "ProductType"
									},
									"name": "ProductType",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21237
							]
						}
					]
				}
			}
		},
		{
			"id": 21238,
			"name": "AdminProductsListTagsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The usage details of product tags."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21239,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21240,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product tags details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Pick"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
														"qualifiedName": "ProductTag"
													},
													"name": "ProductTag",
													"package": "@medusajs/medusa"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "id"
														},
														{
															"type": "literal",
															"value": "value"
														}
													]
												}
											],
											"name": "Pick",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 21241,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 21242,
														"name": "usage_count",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The number of products that use this tag."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															21242
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21240
							]
						}
					]
				}
			}
		},
		{
			"id": 21243,
			"name": "AdminProductsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21244,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21245,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21245
							]
						}
					]
				}
			}
		},
		{
			"id": 21305,
			"name": "AdminGetProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 21306,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21307,
							"name": "new AdminGetProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21305,
								"name": "AdminGetProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23435,
								"name": "FilterableProductProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23434,
						"name": "FilterableProductProps.constructor"
					}
				},
				{
					"id": 21308,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 21309,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 21310,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21311,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21312,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21313,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23436,
						"name": "FilterableProductProps.id"
					}
				},
				{
					"id": 21314,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23437,
						"name": "FilterableProductProps.q"
					}
				},
				{
					"id": 21315,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23438,
						"name": "FilterableProductProps.status"
					}
				},
				{
					"id": 21316,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated price lists' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23439,
						"name": "FilterableProductProps.price_list_id"
					}
				},
				{
					"id": 21317,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23440,
						"name": "FilterableProductProps.collection_id"
					}
				},
				{
					"id": 21318,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23441,
						"name": "FilterableProductProps.tags"
					}
				},
				{
					"id": 21319,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23442,
						"name": "FilterableProductProps.title"
					}
				},
				{
					"id": 21320,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23443,
						"name": "FilterableProductProps.description"
					}
				},
				{
					"id": 21321,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23444,
						"name": "FilterableProductProps.handle"
					}
				},
				{
					"id": 21322,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23445,
						"name": "FilterableProductProps.is_giftcard"
					}
				},
				{
					"id": 21323,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23446,
						"name": "FilterableProductProps.type_id"
					}
				},
				{
					"id": 21324,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23447,
						"name": "FilterableProductProps.sales_channel_id"
					}
				},
				{
					"id": 21325,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23448,
						"name": "FilterableProductProps.discount_condition_id"
					}
				},
				{
					"id": 21326,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23449,
						"name": "FilterableProductProps.category_id"
					}
				},
				{
					"id": 21327,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23450,
						"name": "FilterableProductProps.include_category_children"
					}
				},
				{
					"id": 21328,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23451,
						"name": "FilterableProductProps.created_at"
					}
				},
				{
					"id": 21329,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23452,
						"name": "FilterableProductProps.updated_at"
					}
				},
				{
					"id": 21330,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23453,
						"name": "FilterableProductProps.deleted_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21306
					]
				},
				{
					"title": "Properties",
					"children": [
						21308,
						21309,
						21310,
						21311,
						21312,
						21313,
						21314,
						21315,
						21316,
						21317,
						21318,
						21319,
						21320,
						21321,
						21322,
						21323,
						21324,
						21325,
						21326,
						21327,
						21328,
						21329,
						21330
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23433,
					"name": "FilterableProductProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21331,
			"name": "AdminGetProductsVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21332,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21333,
							"name": "new AdminGetProductsVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21331,
								"name": "AdminGetProductsVariantsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21334,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21335,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21336,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21337,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 21338,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 21339,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product variants' title, sku, and products' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21340,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21341,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 21342,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether their inventory is managed or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21343,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether they are allowed to be backordered or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21344,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product variants' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21345,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product variants' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21332
					]
				},
				{
					"title": "Properties",
					"children": [
						21334,
						21335,
						21336,
						21337,
						21338,
						21339,
						21340,
						21341,
						21342,
						21343,
						21344,
						21345
					]
				}
			]
		},
		{
			"id": 21346,
			"name": "AdminPostProductsProductMetadataReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21347,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21348,
							"name": "new AdminPostProductsProductMetadataReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21346,
								"name": "AdminPostProductsProductMetadataReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21349,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata key"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21350,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata value"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21347
					]
				},
				{
					"title": "Properties",
					"children": [
						21349,
						21350
					]
				}
			]
		},
		{
			"id": 21351,
			"name": "AdminPostProductsProductOptionsOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21352,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21353,
							"name": "new AdminPostProductsProductOptionsOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21351,
								"name": "AdminPostProductsProductOptionsOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21354,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21352
					]
				},
				{
					"title": "Properties",
					"children": [
						21354
					]
				}
			]
		},
		{
			"id": 23718,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23719,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23720,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23718,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23721,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23722,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23719
					]
				},
				{
					"title": "Properties",
					"children": [
						23721,
						23722
					]
				}
			]
		},
		{
			"id": 23454,
			"name": "ProductVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23455,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23456,
							"name": "new ProductVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23454,
								"name": "ProductVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23457,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of an existing product variant. If provided, the details of the product variant will be updated. If not, a new product variant will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23458,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23459,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23460,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23461,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23462,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23463,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23464,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23465,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23466,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23467,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23468,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23469,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23470,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23471,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23472,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23473,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23474,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 23475,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23477,
							"name": "ProductVariantPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 23476,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23718,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23455
					]
				},
				{
					"title": "Properties",
					"children": [
						23457,
						23458,
						23459,
						23460,
						23461,
						23462,
						23463,
						23464,
						23465,
						23466,
						23467,
						23468,
						23469,
						23470,
						23471,
						23472,
						23473,
						23474,
						23475,
						23476
					]
				}
			]
		},
		{
			"id": 21355,
			"name": "AdminPostProductsProductReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the product."
					}
				]
			},
			"children": [
				{
					"id": 21356,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21357,
							"name": "new AdminPostProductsProductReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the product."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21355,
								"name": "AdminPostProductsProductReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21358,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21359,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21360,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21361,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if discounts can be applied to the Line Items generated from this Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21362,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of images of the Product. Each value in the array is a URL to the image. You can use the upload API Routes to upload the image and obtain a URL."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21363,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail to use for the Product. The value is a URL to the thumbnail. You can use the upload API Routes to upload the thumbnail and obtain a URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21364,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique handle to identify the Product by. If not provided, the kebab-case version of the product title will be used. This can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21365,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product. The product is shown to the customer only if its status is `published`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "ProductStatus"
						},
						"name": "ProductStatus",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21366,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Product Type to associate the Product with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23376,
						"name": "ProductTypeReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21367,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Collection the Product belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21368,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product Tags to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23381,
							"name": "ProductTagReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21369,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channels to associate the Product with."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23386,
									"name": "ProductSalesChannelReq",
									"package": "@medusajs/medusa"
								}
							}
						]
					}
				},
				{
					"id": 21370,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product categories to add the Product to."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23390,
							"name": "ProductProductCategoryReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21371,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Variants to create with the Product. Each product variant must have a unique combination of Product Option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23454,
							"name": "ProductVariantReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21372,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21373,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21374,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21375,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21376,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21377,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21378,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21379,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21380,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21356
					]
				},
				{
					"title": "Properties",
					"children": [
						21358,
						21359,
						21360,
						21361,
						21362,
						21363,
						21364,
						21365,
						21366,
						21367,
						21368,
						21369,
						21370,
						21371,
						21372,
						21373,
						21374,
						21375,
						21376,
						21377,
						21378,
						21379,
						21380
					]
				}
			]
		},
		{
			"id": 23486,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23487,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23488,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23486,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23489,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23490,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23487
					]
				},
				{
					"title": "Properties",
					"children": [
						23489,
						23490
					]
				}
			]
		},
		{
			"id": 21381,
			"name": "AdminPostProductsProductVariantsVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21382,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21383,
							"name": "new AdminPostProductsProductVariantsVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21381,
								"name": "AdminPostProductsProductVariantsVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21384,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21385,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21386,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21387,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21388,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21389,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21390,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21391,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21392,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21393,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21394,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21395,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21396,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21397,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21398,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21399,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21400,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21401,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23477,
							"name": "ProductVariantPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21402,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23486,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21382
					]
				},
				{
					"title": "Properties",
					"children": [
						21384,
						21385,
						21386,
						21387,
						21388,
						21389,
						21390,
						21391,
						21392,
						21393,
						21394,
						21395,
						21396,
						21397,
						21398,
						21399,
						21400,
						21401,
						21402
					]
				}
			]
		},
		{
			"id": 21413,
			"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channels to add to the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 21414,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21415,
							"name": "new AdminPostPublishableApiKeySalesChannelsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channels to add to the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21413,
								"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21416,
					"name": "sales_channel_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the sales channels to add to the publishable API key"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23491,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21414
					]
				},
				{
					"title": "Properties",
					"children": [
						21416
					]
				}
			]
		},
		{
			"id": 21417,
			"name": "AdminPostPublishableApiKeysReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the publishable API key to create."
					}
				]
			},
			"children": [
				{
					"id": 21418,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21419,
							"name": "new AdminPostPublishableApiKeysReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the publishable API key to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21417,
								"name": "AdminPostPublishableApiKeysReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21420,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the publishable API key"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21418
					]
				},
				{
					"title": "Properties",
					"children": [
						21420
					]
				}
			]
		},
		{
			"id": 21421,
			"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channels to remove from the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 21422,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21423,
							"name": "new AdminDeletePublishableApiKeySalesChannelsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channels to remove from the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21421,
								"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21424,
					"name": "sales_channel_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the sales channels to remove from the publishable API key"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23491,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21422
					]
				},
				{
					"title": "Properties",
					"children": [
						21424
					]
				}
			]
		},
		{
			"id": 21403,
			"name": "AdminPublishableApiKeysRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The publishable API key's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21404,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21405,
							"name": "publishable_api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Publishable API key details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
									"qualifiedName": "PublishableApiKey"
								},
								"name": "PublishableApiKey",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21405
							]
						}
					]
				}
			}
		},
		{
			"id": 21406,
			"name": "AdminPublishableApiKeysListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of publishable API keys with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21407,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21408,
									"name": "publishable_api_keys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of publishable API keys details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
												"qualifiedName": "PublishableApiKey"
											},
											"name": "PublishableApiKey",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21408
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21409,
			"name": "AdminPublishableApiKeyDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21410,
			"name": "AdminPublishableApiKeysListSalesChannelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of sales channel."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21411,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21412,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of sales channels details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
										"qualifiedName": "SalesChannel"
									},
									"name": "SalesChannel",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21412
							]
						}
					]
				}
			}
		},
		{
			"id": 21425,
			"name": "GetPublishableApiKeySalesChannelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter the sales channels."
					}
				]
			},
			"children": [
				{
					"id": 21426,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21427,
							"name": "new GetPublishableApiKeySalesChannelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21425,
								"name": "GetPublishableApiKeySalesChannelsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21428,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search sales channels' names and descriptions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21426
					]
				},
				{
					"title": "Properties",
					"children": [
						21428
					]
				}
			]
		},
		{
			"id": 21429,
			"name": "GetPublishableApiKeysParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved publishable API keys."
					}
				]
			},
			"children": [
				{
					"id": 21433,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search publishable API keys' titles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21434,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A field to sort-order the retrieved publishable API keys by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 21435,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the publishable API keys' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21436,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the publishable API keys' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21437,
					"name": "revoked_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the publishable API keys' "
							},
							{
								"kind": "code",
								"text": "`revoked_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21438,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 21439,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 21440,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 21441,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 21430,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21431,
							"name": "new GetPublishableApiKeysParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21432,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21429,
								"name": "GetPublishableApiKeysParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21430
					]
				},
				{
					"title": "Properties",
					"children": [
						21433,
						21434,
						21435,
						21436,
						21437,
						21438,
						21439,
						21440,
						21441
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21442,
			"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 21443,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21444,
							"name": "new AdminPostPublishableApiKeysPublishableApiKeyReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21442,
								"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21445,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Publishable API Key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21443
					]
				},
				{
					"title": "Properties",
					"children": [
						21445
					]
				}
			]
		},
		{
			"id": 21464,
			"name": "AdminPostRegionsRegionCountriesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the country to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 21465,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21466,
							"name": "new AdminPostRegionsRegionCountriesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the country to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21464,
								"name": "AdminPostRegionsRegionCountriesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21467,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code for the Country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21465
					]
				},
				{
					"title": "Properties",
					"children": [
						21467
					]
				}
			]
		},
		{
			"id": 21468,
			"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the fulfillment provider to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 21469,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21470,
							"name": "new AdminPostRegionsRegionFulfillmentProvidersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the fulfillment provider to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21468,
								"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21471,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21469
					]
				},
				{
					"title": "Properties",
					"children": [
						21471
					]
				}
			]
		},
		{
			"id": 21472,
			"name": "AdminPostRegionsRegionPaymentProvidersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment provider to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 21473,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21474,
							"name": "new AdminPostRegionsRegionPaymentProvidersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment provider to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21472,
								"name": "AdminPostRegionsRegionPaymentProvidersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21475,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21473
					]
				},
				{
					"title": "Properties",
					"children": [
						21475
					]
				}
			]
		},
		{
			"id": 21476,
			"name": "AdminPostRegionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the region to create."
					}
				]
			},
			"children": [
				{
					"id": 21477,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21478,
							"name": "new AdminPostRegionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the region to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21476,
								"name": "AdminPostRegionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21479,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21480,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21481,
					"name": "tax_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax code of the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21482,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21483,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Payment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21484,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Fulfillment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21485,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of countries' 2 ISO characters that should be included in the Region."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21486,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether taxes are included in the prices of the region."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21487,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21477
					]
				},
				{
					"title": "Properties",
					"children": [
						21479,
						21480,
						21481,
						21482,
						21483,
						21484,
						21485,
						21486,
						21487
					]
				}
			]
		},
		{
			"id": 21516,
			"name": "AdminGetRegionsRegionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21517,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21518,
							"name": "new AdminGetRegionsRegionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21516,
								"name": "AdminGetRegionsRegionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21519,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21520,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21517
					]
				},
				{
					"title": "Properties",
					"children": [
						21519,
						21520
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21446,
			"name": "defaultAdminRegionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/region.ts",
							"qualifiedName": "Region"
						},
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21447,
			"name": "defaultAdminRegionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21448,
			"name": "AdminRegionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21449,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21450,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Region details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/region.ts",
									"qualifiedName": "Region"
								},
								"name": "Region",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21450
							]
						}
					]
				}
			}
		},
		{
			"id": 21451,
			"name": "AdminRegionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of regions with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21452,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21453,
									"name": "regions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of regions details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/region.ts",
												"qualifiedName": "Region"
											},
											"name": "Region",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21453
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21454,
			"name": "AdminRegionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21455,
			"name": "FulfillmentOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21456,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21457,
							"name": "new FulfillmentOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21455,
								"name": "FulfillmentOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21458,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the fulfillment provider"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21459,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "fulfillment provider options"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21456
					]
				},
				{
					"title": "Properties",
					"children": [
						21458,
						21459
					]
				}
			]
		},
		{
			"id": 21460,
			"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of fulfillment options in a region."
					}
				]
			},
			"children": [
				{
					"id": 21461,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21462,
							"name": "new AdminGetRegionsRegionFulfillmentOptionsRes",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fulfillment options in a region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21460,
								"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21463,
					"name": "fulfillment_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment providers details."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21455,
							"name": "FulfillmentOption",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21461
					]
				},
				{
					"title": "Properties",
					"children": [
						21463
					]
				}
			]
		},
		{
			"id": 21488,
			"name": "AdminGetRegionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved regions."
					}
				]
			},
			"children": [
				{
					"id": 21492,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search parameter for regions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21493,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 21494,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21495,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21496,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21497,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 21498,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 21499,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 21500,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 21489,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21490,
							"name": "new AdminGetRegionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21491,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21488,
								"name": "AdminGetRegionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21489
					]
				},
				{
					"title": "Properties",
					"children": [
						21492,
						21493,
						21494,
						21495,
						21496,
						21497,
						21498,
						21499,
						21500
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21501,
			"name": "AdminPostRegionsRegionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the regions."
					}
				]
			},
			"children": [
				{
					"id": 21502,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21503,
							"name": "new AdminPostRegionsRegionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the regions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21501,
								"name": "AdminPostRegionsRegionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21504,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21505,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21506,
					"name": "tax_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax code of the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21507,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21508,
					"name": "gift_cards_taxable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, taxes will be applied on gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21509,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the Medusa backend will automatically calculate taxes for carts in this region. If set to `false`, the taxes must be calculated manually."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21510,
					"name": "tax_provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider to use. If none provided, the system tax provider is used."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 21511,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Payment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21512,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Fulfillment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21513,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of countries' 2 ISO characters that should be included in the Region."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21514,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether taxes are included in the prices of the region."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21515,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21502
					]
				},
				{
					"title": "Properties",
					"children": [
						21504,
						21505,
						21506,
						21507,
						21508,
						21509,
						21510,
						21511,
						21512,
						21513,
						21514,
						21515
					]
				}
			]
		},
		{
			"id": 21534,
			"name": "AdminPostReservationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the reservation to create."
					}
				]
			},
			"children": [
				{
					"id": 21535,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21536,
							"name": "new AdminPostReservationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the reservation to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21534,
								"name": "AdminPostReservationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21537,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item of the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21538,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location of the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21539,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory item the reservation is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21540,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to reserve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21541,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21542,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21535
					]
				},
				{
					"title": "Properties",
					"children": [
						21537,
						21538,
						21539,
						21540,
						21541,
						21542
					]
				}
			]
		},
		{
			"id": 21521,
			"name": "AdminReservationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The reservation's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21522,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21523,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reservation details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23495,
								"name": "ReservationItemDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21523
							]
						}
					]
				}
			}
		},
		{
			"id": 21524,
			"name": "ExtendedReservationItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23495,
						"name": "ReservationItemDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21525,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21526,
									"name": "line_item",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item associated with the reservation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
											"qualifiedName": "LineItem"
										},
										"name": "LineItem",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 21527,
									"name": "inventory_item",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item associated with the reservation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 23197,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21526,
										21527
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21528,
			"name": "AdminReservationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of reservations with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21529,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21530,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of reservations details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23495,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21530
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21531,
			"name": "defaultAdminReservationRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 21532,
			"name": "defaultReservationFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21533,
			"name": "AdminReservationsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21543,
			"name": "AdminGetReservationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved reservations."
					}
				]
			},
			"children": [
				{
					"id": 21547,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21548,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inventory item IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21549,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Line item IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21550,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "\"Create by\" user IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21551,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Numerical filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22841,
						"name": "NumericalComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21552,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21553,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21554,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`description`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 21555,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 21556,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 21557,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 21558,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 21559,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 21544,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21545,
							"name": "new AdminGetReservationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21546,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21543,
								"name": "AdminGetReservationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21544
					]
				},
				{
					"title": "Properties",
					"children": [
						21547,
						21548,
						21549,
						21550,
						21551,
						21552,
						21553,
						21554,
						21555,
						21556,
						21557,
						21558,
						21559
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21560,
			"name": "AdminPostReservationsReservationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the reservation."
					}
				]
			},
			"children": [
				{
					"id": 21561,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21562,
							"name": "new AdminPostReservationsReservationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the reservation."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21560,
								"name": "AdminPostReservationsReservationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21563,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to reserve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21564,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location associated with the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21565,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21566,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21561
					]
				},
				{
					"title": "Properties",
					"children": [
						21563,
						21564,
						21565,
						21566
					]
				}
			]
		},
		{
			"id": 21576,
			"name": "AdminPostReturnReasonsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the return reason to create."
					}
				]
			},
			"children": [
				{
					"id": 21577,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21578,
							"name": "new AdminPostReturnReasonsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the return reason to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21576,
								"name": "AdminPostReturnReasonsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21579,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique value of the return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21580,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label to display to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21581,
					"name": "parent_return_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21582,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21583,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21577
					]
				},
				{
					"title": "Properties",
					"children": [
						21579,
						21580,
						21581,
						21582,
						21583
					]
				}
			]
		},
		{
			"id": 21567,
			"name": "defaultAdminReturnReasonsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21568,
			"name": "defaultAdminReturnReasonsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21569,
			"name": "AdminReturnReasonsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return reason's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21570,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21571,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return reason's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
									"qualifiedName": "ReturnReason"
								},
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21571
							]
						}
					]
				}
			}
		},
		{
			"id": 21572,
			"name": "AdminReturnReasonsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of return reasons."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21573,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21574,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of return reasons."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
										"qualifiedName": "ReturnReason"
									},
									"name": "ReturnReason",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21574
							]
						}
					]
				}
			}
		},
		{
			"id": 21575,
			"name": "AdminReturnReasonsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21584,
			"name": "AdminPostReturnReasonsReasonReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the return reason."
					}
				]
			},
			"children": [
				{
					"id": 21585,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21586,
							"name": "new AdminPostReturnReasonsReasonReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the return reason."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21584,
								"name": "AdminPostReturnReasonsReasonReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21587,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label to display to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21588,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique value of the return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21589,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21590,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21585
					]
				},
				{
					"title": "Properties",
					"children": [
						21587,
						21588,
						21589,
						21590
					]
				}
			]
		},
		{
			"id": 21591,
			"name": "defaultRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21592,
			"name": "defaultRelationsList",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21593,
			"name": "defaultReturnCancelRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21594,
			"name": "defaultReturnCancelFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/order.ts",
							"qualifiedName": "Order"
						},
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21595,
			"name": "AdminReturnsCancelRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The associated order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21596,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21597,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21597
							]
						}
					]
				}
			}
		},
		{
			"id": 21598,
			"name": "AdminReturnsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of returns with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21599,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21600,
									"name": "returns",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of returns details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/return.ts",
												"qualifiedName": "Return"
											},
											"name": "Return",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21600
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21601,
			"name": "AdminReturnsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21602,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21603,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return.ts",
									"qualifiedName": "Return"
								},
								"name": "Return",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21603
							]
						}
					]
				}
			}
		},
		{
			"id": 21604,
			"name": "AdminGetReturnsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 21605,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21606,
							"name": "new AdminGetReturnsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21604,
								"name": "AdminGetReturnsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21607,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 21608,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21605
					]
				},
				{
					"title": "Properties",
					"children": [
						21607,
						21608
					]
				}
			]
		},
		{
			"id": 23508,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23509,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23510,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23508,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23511,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23512,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23509
					]
				},
				{
					"title": "Properties",
					"children": [
						23511,
						23512
					]
				}
			]
		},
		{
			"id": 21609,
			"name": "AdminPostReturnsReturnReceiveReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the received return."
					}
				]
			},
			"children": [
				{
					"id": 21610,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21611,
							"name": "new AdminPostReturnsReturnReceiveReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the received return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21609,
								"name": "AdminPostReturnsReturnReceiveReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21612,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items that have been received."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23508,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21613,
					"name": "refund",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21614,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location to return items from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21610
					]
				},
				{
					"title": "Properties",
					"children": [
						21612,
						21613,
						21614
					]
				}
			]
		},
		{
			"id": 21623,
			"name": "AdminPostSalesChannelsChannelProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 21624,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21625,
							"name": "new AdminPostSalesChannelsChannelProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21623,
								"name": "AdminPostSalesChannelsChannelProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21626,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to add to the sales channel"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23491,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21624
					]
				},
				{
					"title": "Properties",
					"children": [
						21626
					]
				}
			]
		},
		{
			"id": 21659,
			"name": "AdminPostSalesChannelsChannelStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21660,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21661,
							"name": "new AdminPostSalesChannelsChannelStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21659,
								"name": "AdminPostSalesChannelsChannelStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21662,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21660
					]
				},
				{
					"title": "Properties",
					"children": [
						21662
					]
				}
			]
		},
		{
			"id": 21627,
			"name": "AdminPostSalesChannelsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channel to create."
					}
				]
			},
			"children": [
				{
					"id": 21628,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21629,
							"name": "new AdminPostSalesChannelsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channel to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21627,
								"name": "AdminPostSalesChannelsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21630,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Sales Channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21631,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Sales Channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21632,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Sales Channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21628
					]
				},
				{
					"title": "Properties",
					"children": [
						21630,
						21631,
						21632
					]
				}
			]
		},
		{
			"id": 21633,
			"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to delete from the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 21634,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21635,
							"name": "new AdminDeleteSalesChannelsChannelProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to delete from the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21633,
								"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21636,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to remove from the sales channel."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23491,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21634
					]
				},
				{
					"title": "Properties",
					"children": [
						21636
					]
				}
			]
		},
		{
			"id": 21615,
			"name": "AdminSalesChannelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21616,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21617,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sales Channel's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
									"qualifiedName": "SalesChannel"
								},
								"name": "SalesChannel",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21617
							]
						}
					]
				}
			}
		},
		{
			"id": 21618,
			"name": "AdminSalesChannelsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21619,
			"name": "AdminSalesChannelsDeleteLocationRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21620,
			"name": "AdminSalesChannelsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of sales channels with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21621,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21622,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of sales channels details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
												"qualifiedName": "SalesChannel"
											},
											"name": "SalesChannel",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21622
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21637,
			"name": "AdminGetSalesChannelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved sales channels."
					}
				]
			},
			"children": [
				{
					"id": 21641,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21642,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search sales channels' names and descriptions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21643,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21644,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21645,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21646,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21647,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21648,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().order"
					}
				},
				{
					"id": 21649,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().expand"
					}
				},
				{
					"id": 21650,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().fields"
					}
				},
				{
					"id": 21651,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().offset"
					}
				},
				{
					"id": 21652,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().limit"
					}
				},
				{
					"id": 21638,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21639,
							"name": "new AdminGetSalesChannelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21640,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21637,
								"name": "AdminGetSalesChannelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin().constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21638
					]
				},
				{
					"title": "Properties",
					"children": [
						21641,
						21642,
						21643,
						21644,
						21645,
						21646,
						21647,
						21648,
						21649,
						21650,
						21651,
						21652
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21663,
			"name": "AdminDeleteSalesChannelsChannelStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21664,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21665,
							"name": "new AdminDeleteSalesChannelsChannelStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21663,
								"name": "AdminDeleteSalesChannelsChannelStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21666,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21664
					]
				},
				{
					"title": "Properties",
					"children": [
						21666
					]
				}
			]
		},
		{
			"id": 21653,
			"name": "AdminPostSalesChannelsSalesChannelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 21654,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21655,
							"name": "new AdminPostSalesChannelsSalesChannelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21653,
								"name": "AdminPostSalesChannelsSalesChannelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21656,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21657,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21658,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Sales Channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21654
					]
				},
				{
					"title": "Properties",
					"children": [
						21656,
						21657,
						21658
					]
				}
			]
		},
		{
			"id": 23513,
			"name": "OptionRequirement",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23514,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23515,
							"name": "new OptionRequirement",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23513,
								"name": "OptionRequirement",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23516,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the requirement"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
							"qualifiedName": "RequirementType"
						},
						"name": "RequirementType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23517,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to compare with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23514
					]
				},
				{
					"title": "Properties",
					"children": [
						23516,
						23517
					]
				}
			]
		},
		{
			"id": 21676,
			"name": "AdminPostShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping option to create."
					}
				]
			},
			"children": [
				{
					"id": 21677,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21678,
							"name": "new AdminPostShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping option to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21676,
								"name": "AdminPostShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21679,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21680,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Shipping Option will be available."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21681,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment Provider that handles the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21682,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Profile to add the Shipping Option to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21683,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data needed for the Fulfillment Provider to handle shipping with this Shipping Option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21684,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Option price. `flat_rate` indicates fixed pricing, whereas `calculated` indicates that the price will be calculated each time by the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOptionPriceType"
						},
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21685,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Shipping Option. If the `price_type` is set to `calculated`, this amount will not actually be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21686,
					"name": "requirements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requirements that must be satisfied for the Shipping Option to be available."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23513,
							"name": "OptionRequirement",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21687,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the shipping option can only be used when creating draft orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 21688,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Shipping Option can be used for returns or during checkout."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 21689,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21690,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of shipping option"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21677
					]
				},
				{
					"title": "Properties",
					"children": [
						21679,
						21680,
						21681,
						21682,
						21683,
						21684,
						21685,
						21686,
						21687,
						21688,
						21689,
						21690
					]
				}
			]
		},
		{
			"id": 21667,
			"name": "shippingOptionsDefaultFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOption"
						},
						"name": "ShippingOption",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21668,
			"name": "shippingOptionsDefaultRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21669,
			"name": "AdminShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping options with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21670,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21671,
									"name": "shipping_options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of shipping options details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
												"qualifiedName": "ShippingOption"
											},
											"name": "ShippingOption",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21671
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21672,
			"name": "AdminShippingOptionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21673,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21674,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shipping option details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
									"qualifiedName": "ShippingOption"
								},
								"name": "ShippingOption",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21674
							]
						}
					]
				}
			}
		},
		{
			"id": 21675,
			"name": "AdminShippingOptionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21691,
			"name": "AdminGetShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter the retrieved shipping options."
					}
				]
			},
			"children": [
				{
					"id": 21695,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter shipping options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21696,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter shipping options by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21697,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21698,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the shipping option is used for returns or orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21699,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the shipping options are available for admin users only."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21700,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter shipping options by a search query."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21701,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 21702,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on shipping options' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21703,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on shipping options' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21704,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on shipping options' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21705,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 21706,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 21707,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 21708,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 21692,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21693,
							"name": "new AdminGetShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21694,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21691,
								"name": "AdminGetShippingOptionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21692
					]
				},
				{
					"title": "Properties",
					"children": [
						21695,
						21696,
						21697,
						21698,
						21699,
						21700,
						21701,
						21702,
						21703,
						21704,
						21705,
						21706,
						21707,
						21708
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 23518,
			"name": "OptionRequirement",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23519,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23520,
							"name": "new OptionRequirement",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23518,
								"name": "OptionRequirement",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23521,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing requirement. If an ID is passed, the existing requirement's details are updated. Otherwise, a new requirement is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23522,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the requirement"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23523,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to compare with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23519
					]
				},
				{
					"title": "Properties",
					"children": [
						23521,
						23522,
						23523
					]
				}
			]
		},
		{
			"id": 21709,
			"name": "AdminPostShippingOptionsOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the shipping option."
					}
				]
			},
			"children": [
				{
					"id": 21710,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21711,
							"name": "new AdminPostShippingOptionsOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the shipping option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21709,
								"name": "AdminPostShippingOptionsOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21712,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21713,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Shipping Option. If the `price_type` of the shipping option is `calculated`, this amount will not actually be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21714,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOptionPriceType"
						},
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21715,
					"name": "requirements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requirements that must be satisfied for the Shipping Option to be available."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23518,
							"name": "OptionRequirement",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21716,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the shipping option can only be used when creating draft orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21717,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21718,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of shipping option"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21710
					]
				},
				{
					"title": "Properties",
					"children": [
						21712,
						21713,
						21714,
						21715,
						21716,
						21717,
						21718
					]
				}
			]
		},
		{
			"id": 21728,
			"name": "AdminPostShippingProfilesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping profile to create."
					}
				]
			},
			"children": [
				{
					"id": 21729,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21730,
							"name": "new AdminPostShippingProfilesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping profile to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21728,
								"name": "AdminPostShippingProfilesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21731,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21732,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfileType"
						},
						"name": "ShippingProfileType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21733,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21729
					]
				},
				{
					"title": "Properties",
					"children": [
						21731,
						21732,
						21733
					]
				}
			]
		},
		{
			"id": 21719,
			"name": "defaultAdminShippingProfilesFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfile"
						},
						"name": "ShippingProfile",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21720,
			"name": "defaultAdminShippingProfilesRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21721,
			"name": "AdminDeleteShippingProfileRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21722,
			"name": "AdminShippingProfilesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping profile's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21723,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21724,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shipping profile details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
									"qualifiedName": "ShippingProfile"
								},
								"name": "ShippingProfile",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21724
							]
						}
					]
				}
			}
		},
		{
			"id": 21725,
			"name": "AdminShippingProfilesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping profiles."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21726,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21727,
							"name": "shipping_profiles",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping profiles details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
										"qualifiedName": "ShippingProfile"
									},
									"name": "ShippingProfile",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21727
							]
						}
					]
				}
			}
		},
		{
			"id": 21734,
			"name": "AdminPostShippingProfilesProfileReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The detail to update of the shipping profile."
					}
				]
			},
			"children": [
				{
					"id": 21735,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21736,
							"name": "new AdminPostShippingProfilesProfileReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The detail to update of the shipping profile."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21734,
								"name": "AdminPostShippingProfilesProfileReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21737,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21738,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21739,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfileType"
						},
						"name": "ShippingProfileType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21740,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "product IDs to associate with the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21741,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Shipping option IDs to associate with the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21735
					]
				},
				{
					"title": "Properties",
					"children": [
						21737,
						21738,
						21739,
						21740,
						21741
					]
				}
			]
		},
		{
			"id": 23544,
			"name": "StockLocationAddress",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23545,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23546,
							"name": "new StockLocationAddress",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23544,
								"name": "StockLocationAddress",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23547,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23548,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' complement"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23549,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23550,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' city"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23551,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The two character ISO code for the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23552,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' phone number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23553,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' postal code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23554,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23545
					]
				},
				{
					"title": "Properties",
					"children": [
						23547,
						23548,
						23549,
						23550,
						23551,
						23552,
						23553,
						23554
					]
				}
			]
		},
		{
			"id": 21751,
			"name": "AdminPostStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the stock location to create."
					}
				]
			},
			"children": [
				{
					"id": 21752,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21753,
							"name": "new AdminPostStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the stock location to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21751,
								"name": "AdminPostStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21754,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the name of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21755,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A new stock location address to create and associate with the stock location. Only required if `address_id` is not provided."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23544,
						"name": "StockLocationAddress",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21756,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the ID of an existing stock location address to associate with the stock location. Only required if `address` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21757,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21752
					]
				},
				{
					"title": "Properties",
					"children": [
						21754,
						21755,
						21756,
						21757
					]
				}
			]
		},
		{
			"id": 21758,
			"name": "AdminPostStockLocationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21759,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21760,
							"name": "new AdminPostStockLocationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21758,
								"name": "AdminPostStockLocationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21761,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21762,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21759
					]
				},
				{
					"title": "Properties",
					"children": [
						21761,
						21762
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21763,
			"name": "AdminGetStockLocationsLocationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21764,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21765,
							"name": "new AdminGetStockLocationsLocationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21763,
								"name": "AdminGetStockLocationsLocationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21766,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21767,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21764
					]
				},
				{
					"title": "Properties",
					"children": [
						21766,
						21767
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21742,
			"name": "defaultAdminStockLocationFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 23524,
						"name": "StockLocationTypes.StockLocationDTO",
						"package": "@medusajs/types",
						"qualifiedName": "StockLocationDTO"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21743,
			"name": "defaultAdminStockLocationRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 21744,
			"name": "AdminStockLocationsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 23535,
				"name": "DeleteResponse",
				"package": "@medusajs/types"
			}
		},
		{
			"id": 21745,
			"name": "AdminStockLocationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The stock location's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21746,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21747,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23541,
								"name": "StockLocationTypes.StockLocationExpandedDTO",
								"package": "@medusajs/types",
								"qualifiedName": "StockLocationExpandedDTO"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21747
							]
						}
					]
				}
			}
		},
		{
			"id": 21748,
			"name": "AdminStockLocationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of stock locations with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23229,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21749,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21750,
									"name": "stock_locations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of stock locations."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23541,
											"name": "StockLocationTypes.StockLocationExpandedDTO",
											"package": "@medusajs/types",
											"qualifiedName": "StockLocationExpandedDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21750
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21768,
			"name": "AdminGetStockLocationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved stock locations."
					}
				]
			},
			"children": [
				{
					"id": 21772,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search stock location names."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21773,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter stock locations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21774,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter stock locations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21775,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter stock locations by the ID of their associated addresses."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21776,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter stock locations by the ID of their associated sales channels."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21777,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 21778,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 21779,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 21780,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 21781,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 21769,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21770,
							"name": "new AdminGetStockLocationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21771,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21768,
								"name": "AdminGetStockLocationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21769
					]
				},
				{
					"title": "Properties",
					"children": [
						21772,
						21773,
						21774,
						21775,
						21776,
						21777,
						21778,
						21779,
						21780,
						21781
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 23555,
			"name": "StockLocationAddress",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes of a stock location address to create or update."
					}
				]
			},
			"children": [
				{
					"id": 23556,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23557,
							"name": "new StockLocationAddress",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23555,
								"name": "StockLocationAddress",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23558,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First line address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23559,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Second line address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23560,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23561,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23562,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Country code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23563,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23564,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23565,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23556
					]
				},
				{
					"title": "Properties",
					"children": [
						23558,
						23559,
						23560,
						23561,
						23562,
						23563,
						23564,
						23565
					]
				}
			]
		},
		{
			"id": 21782,
			"name": "AdminPostStockLocationsLocationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the stock location."
					}
				]
			},
			"children": [
				{
					"id": 21783,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21784,
							"name": "new AdminPostStockLocationsLocationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the stock location."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21782,
								"name": "AdminPostStockLocationsLocationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21785,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the name of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21786,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data of an associated address to create or update."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23555,
						"name": "StockLocationAddress",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21787,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the stock location address ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21788,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21783
					]
				},
				{
					"title": "Properties",
					"children": [
						21785,
						21786,
						21787,
						21788
					]
				}
			]
		},
		{
			"id": 21789,
			"name": "AdminPostStockLocationsLocationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21790,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21791,
							"name": "new AdminPostStockLocationsLocationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21789,
								"name": "AdminPostStockLocationsLocationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21792,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21793,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21790
					]
				},
				{
					"title": "Properties",
					"children": [
						21792,
						21793
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21794,
			"name": "defaultRelationsExtended",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21795,
			"name": "AdminExtendedStoresRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store's details with additional details like payment and tax providers."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21796,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21797,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Store details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23566,
								"name": "ExtendedStoreDTO",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21797
							]
						}
					]
				}
			}
		},
		{
			"id": 21798,
			"name": "AdminStoresRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21799,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21800,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Store details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/store.ts",
									"qualifiedName": "Store"
								},
								"name": "Store",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21800
							]
						}
					]
				}
			}
		},
		{
			"id": 21801,
			"name": "AdminTaxProvidersList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of tax providers in a store."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21802,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21803,
							"name": "tax_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of tax providers details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/tax-provider.ts",
										"qualifiedName": "TaxProvider"
									},
									"name": "TaxProvider",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21803
							]
						}
					]
				}
			}
		},
		{
			"id": 21804,
			"name": "AdminPaymentProvidersList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of payment providers in a store."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21805,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21806,
							"name": "payment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of payment providers details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
										"qualifiedName": "PaymentProvider"
									},
									"name": "PaymentProvider",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21806
							]
						}
					]
				}
			}
		},
		{
			"id": 21807,
			"name": "AdminPostStoreReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the store."
					}
				]
			},
			"children": [
				{
					"id": 21808,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21809,
							"name": "new AdminPostStoreReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the store."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21807,
								"name": "AdminPostStoreReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21810,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Store"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21811,
					"name": "swap_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for Swap links - use `{{cart_id}}` to insert the Swap Cart ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21812,
					"name": "payment_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for payment links - use `{{cart_id}}` to insert the Cart ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21813,
					"name": "invite_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for invite links - use `{{invite_token}}` to insert the invite token"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21814,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default currency code of the Store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21815,
					"name": "currencies",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Array of available currencies in the store. Each currency is in 3 character ISO code format."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21816,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21808
					]
				},
				{
					"title": "Properties",
					"children": [
						21810,
						21811,
						21812,
						21813,
						21814,
						21815,
						21816
					]
				}
			]
		},
		{
			"id": 21817,
			"name": "defaultAdminSwapRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21818,
			"name": "defaultAdminSwapFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21819,
			"name": "AdminSwapsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of swaps with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21820,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21821,
									"name": "swaps",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of swaps details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
												"qualifiedName": "Swap"
											},
											"name": "Swap",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21821
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21822,
			"name": "AdminSwapsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21823,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21824,
							"name": "swap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Swap details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
									"qualifiedName": "Swap"
								},
								"name": "Swap",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21824
							]
						}
					]
				}
			}
		},
		{
			"id": 21825,
			"name": "AdminGetSwapsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 21826,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21827,
							"name": "new AdminGetSwapsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21825,
								"name": "AdminGetSwapsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21828,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 21829,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21826
					]
				},
				{
					"title": "Properties",
					"children": [
						21828,
						21829
					]
				}
			]
		},
		{
			"id": 21887,
			"name": "AdminPostTaxRatesTaxRateProductTypesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product types to add to the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 21888,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21889,
							"name": "new AdminPostTaxRatesTaxRateProductTypesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product types to add to the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21887,
								"name": "AdminPostTaxRatesTaxRateProductTypesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21890,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of products to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21888
					]
				},
				{
					"title": "Properties",
					"children": [
						21890
					]
				}
			]
		},
		{
			"id": 21891,
			"name": "AdminPostTaxRatesTaxRateProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21892,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21893,
							"name": "new AdminPostTaxRatesTaxRateProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21891,
								"name": "AdminPostTaxRatesTaxRateProductTypesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21894,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21895,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21892
					]
				},
				{
					"title": "Properties",
					"children": [
						21894,
						21895
					]
				}
			]
		},
		{
			"id": 21896,
			"name": "AdminPostTaxRatesTaxRateProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to associat with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 21897,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21898,
							"name": "new AdminPostTaxRatesTaxRateProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to associat with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21896,
								"name": "AdminPostTaxRatesTaxRateProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21899,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21897
					]
				},
				{
					"title": "Properties",
					"children": [
						21899
					]
				}
			]
		},
		{
			"id": 21900,
			"name": "AdminPostTaxRatesTaxRateProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21901,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21902,
							"name": "new AdminPostTaxRatesTaxRateProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21900,
								"name": "AdminPostTaxRatesTaxRateProductsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21903,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21904,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21901
					]
				},
				{
					"title": "Properties",
					"children": [
						21903,
						21904
					]
				}
			]
		},
		{
			"id": 21905,
			"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping options to associate with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 21906,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21907,
							"name": "new AdminPostTaxRatesTaxRateShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping options to associate with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21905,
								"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21908,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21906
					]
				},
				{
					"title": "Properties",
					"children": [
						21908
					]
				}
			]
		},
		{
			"id": 21909,
			"name": "AdminPostTaxRatesTaxRateShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21910,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21911,
							"name": "new AdminPostTaxRatesTaxRateShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21909,
								"name": "AdminPostTaxRatesTaxRateShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21912,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21913,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21910
					]
				},
				{
					"title": "Properties",
					"children": [
						21912,
						21913
					]
				}
			]
		},
		{
			"id": 21914,
			"name": "AdminPostTaxRatesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the tax rate to create."
					}
				]
			},
			"children": [
				{
					"id": 21915,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21916,
							"name": "new AdminPostTaxRatesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the tax rate to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21914,
								"name": "AdminPostTaxRatesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21917,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21918,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21919,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region that the tax rate belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21920,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 21921,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products associated with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21922,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21923,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of products associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21915
					]
				},
				{
					"title": "Properties",
					"children": [
						21917,
						21918,
						21919,
						21920,
						21921,
						21922,
						21923
					]
				}
			]
		},
		{
			"id": 21924,
			"name": "AdminPostTaxRatesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21925,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21926,
							"name": "new AdminPostTaxRatesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21924,
								"name": "AdminPostTaxRatesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21927,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21928,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21925
					]
				},
				{
					"title": "Properties",
					"children": [
						21927,
						21928
					]
				}
			]
		},
		{
			"id": 21855,
			"name": "AdminGetTaxRatesTaxRateParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21856,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21857,
							"name": "new AdminGetTaxRatesTaxRateParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21855,
								"name": "AdminGetTaxRatesTaxRateParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21858,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21859,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21856
					]
				},
				{
					"title": "Properties",
					"children": [
						21858,
						21859
					]
				}
			]
		},
		{
			"id": 21830,
			"name": "defaultAdminTaxRatesRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 21831,
			"name": "defaultAdminTaxRatesFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
							"qualifiedName": "TaxRate"
						},
						"name": "TaxRate",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21832,
			"name": "AdminTaxRatesDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21833,
			"name": "AdminTaxRatesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of tax rates with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21834,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21835,
									"name": "tax_rates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of tax rate details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
												"qualifiedName": "TaxRate"
											},
											"name": "TaxRate",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21835
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21836,
			"name": "AdminTaxRatesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21837,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21838,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tax rate details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
									"qualifiedName": "TaxRate"
								},
								"name": "TaxRate",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21838
							]
						}
					]
				}
			}
		},
		{
			"id": 21839,
			"name": "AdminGetTaxRatesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved tax rates."
					}
				]
			},
			"children": [
				{
					"id": 21840,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21841,
							"name": "new AdminGetTaxRatesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21839,
								"name": "AdminGetTaxRatesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21842,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter tax rates by the IDs of their associates region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21843,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter tax rates by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21844,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Code to filter tax rates by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21845,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to filter tax rates' "
							},
							{
								"kind": "code",
								"text": "`rate`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 21846,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 21847,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 21848,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21849,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21850,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21851,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the tax rates' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21852,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer tax rates' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21853,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the tax rates' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21854,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Term used to search tax rates by name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21840
					]
				},
				{
					"title": "Properties",
					"children": [
						21842,
						21843,
						21844,
						21845,
						21846,
						21847,
						21848,
						21849,
						21850,
						21851,
						21852,
						21853,
						21854
					]
				}
			]
		},
		{
			"id": 21860,
			"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Product types to remove from the tax rates."
					}
				]
			},
			"children": [
				{
					"id": 21861,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21862,
							"name": "new AdminDeleteTaxRatesTaxRateProductTypesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product types to remove from the tax rates."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21860,
								"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21863,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the product types to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21861
					]
				},
				{
					"title": "Properties",
					"children": [
						21863
					]
				}
			]
		},
		{
			"id": 21864,
			"name": "AdminDeleteTaxRatesTaxRateProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21865,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21866,
							"name": "new AdminDeleteTaxRatesTaxRateProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21864,
								"name": "AdminDeleteTaxRatesTaxRateProductTypesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21867,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21868,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21865
					]
				},
				{
					"title": "Properties",
					"children": [
						21867,
						21868
					]
				}
			]
		},
		{
			"id": 21869,
			"name": "AdminDeleteTaxRatesTaxRateProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to remove their associated with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 21870,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21871,
							"name": "new AdminDeleteTaxRatesTaxRateProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to remove their associated with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21869,
								"name": "AdminDeleteTaxRatesTaxRateProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21872,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21870
					]
				},
				{
					"title": "Properties",
					"children": [
						21872
					]
				}
			]
		},
		{
			"id": 21873,
			"name": "AdminDeleteTaxRatesTaxRateProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21874,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21875,
							"name": "new AdminDeleteTaxRatesTaxRateProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21873,
								"name": "AdminDeleteTaxRatesTaxRateProductsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21876,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21877,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21874
					]
				},
				{
					"title": "Properties",
					"children": [
						21876,
						21877
					]
				}
			]
		},
		{
			"id": 21878,
			"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping options to remove their associate with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 21879,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21880,
							"name": "new AdminDeleteTaxRatesTaxRateShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping options to remove their associate with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21878,
								"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21881,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21879
					]
				},
				{
					"title": "Properties",
					"children": [
						21881
					]
				}
			]
		},
		{
			"id": 21882,
			"name": "AdminDeleteTaxRatesTaxRateShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21883,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21884,
							"name": "new AdminDeleteTaxRatesTaxRateShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21882,
								"name": "AdminDeleteTaxRatesTaxRateShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21885,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21886,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21883
					]
				},
				{
					"title": "Properties",
					"children": [
						21885,
						21886
					]
				}
			]
		},
		{
			"id": 21929,
			"name": "AdminPostTaxRatesTaxRateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 21930,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21931,
							"name": "new AdminPostTaxRatesTaxRateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21929,
								"name": "AdminPostTaxRatesTaxRateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21932,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21933,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21934,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region that the tax rate belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21935,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 21936,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21937,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21938,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of product types associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21930
					]
				},
				{
					"title": "Properties",
					"children": [
						21932,
						21933,
						21934,
						21935,
						21936,
						21937,
						21938
					]
				}
			]
		},
		{
			"id": 21939,
			"name": "AdminPostTaxRatesTaxRateParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 21940,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21941,
							"name": "new AdminPostTaxRatesTaxRateParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21939,
								"name": "AdminPostTaxRatesTaxRateParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21942,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21943,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21940
					]
				},
				{
					"title": "Properties",
					"children": [
						21942,
						21943
					]
				}
			]
		},
		{
			"id": 21951,
			"name": "IAdminPostUploadsFileReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21952,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21953,
							"name": "new IAdminPostUploadsFileReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21951,
								"name": "IAdminPostUploadsFileReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21954,
					"name": "originalName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21955,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21952
					]
				},
				{
					"title": "Properties",
					"children": [
						21954,
						21955
					]
				}
			]
		},
		{
			"id": 21956,
			"name": "AdminDeleteUploadsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to delete."
					}
				]
			},
			"children": [
				{
					"id": 21957,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21958,
							"name": "new AdminDeleteUploadsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the file to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21956,
								"name": "AdminDeleteUploadsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21959,
					"name": "file_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "key of the file to delete. This is obtained when you first uploaded the file, or by the file service if you used it directly."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21957
					]
				},
				{
					"title": "Properties",
					"children": [
						21959
					]
				}
			]
		},
		{
			"id": 21960,
			"name": "AdminPostUploadsDownloadUrlReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to retrieve its download URL."
					}
				]
			},
			"children": [
				{
					"id": 21961,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21962,
							"name": "new AdminPostUploadsDownloadUrlReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the file to retrieve its download URL."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21960,
								"name": "AdminPostUploadsDownloadUrlReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21963,
					"name": "file_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "key of the file to obtain the download link for. This is obtained when you first uploaded the file, or by the file service if you used it directly."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21961
					]
				},
				{
					"title": "Properties",
					"children": [
						21963
					]
				}
			]
		},
		{
			"id": 21944,
			"name": "AdminUploadsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of uploaded files."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21945,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21946,
							"name": "uploads",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Uploaded files details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23572,
									"name": "FileServiceUploadResult",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21946
							]
						}
					]
				}
			}
		},
		{
			"id": 21947,
			"name": "AdminDeleteUploadsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21948,
			"name": "AdminUploadsDownloadUrlRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The download URL details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21949,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21950,
							"name": "download_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Download URL of the file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21950
							]
						}
					]
				}
			}
		},
		{
			"id": 21990,
			"name": "AdminCreateUserRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21991,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21992,
							"name": "new AdminCreateUserRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21990,
								"name": "AdminCreateUserRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21993,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21994,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21995,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21996,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role assigned to the user. These roles don't provide any different privileges."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21997,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21991
					]
				},
				{
					"title": "Properties",
					"children": [
						21993,
						21994,
						21995,
						21996,
						21997
					]
				}
			]
		},
		{
			"id": 21964,
			"name": "unauthenticatedUserRoutes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 21965,
					"name": "unauthenticatedUserRoutes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 21966,
							"name": "app",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 21967,
			"name": "defaultAdminUserFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "User"
						},
						"name": "User",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 21968,
			"name": "AdminUserRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21969,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21970,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "User details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21970
							]
						}
					]
				}
			}
		},
		{
			"id": 21971,
			"name": "AdminUsersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of users."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23229,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21972,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21973,
									"name": "users",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of users details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/user.ts",
														"qualifiedName": "User"
													},
													"name": "User",
													"package": "@medusajs/medusa"
												},
												{
													"type": "literal",
													"value": "password_hash"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21973
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21974,
			"name": "AdminDeleteUserRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 22817,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 21998,
			"name": "AdminGetUsersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved users."
					}
				]
			},
			"children": [
				{
					"id": 22002,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter users by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22003,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search users' first name, last name, and email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22004,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 22005,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22006,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer users' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22007,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22008,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`email`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22009,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`first_name`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22010,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`last_name`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22011,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`role`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23575,
						"name": "UserRole",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22012,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned users."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 22013,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 22014,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 22015,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 21999,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22000,
							"name": "new AdminGetUsersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 22001,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21998,
								"name": "AdminGetUsersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21999
					]
				},
				{
					"title": "Properties",
					"children": [
						22002,
						22003,
						22004,
						22005,
						22006,
						22007,
						22008,
						22009,
						22010,
						22011,
						22012,
						22013,
						22014,
						22015
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21986,
			"name": "AdminResetPasswordTokenRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the password reset token request."
					}
				]
			},
			"children": [
				{
					"id": 21987,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21988,
							"name": "new AdminResetPasswordTokenRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the password reset token request."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21986,
								"name": "AdminResetPasswordTokenRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21989,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21987
					]
				},
				{
					"title": "Properties",
					"children": [
						21989
					]
				}
			]
		},
		{
			"id": 21975,
			"name": "payload",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21976,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21977,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21978,
							"name": "user_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21979,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21977,
								21978,
								21979
							]
						}
					]
				}
			}
		},
		{
			"id": 21980,
			"name": "AdminResetPasswordRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the password reset request."
					}
				]
			},
			"children": [
				{
					"id": 21981,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21982,
							"name": "new AdminResetPasswordRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the password reset request."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21980,
								"name": "AdminResetPasswordRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21983,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21984,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The password-reset token generated when the password reset was requested."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21985,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's new password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21981
					]
				},
				{
					"title": "Properties",
					"children": [
						21983,
						21984,
						21985
					]
				}
			]
		},
		{
			"id": 22016,
			"name": "AdminUpdateUserRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22017,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22018,
							"name": "new AdminUpdateUserRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22016,
								"name": "AdminUpdateUserRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22019,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22020,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22021,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role assigned to the user. These roles don't provide any different privileges."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22022,
					"name": "api_token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The API token of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22023,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22017
					]
				},
				{
					"title": "Properties",
					"children": [
						22019,
						22020,
						22021,
						22022,
						22023
					]
				}
			]
		},
		{
			"id": 22055,
			"name": "LevelWithAvailability",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23217,
						"name": "InventoryLevelDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22056,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22057,
									"name": "available_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22057
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22058,
			"name": "ResponseInventoryItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 23197,
								"name": "InventoryItemDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22059,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22060,
									"name": "location_levels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory's location levels."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 22055,
											"name": "LevelWithAvailability",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22060
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22061,
			"name": "VariantInventory",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22062,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22063,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the ID of the variant"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 22064,
							"name": "inventory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 22058,
									"name": "ResponseInventoryItem",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 22065,
							"name": "sales_channel_availability",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Details about the variant's inventory availability in sales channels."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 22066,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 22067,
												"name": "channel_name",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Sales channel's name"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 22068,
												"name": "channel_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Sales channel's ID"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 22069,
												"name": "available_quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Available quantity in the sales channel"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													22067,
													22068,
													22069
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22063,
								22064,
								22065
							]
						}
					]
				}
			}
		},
		{
			"id": 22070,
			"name": "AdminGetVariantsVariantInventoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The variant's inventory details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22071,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22072,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product variant's inventory details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22061,
								"name": "VariantInventory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22072
							]
						}
					]
				}
			}
		},
		{
			"id": 22050,
			"name": "AdminGetVariantParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 22051,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22052,
							"name": "new AdminGetVariantParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22050,
								"name": "AdminGetVariantParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 22053,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 22054,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22051
					]
				},
				{
					"title": "Properties",
					"children": [
						22053,
						22054
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22024,
			"name": "defaultAdminVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22025,
			"name": "defaultAdminVariantFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
							"qualifiedName": "ProductVariant"
						},
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22026,
			"name": "AdminVariantsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of variants with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22027,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22028,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variant details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23579,
											"name": "PricedVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22028
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22029,
			"name": "AdminVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product variant's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22030,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22031,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product variant's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23579,
								"name": "PricedVariant",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22031
							]
						}
					]
				}
			}
		},
		{
			"id": 22032,
			"name": "AdminGetVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 22033,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22034,
							"name": "new AdminGetVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22032,
								"name": "AdminGetVariantsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23582,
								"name": "AdminPriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23581,
						"name": "AdminPriceSelectionParams.constructor"
					}
				},
				{
					"id": 22035,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product variants' IDs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22036,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20"
				},
				{
					"id": 22037,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 22038,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 23587,
						"name": "AdminPriceSelectionParams.expand"
					}
				},
				{
					"id": 22039,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 23588,
						"name": "AdminPriceSelectionParams.fields"
					}
				},
				{
					"id": 22040,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22041,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Titles to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22042,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22043,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22044,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether their inventory is managed or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 22045,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether they are allowed to be backordered or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 22047,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23584,
						"name": "AdminPriceSelectionParams.cart_id"
					}
				},
				{
					"id": 22048,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23585,
						"name": "AdminPriceSelectionParams.region_id"
					}
				},
				{
					"id": 22049,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23586,
						"name": "AdminPriceSelectionParams.currency_code"
					}
				},
				{
					"id": 22046,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a customer ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23583,
						"name": "AdminPriceSelectionParams.customer_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22033
					]
				},
				{
					"title": "Properties",
					"children": [
						22035,
						22036,
						22037,
						22038,
						22039,
						22040,
						22041,
						22042,
						22043,
						22044,
						22045,
						22047,
						22048,
						22049,
						22046
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23580,
					"name": "AdminPriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22073,
			"name": "defaultAdminWorkflowExecutionsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 22074,
			"name": "allowedAdminWorkflowExecutionsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 22075,
			"name": "defaultAdminWorkflowExecutionsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22076,
			"name": "defaultAdminWorkflowExecutionDetailFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22077,
			"name": "AdminGetWorkflowExecutionDetailsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 22078,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22079,
							"name": "new AdminGetWorkflowExecutionDetailsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22077,
								"name": "AdminGetWorkflowExecutionDetailsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 22080,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 22081,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22078
					]
				},
				{
					"title": "Properties",
					"children": [
						22080,
						22081
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22082,
			"name": "AdminGetWorkflowExecutionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22086,
					"name": "transaction_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "transaction id(s) to filter workflow executions by transaction_id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22087,
					"name": "workflow_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "workflow id(s) to filter workflow executions by workflow_id"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22088,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 22089,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 22090,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 22091,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 22092,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 22083,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22084,
							"name": "new AdminGetWorkflowExecutionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 22085,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 22082,
								"name": "AdminGetWorkflowExecutionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22083
					]
				},
				{
					"title": "Properties",
					"children": [
						22086,
						22087,
						22088,
						22089,
						22090,
						22091,
						22092
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 22093,
			"name": "AdminPostWorkflowsRunReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22094,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22095,
							"name": "new AdminPostWorkflowsRunReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22093,
								"name": "AdminPostWorkflowsRunReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22096,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 22097,
					"name": "transaction_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22094
					]
				},
				{
					"title": "Properties",
					"children": [
						22096,
						22097
					]
				}
			]
		},
		{
			"id": 22098,
			"name": "AdminPostWorkflowsAsyncResponseReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22099,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22100,
							"name": "new AdminPostWorkflowsAsyncResponseReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22098,
								"name": "AdminPostWorkflowsAsyncResponseReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22101,
					"name": "transaction_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22102,
					"name": "step_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22103,
					"name": "response",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 22104,
					"name": "compensate_input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 22105,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 23589,
						"name": "TransactionHandlerType",
						"package": "@medusajs/utils"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22099
					]
				},
				{
					"title": "Properties",
					"children": [
						22101,
						22102,
						22103,
						22104,
						22105
					]
				}
			]
		},
		{
			"id": 22115,
			"name": "StorePostAuthReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22116,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22117,
							"name": "new StorePostAuthReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22115,
								"name": "StorePostAuthReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22118,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22119,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22116
					]
				},
				{
					"title": "Properties",
					"children": [
						22118,
						22119
					]
				}
			]
		},
		{
			"id": 22106,
			"name": "StoreAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22107,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22108,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22108
							]
						}
					]
				}
			}
		},
		{
			"id": 22109,
			"name": "StoreBearerAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The access token details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22110,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22111,
							"name": "access_token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access token that can be used to send authenticated requests."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22111
							]
						}
					]
				}
			}
		},
		{
			"id": 22112,
			"name": "StoreGetAuthEmailRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details on whether the email exists."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22113,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22114,
							"name": "exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether email exists or not."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22114
							]
						}
					]
				}
			}
		},
		{
			"id": 22135,
			"name": "StorePostCartsCartShippingMethodReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping method to add to the cart."
					}
				]
			},
			"children": [
				{
					"id": 22136,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22137,
							"name": "new StorePostCartsCartShippingMethodReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping method to add to the cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22135,
								"name": "StorePostCartsCartShippingMethodReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22138,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the shipping option to create the method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22139,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to hold any data that the shipping method may need to process the fulfillment of the order. This depends on the fulfillment provider you're using."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22136
					]
				},
				{
					"title": "Properties",
					"children": [
						22138,
						22139
					]
				}
			]
		},
		{
			"id": 22140,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22141,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22142,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22140,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22143,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22144,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to add into the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22141
					]
				},
				{
					"title": "Properties",
					"children": [
						22143,
						22144
					]
				}
			]
		},
		{
			"id": 22145,
			"name": "StorePostCartReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the cart to be created."
					}
				]
			},
			"children": [
				{
					"id": 22146,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22147,
							"name": "new StorePostCartReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the cart to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22145,
								"name": "StorePostCartReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22148,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Cart in. Setting the cart's region can affect the pricing of the items in the cart as well as the used currency. If this parameter is not provided, the first region in the store is used by default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22149,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The two character ISO country code to create the Cart in. Setting this parameter will set the country code of the shipping address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22150,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variants to generate line items from."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22140,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22151,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object to provide context to the Cart. The `context` field is automatically populated with `ip` and `user_agent`"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 22152,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Sales channel to create the Cart in. The cart's sales channel affects which products can be added to the cart. If a product does not exist in the cart's sales channel, it cannot be added to the cart. If you add a publishable API key in the header of this request and specify a sales channel ID, the specified sales channel must be within the scope of the publishable API key's resources. If you add a publishable API key in the header of this request, you don't specify a sales channel ID, and the publishable API key is associated with one sales channel, that sales channel will be attached to the cart. If no sales channel is passed and no publishable API key header is passed or the publishable API key isn't associated with any sales channel, the cart will not be associated with any sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22146
					]
				},
				{
					"title": "Properties",
					"children": [
						22148,
						22149,
						22150,
						22151,
						22152
					]
				}
			]
		},
		{
			"id": 22153,
			"name": "StorePostCartsCartLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item to create."
					}
				]
			},
			"children": [
				{
					"id": 22154,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22155,
							"name": "new StorePostCartsCartLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22153,
								"name": "StorePostCartsCartLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22156,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the Product Variant to generate the Line Item from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22157,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant to add to the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22158,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22154
					]
				},
				{
					"title": "Properties",
					"children": [
						22156,
						22157,
						22158
					]
				}
			]
		},
		{
			"id": 22120,
			"name": "defaultStoreCartFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
							"qualifiedName": "Cart"
						},
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 22121,
			"name": "defaultStoreCartRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22122,
			"name": "StoreCartsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22123,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22124,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cart details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "refundable_amount"
											},
											{
												"type": "literal",
												"value": "refunded_total"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22124
							]
						}
					]
				}
			}
		},
		{
			"id": 22125,
			"name": "StoreCompleteCartRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "If the cart is completed successfully, this will have the created order or the swap's details, based on the cart's type. Otherwise, it'll be the cart's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 22126,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22127,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "cart"
									}
								},
								{
									"id": 22128,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A cart represents a virtual shopping bag. It can be used to complete an order, a swap, or a claim."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22127,
										22128
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22129,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22130,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "order"
									}
								},
								{
									"id": 22131,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order.ts",
											"qualifiedName": "Order"
										},
										"name": "Order",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22130,
										22131
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22132,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22133,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "swap"
									}
								},
								{
									"id": 22134,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A swap can be created when a Customer wishes to exchange Products that they have purchased with different Products. It consists of a Return of previously purchased Products and a Fulfillment of new Products. It also includes information on any additional payment or refund required based on the difference between the exchanged products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
											"qualifiedName": "Swap"
										},
										"name": "Swap",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22133,
										22134
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22159,
			"name": "StorePostCartsCartPaymentSessionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to set."
					}
				]
			},
			"children": [
				{
					"id": 22160,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22161,
							"name": "new StorePostCartsCartPaymentSessionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment session to set."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22159,
								"name": "StorePostCartsCartPaymentSessionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22162,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22160
					]
				},
				{
					"title": "Properties",
					"children": [
						22162
					]
				}
			]
		},
		{
			"id": 23592,
			"name": "GiftCard",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
					}
				]
			},
			"children": [
				{
					"id": 23593,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23594,
							"name": "new GiftCard",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23592,
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23595,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23593
					]
				},
				{
					"title": "Properties",
					"children": [
						23595
					]
				}
			]
		},
		{
			"id": 23596,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 23597,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23598,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23596,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23599,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the discount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23597
					]
				},
				{
					"title": "Properties",
					"children": [
						23599
					]
				}
			]
		},
		{
			"id": 22163,
			"name": "StorePostCartsCartReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the cart."
					}
				]
			},
			"children": [
				{
					"id": 22164,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22165,
							"name": "new StorePostCartsCartReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22163,
								"name": "StorePostCartsCartReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22166,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Cart in. Setting the cart's region can affect the pricing of the items in the cart as well as the used currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22167,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO country code to create the Cart in. Setting this parameter will set the country code of the shipping address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22168,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An email to be used on the Cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22169,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22170,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22171,
					"name": "gift_cards",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Gift Card codes to add to the Cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23592,
							"name": "GiftCard",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22172,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Discount codes to add to the Cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23596,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22173,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Customer to associate the Cart with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22174,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object to provide context to the Cart. The `context` field is automatically populated with `ip` and `user_agent`"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 22175,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Sales channel to create the Cart in. The cart's sales channel affects which products can be added to the cart. If a product does not exist in the cart's sales channel, it cannot be added to the cart. If you add a publishable API key in the header of this request and specify a sales channel ID, the specified sales channel must be within the scope of the publishable API key's resources."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22164
					]
				},
				{
					"title": "Properties",
					"children": [
						22166,
						22167,
						22168,
						22169,
						22170,
						22171,
						22172,
						22173,
						22174,
						22175
					]
				}
			]
		},
		{
			"id": 22176,
			"name": "StorePostCartsCartLineItemsItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"children": [
				{
					"id": 22177,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22178,
							"name": "new StorePostCartsCartLineItemsItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22176,
								"name": "StorePostCartsCartLineItemsItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22179,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22180,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details about the Line Item. If omitted, the metadata will remain unchanged.\""
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22177
					]
				},
				{
					"title": "Properties",
					"children": [
						22179,
						22180
					]
				}
			]
		},
		{
			"id": 22181,
			"name": "StorePostCartsCartPaymentSessionUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22182,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22183,
							"name": "new StorePostCartsCartPaymentSessionUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22181,
								"name": "StorePostCartsCartPaymentSessionUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22184,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to update the payment session with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22182
					]
				},
				{
					"title": "Properties",
					"children": [
						22184
					]
				}
			]
		},
		{
			"id": 22185,
			"name": "defaultStoreCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 22186,
			"name": "allowedFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22187,
			"name": "StoreCollectionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product collections with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22188,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22189,
									"name": "collections",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product collections details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
												"qualifiedName": "ProductCollection"
											},
											"name": "ProductCollection",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22189
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22190,
			"name": "StoreCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product collection."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22191,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22192,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
									"qualifiedName": "ProductCollection"
								},
								"name": "ProductCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22192
							]
						}
					]
				}
			}
		},
		{
			"id": 22193,
			"name": "StoreGetCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 22194,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22195,
							"name": "new StoreGetCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22193,
								"name": "StoreGetCollectionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22196,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles to filter product collections by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22197,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 22198,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 22199,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22200,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22194
					]
				},
				{
					"title": "Properties",
					"children": [
						22196,
						22197,
						22198,
						22199,
						22200
					]
				}
			]
		},
		{
			"id": 22220,
			"name": "StorePostCustomersCustomerAddressesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22221,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22222,
							"name": "new StorePostCustomersCustomerAddressesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22220,
								"name": "StorePostCustomersCustomerAddressesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22223,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to add to the Customer's saved addresses."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22862,
						"name": "AddressCreatePayload",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22221
					]
				},
				{
					"title": "Properties",
					"children": [
						22223
					]
				}
			]
		},
		{
			"id": 22224,
			"name": "StorePostCustomersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to create."
					}
				]
			},
			"children": [
				{
					"id": 22225,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22226,
							"name": "new StorePostCustomersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22224,
								"name": "StorePostCustomersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22227,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22228,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22229,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22230,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22231,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22225
					]
				},
				{
					"title": "Properties",
					"children": [
						22227,
						22228,
						22229,
						22230,
						22231
					]
				}
			]
		},
		{
			"id": 22201,
			"name": "defaultStoreCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22202,
			"name": "defaultStoreCustomersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
							"qualifiedName": "Customer"
						},
						"name": "Customer",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22203,
			"name": "allowedStoreCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22204,
			"name": "allowedStoreCustomersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22205,
			"name": "StoreCustomersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22206,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22207,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22207
							]
						}
					]
				}
			}
		},
		{
			"id": 22208,
			"name": "StoreCustomersResetPasswordRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22209,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22210,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22210
							]
						}
					]
				}
			}
		},
		{
			"id": 22211,
			"name": "StoreCustomersListOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of the customer's orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22212,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22213,
									"name": "orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of orders details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order.ts",
												"qualifiedName": "Order"
											},
											"name": "Order",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22213
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22214,
			"name": "StoreCustomersListPaymentMethodsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment method's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22215,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22216,
							"name": "payment_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the saved payment methods."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 22217,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 22218,
												"name": "provider_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the Payment Provider where the payment method is saved."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 22219,
												"name": "data",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The data needed for the Payment Provider to use the saved payment method."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													22218,
													22219
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22216
							]
						}
					]
				}
			}
		},
		{
			"id": 22232,
			"name": "StoreGetCustomersCustomerOrdersPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 22233,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22234,
							"name": "new StoreGetCustomersCustomerOrdersPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22232,
								"name": "StoreGetCustomersCustomerOrdersPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22235,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 22236,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 22237,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22238,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22233
					]
				},
				{
					"title": "Properties",
					"children": [
						22235,
						22236,
						22237,
						22238
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 22239,
					"name": "StoreGetCustomersCustomerOrdersParams"
				}
			]
		},
		{
			"id": 22239,
			"name": "StoreGetCustomersCustomerOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 22240,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22241,
							"name": "new StoreGetCustomersCustomerOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22239,
								"name": "StoreGetCustomersCustomerOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22234,
								"name": "StoreGetCustomersCustomerOrdersPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22233,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.constructor"
					}
				},
				{
					"id": 22256,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 22235,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
					}
				},
				{
					"id": 22257,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 22236,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
					}
				},
				{
					"id": 22258,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22237,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
					}
				},
				{
					"id": 22259,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22238,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
					}
				},
				{
					"id": 22242,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22243,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' display ID, email, shipping address's first name, customer's first name, customer's last name, and customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22244,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "OrderStatus"
							},
							"name": "OrderStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22245,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "FulfillmentStatus"
							},
							"name": "FulfillmentStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22246,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "PaymentStatus"
							},
							"name": "PaymentStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22247,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22248,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22249,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22250,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Region ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22251,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22252,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22253,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22254,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22255,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22240
					]
				},
				{
					"title": "Properties",
					"children": [
						22256,
						22257,
						22258,
						22259,
						22242,
						22243,
						22244,
						22245,
						22246,
						22247,
						22248,
						22249,
						22250,
						22251,
						22252,
						22253,
						22254,
						22255
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22232,
					"name": "StoreGetCustomersCustomerOrdersPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22266,
			"name": "StorePostCustomersCustomerPasswordTokenReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22267,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22268,
							"name": "new StorePostCustomersCustomerPasswordTokenReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22266,
								"name": "StorePostCustomersCustomerPasswordTokenReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22269,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22267
					]
				},
				{
					"title": "Properties",
					"children": [
						22269
					]
				}
			]
		},
		{
			"id": 22260,
			"name": "StorePostCustomersResetPasswordReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22261,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22262,
							"name": "new StorePostCustomersResetPasswordReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22260,
								"name": "StorePostCustomersResetPasswordReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22263,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22264,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reset password token"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22265,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22261
					]
				},
				{
					"title": "Properties",
					"children": [
						22263,
						22264,
						22265
					]
				}
			]
		},
		{
			"id": 22270,
			"name": "StorePostCustomersCustomerAddressesAddressReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22271,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22272,
							"name": "new StorePostCustomersCustomerAddressesAddressReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22270,
								"name": "StorePostCustomersCustomerAddressesAddressReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22850,
								"name": "AddressPayload.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22849,
						"name": "AddressPayload.constructor"
					}
				},
				{
					"id": 22273,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22851,
						"name": "AddressPayload.first_name"
					}
				},
				{
					"id": 22274,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22852,
						"name": "AddressPayload.last_name"
					}
				},
				{
					"id": 22275,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22853,
						"name": "AddressPayload.phone"
					}
				},
				{
					"id": 22276,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22854,
						"name": "AddressPayload.metadata"
					}
				},
				{
					"id": 22277,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22855,
						"name": "AddressPayload.company"
					}
				},
				{
					"id": 22278,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22856,
						"name": "AddressPayload.address_1"
					}
				},
				{
					"id": 22279,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22857,
						"name": "AddressPayload.address_2"
					}
				},
				{
					"id": 22280,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22858,
						"name": "AddressPayload.city"
					}
				},
				{
					"id": 22281,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22859,
						"name": "AddressPayload.country_code"
					}
				},
				{
					"id": 22282,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22860,
						"name": "AddressPayload.province"
					}
				},
				{
					"id": 22283,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22861,
						"name": "AddressPayload.postal_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22271
					]
				},
				{
					"title": "Properties",
					"children": [
						22273,
						22274,
						22275,
						22276,
						22277,
						22278,
						22279,
						22280,
						22281,
						22282,
						22283
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22848,
					"name": "AddressPayload",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22284,
			"name": "StorePostCustomersCustomerReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the customer."
					}
				]
			},
			"children": [
				{
					"id": 22285,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22286,
							"name": "new StorePostCustomersCustomerReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the customer."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22284,
								"name": "StorePostCustomersCustomerReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22287,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22288,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22289,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22290,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22291,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22292,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22293,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional custom data about the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22285
					]
				},
				{
					"title": "Properties",
					"children": [
						22287,
						22288,
						22289,
						22290,
						22291,
						22292,
						22293
					]
				}
			]
		},
		{
			"id": 22294,
			"name": "defaultStoreGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22295,
			"name": "defaultStoreGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
							"qualifiedName": "GiftCard"
						},
						"name": "GiftCard",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22296,
			"name": "allowedStoreGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22297,
			"name": "allowedStoreGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22298,
			"name": "StoreGiftCardsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The gift card's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22299,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22300,
							"name": "gift_card",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift card details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
									"qualifiedName": "GiftCard"
								},
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22300
							]
						}
					]
				}
			}
		},
		{
			"id": 22304,
			"name": "StorePostOrderEditsOrderEditDecline",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order edit's decline."
					}
				]
			},
			"children": [
				{
					"id": 22305,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22306,
							"name": "new StorePostOrderEditsOrderEditDecline",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order edit's decline."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22304,
								"name": "StorePostOrderEditsOrderEditDecline",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22307,
					"name": "declined_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for declining the Order Edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22305
					]
				},
				{
					"title": "Properties",
					"children": [
						22307
					]
				}
			]
		},
		{
			"id": 22301,
			"name": "StoreOrderEditsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order edit's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22302,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22303,
							"name": "order_edit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order edit details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
											"qualifiedName": "OrderEdit"
										},
										"name": "OrderEdit",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "internal_note"
											},
											{
												"type": "literal",
												"value": "created_by"
											},
											{
												"type": "literal",
												"value": "confirmed_by"
											},
											{
												"type": "literal",
												"value": "canceled_by"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22303
							]
						}
					]
				}
			}
		},
		{
			"id": 22315,
			"name": "StorePostCustomersCustomerAcceptClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details necessary to grant order access."
					}
				]
			},
			"children": [
				{
					"id": 22316,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22317,
							"name": "new StorePostCustomersCustomerAcceptClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details necessary to grant order access."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22315,
								"name": "StorePostCustomersCustomerAcceptClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22318,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim token generated by previous request to the Claim Order API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22316
					]
				},
				{
					"title": "Properties",
					"children": [
						22318
					]
				}
			]
		},
		{
			"id": 22308,
			"name": "defaultStoreOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22309,
			"name": "allowedStoreOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22310,
			"name": "defaultStoreOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/order.ts",
							"qualifiedName": "Order"
						},
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22311,
			"name": "allowedStoreOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22312,
			"name": "StoreOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22313,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22314,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22314
							]
						}
					]
				}
			}
		},
		{
			"id": 22319,
			"name": "ShippingAddressPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the order's shipping address."
					}
				]
			},
			"children": [
				{
					"id": 22320,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22321,
							"name": "new ShippingAddressPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22319,
								"name": "ShippingAddressPayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22322,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22320
					]
				},
				{
					"title": "Properties",
					"children": [
						22322
					]
				}
			]
		},
		{
			"id": 22323,
			"name": "StoreGetOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to narrow down the looked-up order, with configurations applied on the retrieved order."
					}
				]
			},
			"children": [
				{
					"id": 22324,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22325,
							"name": "new StoreGetOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22323,
								"name": "StoreGetOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 22326,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22327,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22328,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the retrieved order by its shipping address details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22319,
						"name": "ShippingAddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22329,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 22330,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22324
					]
				},
				{
					"title": "Properties",
					"children": [
						22326,
						22327,
						22328,
						22329,
						22330
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22331,
			"name": "StorePostCustomersCustomerOrderClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the orders to claim."
					}
				]
			},
			"children": [
				{
					"id": 22332,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22333,
							"name": "new StorePostCustomersCustomerOrderClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the orders to claim."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22331,
								"name": "StorePostCustomersCustomerOrderClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22334,
					"name": "order_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the orders to claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22332
					]
				},
				{
					"title": "Properties",
					"children": [
						22334
					]
				}
			]
		},
		{
			"id": 22342,
			"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment sessions to authorize."
					}
				]
			},
			"children": [
				{
					"id": 22343,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22344,
							"name": "new StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment sessions to authorize."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22342,
								"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22345,
					"name": "session_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of Payment Session IDs to authorize."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22343
					]
				},
				{
					"title": "Properties",
					"children": [
						22345
					]
				}
			]
		},
		{
			"id": 22346,
			"name": "StoreGetPaymentCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 22347,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22348,
							"name": "new StoreGetPaymentCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22346,
								"name": "StoreGetPaymentCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 22349,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 22350,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22347
					]
				},
				{
					"title": "Properties",
					"children": [
						22349,
						22350
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22335,
			"name": "defaultPaymentCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22336,
			"name": "StorePaymentCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22337,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22338,
							"name": "payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment collection's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
									"qualifiedName": "PaymentCollection"
								},
								"name": "PaymentCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22338
							]
						}
					]
				}
			}
		},
		{
			"id": 22339,
			"name": "StorePaymentCollectionsSessionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22340,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22341,
							"name": "payment_session",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment session's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
									"qualifiedName": "PaymentSession"
								},
								"name": "PaymentSession",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22341
							]
						}
					]
				}
			}
		},
		{
			"id": 22351,
			"name": "StorePostPaymentCollectionsSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22352,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22353,
							"name": "new StorePostPaymentCollectionsSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22351,
								"name": "StorePostPaymentCollectionsSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22354,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22355,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22356,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Session to be updated. If no ID is provided, a new payment session is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22352
					]
				},
				{
					"title": "Properties",
					"children": [
						22354,
						22355,
						22356
					]
				}
			]
		},
		{
			"id": 22357,
			"name": "StorePostPaymentCollectionsBatchSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment sessions to manage."
					}
				]
			},
			"children": [
				{
					"id": 22358,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22359,
							"name": "new StorePostPaymentCollectionsBatchSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment sessions to manage."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22357,
								"name": "StorePostPaymentCollectionsBatchSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22360,
					"name": "sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment sessions related to the Payment Collection. Existing sessions that are not added in this array will be deleted."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22351,
							"name": "StorePostPaymentCollectionsSessionsReq",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22358
					]
				},
				{
					"title": "Properties",
					"children": [
						22360
					]
				}
			]
		},
		{
			"id": 22361,
			"name": "StorePaymentCollectionSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to manage."
					}
				]
			},
			"children": [
				{
					"id": 22362,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22363,
							"name": "new StorePaymentCollectionSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment session to manage."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22361,
								"name": "StorePaymentCollectionSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22364,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22362
					]
				},
				{
					"title": "Properties",
					"children": [
						22364
					]
				}
			]
		},
		{
			"id": 22378,
			"name": "StoreGetProductCategoriesCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 22379,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22380,
							"name": "new StoreGetProductCategoriesCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22378,
								"name": "StoreGetProductCategoriesCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 22381,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 22382,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22379
					]
				},
				{
					"title": "Properties",
					"children": [
						22381,
						22382
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22365,
			"name": "defaultStoreProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22366,
			"name": "defaultStoreCategoryScope",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22367,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22368,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 22369,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22368,
								22369
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22370,
			"name": "defaultStoreProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22371,
			"name": "allowedStoreProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22372,
			"name": "StoreGetProductCategoriesCategoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product category's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22373,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22374,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product category details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22374
							]
						}
					]
				}
			}
		},
		{
			"id": 22375,
			"name": "StoreGetProductCategoriesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product categories with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22376,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22377,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product categories details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
												"qualifiedName": "ProductCategory"
											},
											"name": "ProductCategory",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22377
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22383,
			"name": "StoreGetProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 22387,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product categories' names and handles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22388,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product categories by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22389,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by the ID of their associated parent category."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 22390,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include child categories in the retrieved categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 22391,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 22392,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 22393,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 22394,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of product categories returned in the list. Default is "
							},
							{
								"kind": "code",
								"text": "`100`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 22395,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 22384,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22385,
							"name": "new StoreGetProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 22386,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 22383,
								"name": "StoreGetProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22384
					]
				},
				{
					"title": "Properties",
					"children": [
						22387,
						22388,
						22389,
						22390,
						22391,
						22392,
						22393,
						22394,
						22395
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 22396,
			"name": "defaultStoreProductTagFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22397,
			"name": "allowedStoreProductTagFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22398,
			"name": "defaultStoreProductTagRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 22399,
			"name": "StoreProductTagsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product tags with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22400,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22401,
									"name": "product_tags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product tags details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
												"qualifiedName": "ProductTag"
											},
											"name": "ProductTag",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22401
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22402,
			"name": "StoreGetProductTagsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 22403,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22404,
							"name": "new StoreGetProductTagsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22402,
								"name": "StoreGetProductTagsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22883,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22882,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 22405,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22406,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product tags' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22407,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22408,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply to the product tags' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22409,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply to the product tags' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22410,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 22886,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 22411,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product tags by the ID of their associated discount condition."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22412,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 22884,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 22413,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 22885,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22403
					]
				},
				{
					"title": "Properties",
					"children": [
						22405,
						22406,
						22407,
						22408,
						22409,
						22410,
						22411,
						22412,
						22413
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22881,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22414,
			"name": "allowedStoreProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22415,
			"name": "defaultStoreProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22416,
			"name": "defaultStoreProductTypeRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 22417,
			"name": "StoreProductTypesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22418,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22419,
									"name": "product_types",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product types details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
												"qualifiedName": "ProductType"
											},
											"name": "ProductType",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22419
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22420,
			"name": "StoreGetProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 22421,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22422,
							"name": "new StoreGetProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22420,
								"name": "StoreGetProductTypesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22883,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22882,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 22423,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22424,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product types' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22425,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22426,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22427,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22428,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 22886,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 22429,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product types by the ID of their associated discount condition."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22430,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 22884,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 22431,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 22885,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22421
					]
				},
				{
					"title": "Properties",
					"children": [
						22423,
						22424,
						22425,
						22426,
						22427,
						22428,
						22429,
						22430,
						22431
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22881,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22432,
			"name": "defaultStoreProductsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22433,
			"name": "defaultStoreProductsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "Product"
						},
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22434,
			"name": "allowedStoreProductsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22435,
			"name": "allowedStoreProductsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22436,
			"name": "defaultStoreProductRemoteQueryObject",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is temporary."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22437,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22438,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								}
							},
							"defaultValue": "defaultStoreProductsFields"
						},
						{
							"id": 22439,
							"name": "images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22440,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22441,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22441
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 22442,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22443,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22444,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22444
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 22445,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22446,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22447,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22447
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 22448,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22449,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22450,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22450
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 22451,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22452,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22453,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 22454,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 22455,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 22456,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																22456
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22453,
												22454
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 22457,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22458,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22459,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 22460,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 22461,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 22462,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																22462
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22459,
												22460
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 22463,
							"name": "profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22464,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22465,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22465
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 22466,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22467,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22468,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22468
											]
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22438,
								22439,
								22442,
								22445,
								22448,
								22451,
								22457,
								22463,
								22466
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22469,
			"name": "StoreProductsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22470,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22471,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23373,
								"name": "PricedProduct",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22471
							]
						}
					]
				}
			}
		},
		{
			"id": 22472,
			"name": "StorePostSearchRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of search results."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 22473,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22474,
									"name": "hits",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of search results. The format of the items depends on the search engine installed on the Medusa backend."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22474
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 22475,
			"name": "StoreProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22813,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22476,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22477,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23373,
											"name": "PricedProduct",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22477
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22478,
			"name": "StoreGetProductsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 22479,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22480,
							"name": "new StoreGetProductsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22478,
								"name": "StoreGetProductsPaginationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23602,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23601,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 22481,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 22482,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 22483,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22487,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23606,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 22488,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23607,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 22484,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23603,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 22485,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23604,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 22486,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23605,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22479
					]
				},
				{
					"title": "Properties",
					"children": [
						22481,
						22482,
						22483,
						22487,
						22488,
						22484,
						22485,
						22486
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23600,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 22489,
					"name": "StoreGetProductsParams"
				}
			]
		},
		{
			"id": 22489,
			"name": "StoreGetProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 22490,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22491,
							"name": "new StoreGetProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22489,
								"name": "StoreGetProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22480,
								"name": "StoreGetProductsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22479,
						"name": "StoreGetProductsPaginationParams.constructor"
					}
				},
				{
					"id": 22506,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 22481,
						"name": "StoreGetProductsPaginationParams.offset"
					}
				},
				{
					"id": 22507,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100",
					"inheritedFrom": {
						"type": "reference",
						"target": 22482,
						"name": "StoreGetProductsPaginationParams.limit"
					}
				},
				{
					"id": 22508,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22483,
						"name": "StoreGetProductsPaginationParams.order"
					}
				},
				{
					"id": 22492,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22493,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22494,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22495,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22496,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22497,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22498,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22499,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 22500,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22501,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22502,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22503,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 22504,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22505,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22512,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22487,
						"name": "StoreGetProductsPaginationParams.expand"
					}
				},
				{
					"id": 22513,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22488,
						"name": "StoreGetProductsPaginationParams.fields"
					}
				},
				{
					"id": 22509,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22484,
						"name": "StoreGetProductsPaginationParams.cart_id"
					}
				},
				{
					"id": 22510,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22485,
						"name": "StoreGetProductsPaginationParams.region_id"
					}
				},
				{
					"id": 22511,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22486,
						"name": "StoreGetProductsPaginationParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22490
					]
				},
				{
					"title": "Properties",
					"children": [
						22506,
						22507,
						22508,
						22492,
						22493,
						22494,
						22495,
						22496,
						22497,
						22498,
						22499,
						22500,
						22501,
						22502,
						22503,
						22504,
						22505,
						22512,
						22513,
						22509,
						22510,
						22511
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22478,
					"name": "StoreGetProductsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22514,
			"name": "StorePostSearchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22515,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22516,
							"name": "new StorePostSearchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22514,
								"name": "StorePostSearchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22517,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The search query."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22518,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of products to skip when retrieving the products."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22519,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of products returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22520,
					"name": "filter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pass filters based on the search service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22515
					]
				},
				{
					"title": "Properties",
					"children": [
						22517,
						22518,
						22519,
						22520
					]
				}
			]
		},
		{
			"id": 22529,
			"name": "StoreGetRegionsRegionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 22530,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22531,
							"name": "new StoreGetRegionsRegionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22529,
								"name": "StoreGetRegionsRegionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 22532,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 22533,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22530
					]
				},
				{
					"title": "Properties",
					"children": [
						22532,
						22533
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22521,
			"name": "defaultStoreRegionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22522,
			"name": "defaultStoreRegionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22523,
			"name": "StoreRegionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of regions with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23229,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22524,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22525,
									"name": "regions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of regions details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/region.ts",
												"qualifiedName": "Region"
											},
											"name": "Region",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22525
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22526,
			"name": "StoreRegionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22527,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22528,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Region details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/region.ts",
									"qualifiedName": "Region"
								},
								"name": "Region",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22528
							]
						}
					]
				}
			}
		},
		{
			"id": 22534,
			"name": "StoreGetRegionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22538,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22539,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22540,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 22541,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 22542,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 22543,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 22544,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 22535,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22536,
							"name": "new StoreGetRegionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 22537,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 22534,
								"name": "StoreGetRegionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22535
					]
				},
				{
					"title": "Properties",
					"children": [
						22538,
						22539,
						22540,
						22541,
						22542,
						22543,
						22544
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 22876,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22881,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 22545,
			"name": "defaultStoreReturnReasonFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22546,
			"name": "defaultStoreReturnReasonRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22547,
			"name": "StoreReturnReasonsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of return reasons."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22548,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22549,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of return reasons details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
										"qualifiedName": "ReturnReason"
									},
									"name": "ReturnReason",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22549
							]
						}
					]
				}
			}
		},
		{
			"id": 22550,
			"name": "StoreReturnReasonsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return reason's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22551,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22552,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return reason details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
									"qualifiedName": "ReturnReason"
								},
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22552
							]
						}
					]
				}
			}
		},
		{
			"id": 23615,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23616,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23617,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23615,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23618,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23616
					]
				},
				{
					"title": "Properties",
					"children": [
						23618
					]
				}
			]
		},
		{
			"id": 23608,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23609,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23610,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23608,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23611,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23612,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23613,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the return reason. Return reasons can be retrieved from the List Return Reasons API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23614,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note to add to the item returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23609
					]
				},
				{
					"title": "Properties",
					"children": [
						23611,
						23612,
						23613,
						23614
					]
				}
			]
		},
		{
			"id": 22556,
			"name": "StorePostReturnsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the return to create."
					}
				]
			},
			"children": [
				{
					"id": 22557,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22558,
							"name": "new StorePostReturnsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the return to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22556,
								"name": "StorePostReturnsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22559,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Order to create the return for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22560,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to include in the return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23608,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22561,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return shipping method used to return the items. If provided, a fulfillment is automatically created for the return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23615,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22557
					]
				},
				{
					"title": "Properties",
					"children": [
						22559,
						22560,
						22561
					]
				}
			]
		},
		{
			"id": 22553,
			"name": "StoreReturnsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22554,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22555,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return.ts",
									"qualifiedName": "Return"
								},
								"name": "Return",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22555
							]
						}
					]
				}
			}
		},
		{
			"id": 22562,
			"name": "StoreShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping options."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22563,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22564,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping options details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23619,
									"name": "PricedShippingOption",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22564
							]
						}
					]
				}
			}
		},
		{
			"id": 22565,
			"name": "StoreCartShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22566,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22567,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping options details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23619,
									"name": "PricedShippingOption",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22567
							]
						}
					]
				}
			}
		},
		{
			"id": 22568,
			"name": "StoreGetShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved shipping options."
					}
				]
			},
			"children": [
				{
					"id": 22569,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22570,
							"name": "new StoreGetShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22568,
								"name": "StoreGetShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22571,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product ID that is used to filter shipping options by whether they can be used to ship that product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22572,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by the ID of their associated region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22573,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by whether they're return shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22569
					]
				},
				{
					"title": "Properties",
					"children": [
						22571,
						22572,
						22573
					]
				}
			]
		},
		{
			"id": 23620,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23621,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23622,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23620,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23623,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order's line item to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23624,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23625,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the reason of this return. Return reasons can be retrieved from the List Return Reasons API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23626,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The note to add to the item being swapped."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23621
					]
				},
				{
					"title": "Properties",
					"children": [
						23623,
						23624,
						23625,
						23626
					]
				}
			]
		},
		{
			"id": 23627,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23628,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23629,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23627,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23630,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23631,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23628
					]
				},
				{
					"title": "Properties",
					"children": [
						23630,
						23631
					]
				}
			]
		},
		{
			"id": 22579,
			"name": "StorePostSwapsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap to create."
					}
				]
			},
			"children": [
				{
					"id": 22580,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22581,
							"name": "new StorePostSwapsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the swap to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22579,
								"name": "StorePostSwapsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22582,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Order to create the Swap for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22583,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to include in the Return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23620,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22584,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to exchange the returned items with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23627,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22585,
					"name": "return_shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22580
					]
				},
				{
					"title": "Properties",
					"children": [
						22582,
						22583,
						22584,
						22585
					]
				}
			]
		},
		{
			"id": 22574,
			"name": "defaultStoreSwapRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22575,
			"name": "defaultStoreSwapFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "literal",
					"value": "select"
				},
				"objectType": {
					"type": "reference",
					"target": 22758,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
								"qualifiedName": "Swap"
							},
							"name": "Swap",
							"package": "@medusajs/medusa"
						}
					],
					"name": "FindConfig",
					"package": "@medusajs/medusa"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22576,
			"name": "StoreSwapsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22577,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22578,
							"name": "swap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Swap details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
									"qualifiedName": "Swap"
								},
								"name": "Swap",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22578
							]
						}
					]
				}
			}
		},
		{
			"id": 22594,
			"name": "StoreGetVariantsVariantParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices."
					}
				]
			},
			"children": [
				{
					"id": 22595,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22596,
							"name": "new StoreGetVariantsVariantParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22594,
								"name": "StoreGetVariantsVariantParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23602,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23601,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 22597,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22601,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23606,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 22602,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23607,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 22598,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23603,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 22599,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23604,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 22600,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23605,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22595
					]
				},
				{
					"title": "Properties",
					"children": [
						22597,
						22601,
						22602,
						22598,
						22599,
						22600
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23600,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22586,
			"name": "defaultStoreVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22587,
			"name": "allowedStoreVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 22588,
			"name": "StoreVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product variant's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22589,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22590,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product variant description."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23579,
								"name": "PricedVariant",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22590
							]
						}
					]
				}
			}
		},
		{
			"id": 22591,
			"name": "StoreVariantsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product variants."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22592,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22593,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product variant descriptions."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23579,
									"name": "PricedVariant",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22593
							]
						}
					]
				}
			}
		},
		{
			"id": 22603,
			"name": "StoreGetVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 22604,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22605,
							"name": "new StoreGetVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22603,
								"name": "StoreGetVariantsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23602,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23601,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 22606,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 22607,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 22608,
					"name": "ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter the product variants by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22609,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by the ID of their associated sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22610,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22611,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Titles to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22612,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on the product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 22616,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23606,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 22617,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23607,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 22613,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23603,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 22614,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23604,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 22615,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23605,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22604
					]
				},
				{
					"title": "Properties",
					"children": [
						22606,
						22607,
						22608,
						22609,
						22610,
						22611,
						22612,
						22616,
						22617,
						22613,
						22614,
						22615
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23600,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 22708,
			"name": "BatchJobStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 22709,
					"name": "CREATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "created"
					}
				},
				{
					"id": 22710,
					"name": "PRE_PROCESSED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "pre_processed"
					}
				},
				{
					"id": 22711,
					"name": "CONFIRMED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "confirmed"
					}
				},
				{
					"id": 22712,
					"name": "PROCESSING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "processing"
					}
				},
				{
					"id": 22713,
					"name": "COMPLETED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "completed"
					}
				},
				{
					"id": 22714,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 22715,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						22709,
						22710,
						22711,
						22712,
						22713,
						22714,
						22715
					]
				}
			]
		},
		{
			"id": 22716,
			"name": "BatchJobUpdateProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Partial"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
									"qualifiedName": "BatchJob"
								},
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "context"
									},
									{
										"type": "literal",
										"value": "result"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				],
				"name": "Partial",
				"package": "typescript"
			}
		},
		{
			"id": 22717,
			"name": "CreateBatchJobInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22718,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22719,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 22720,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "context"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
										"qualifiedName": "BatchJob"
									},
									"name": "BatchJob",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 22721,
							"name": "dry_run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22719,
								22720,
								22721
							]
						}
					]
				}
			}
		},
		{
			"id": 22722,
			"name": "BatchJobResultError",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22723,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22724,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 22725,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22724,
								22725
							]
						}
					],
					"indexSignature": {
						"id": 22726,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 22727,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 22728,
			"name": "BatchJobResultStatDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22729,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22730,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 22731,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 22732,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22730,
								22731,
								22732
							]
						}
					]
				}
			}
		},
		{
			"id": 22733,
			"name": "FilterableBatchJobProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22734,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22735,
							"name": "new FilterableBatchJobProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22733,
								"name": "FilterableBatchJobProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22736,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22737,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22708,
							"name": "BatchJobStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22738,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22739,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 22740,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22741,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22734
					]
				},
				{
					"title": "Properties",
					"children": [
						22736,
						22737,
						22738,
						22739,
						22740,
						22741
					]
				}
			]
		},
		{
			"id": 22742,
			"name": "BatchJobCreateProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
							"qualifiedName": "BatchJob"
						},
						"name": "BatchJob",
						"package": "@medusajs/medusa"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "context"
							},
							{
								"type": "literal",
								"value": "type"
							},
							{
								"type": "literal",
								"value": "created_by"
							},
							{
								"type": "literal",
								"value": "dry_run"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 22750,
			"name": "WithRequiredProperty",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
					}
				]
			},
			"typeParameters": [
				{
					"id": 22751,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 22752,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 22751,
							"name": "T",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22751,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					},
					{
						"type": "mapped",
						"parameter": "Property",
						"parameterType": {
							"type": "reference",
							"target": 22752,
							"name": "K",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "Property"
								},
								"name": "Property",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 22751,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						"optionalModifier": "-"
					}
				]
			}
		},
		{
			"id": 22753,
			"name": "PartialPick",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22754,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 22755,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 22754,
							"name": "T",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "P",
				"parameterType": {
					"type": "reference",
					"target": 22755,
					"name": "K",
					"package": "@medusajs/medusa",
					"refersToTypeParameter": true
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/types/common.ts",
							"qualifiedName": "P"
						},
						"name": "P",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 22754,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 22756,
			"name": "Writable",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22757,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 22757,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "key"
								},
								"name": "key",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 22757,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/types/common.ts",
											"qualifiedName": "key"
										},
										"name": "key",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 22757,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/types/common.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/medusa",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 22757,
											"name": "T",
											"package": "@medusajs/medusa",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						}
					]
				},
				"readonlyModifier": "-"
			}
		},
		{
			"id": 22758,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 22759,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 22767,
								"name": "Entity",
								"package": "@medusajs/medusa",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 22760,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22761,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22762,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22763,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22764,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 22765,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 22766,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						22759,
						22760,
						22761,
						22762,
						22763
					]
				}
			],
			"typeParameters": [
				{
					"id": 22767,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 22768,
			"name": "ExtendedFindConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22776,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOneOptions.d.ts",
											"qualifiedName": "FindOneOptions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 22776,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOneOptions",
										"package": "typeorm"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "where"
											},
											{
												"type": "literal",
												"value": "relations"
											},
											{
												"type": "literal",
												"value": "select"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindManyOptions.d.ts",
											"qualifiedName": "FindManyOptions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 22776,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindManyOptions",
										"package": "typeorm"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "where"
											},
											{
												"type": "literal",
												"value": "relations"
											},
											{
												"type": "literal",
												"value": "select"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						]
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22769,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22770,
									"name": "select",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
											"qualifiedName": "FindOptionsSelect"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 22776,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsSelect",
										"package": "typeorm"
									}
								},
								{
									"id": 22771,
									"name": "relations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsRelations.d.ts",
											"qualifiedName": "FindOptionsRelations"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 22776,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsRelations",
										"package": "typeorm"
									}
								},
								{
									"id": 22772,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
													"qualifiedName": "FindOptionsWhere"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 22776,
														"name": "TEntity",
														"package": "@medusajs/medusa",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptionsWhere",
												"package": "typeorm"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
														"qualifiedName": "FindOptionsWhere"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 22776,
															"name": "TEntity",
															"package": "@medusajs/medusa",
															"refersToTypeParameter": true
														}
													],
													"name": "FindOptionsWhere",
													"package": "typeorm"
												}
											}
										]
									}
								},
								{
									"id": 22773,
									"name": "order",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsOrder.d.ts",
											"qualifiedName": "FindOptionsOrder"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 22776,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsOrder",
										"package": "typeorm"
									}
								},
								{
									"id": 22774,
									"name": "skip",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 22775,
									"name": "take",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22770,
										22771,
										22772,
										22773,
										22774,
										22775
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22777,
			"name": "QuerySelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22780,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22785,
						"typeArguments": [
							{
								"type": "reference",
								"target": 22780,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "Selector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22778,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22779,
									"name": "q",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22779
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22781,
			"name": "TreeQuerySelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22784,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 22777,
						"typeArguments": [
							{
								"type": "reference",
								"target": 22784,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "QuerySelector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22782,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22783,
									"name": "include_descendants_tree",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22783
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 23664,
			"name": "InnerSelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23665,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 23665,
						"name": "TEntity",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "key"
								},
								"name": "key",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 23665,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "array",
							"elementType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/types/common.ts",
										"qualifiedName": "key"
									},
									"name": "key",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 23665,
									"name": "TEntity",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"type": "reference",
							"target": 22824,
							"name": "DateComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22831,
							"name": "StringComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 22841,
							"name": "NumericalComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "key"
													},
													"name": "key",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 23665,
													"name": "TEntity",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 22785,
			"name": "Selector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22786,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 23664,
						"typeArguments": [
							{
								"type": "reference",
								"target": 22786,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "InnerSelector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23664,
							"typeArguments": [
								{
									"type": "reference",
									"target": 22786,
									"name": "TEntity",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								}
							],
							"name": "InnerSelector",
							"package": "@medusajs/medusa"
						}
					}
				]
			}
		},
		{
			"id": 22787,
			"name": "TotalField",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "shipping_total"
					},
					{
						"type": "literal",
						"value": "discount_total"
					},
					{
						"type": "literal",
						"value": "tax_total"
					},
					{
						"type": "literal",
						"value": "refunded_total"
					},
					{
						"type": "literal",
						"value": "total"
					},
					{
						"type": "literal",
						"value": "subtotal"
					},
					{
						"type": "literal",
						"value": "refundable_amount"
					},
					{
						"type": "literal",
						"value": "gift_card_total"
					},
					{
						"type": "literal",
						"value": "gift_card_tax_total"
					}
				]
			}
		},
		{
			"id": 22788,
			"name": "CustomFindOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 22789,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
									"qualifiedName": "FindOptionsSelect"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 22794,
										"name": "TModel",
										"package": "@medusajs/medusa",
										"qualifiedName": "CustomFindOptions.TModel",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsSelect",
								"package": "typeorm"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
									"qualifiedName": "FindOptionsSelectByString"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 22794,
										"name": "TModel",
										"package": "@medusajs/medusa",
										"qualifiedName": "CustomFindOptions.TModel",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsSelectByString",
								"package": "typeorm"
							}
						]
					}
				},
				{
					"id": 22790,
					"name": "where",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
											"qualifiedName": "FindOptionsWhere"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 22794,
												"name": "TModel",
												"package": "@medusajs/medusa",
												"qualifiedName": "CustomFindOptions.TModel",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsWhere",
										"package": "typeorm"
									},
									{
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "P"
													},
													"name": "P",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 22794,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											}
										},
										"optionalModifier": "+"
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
												"qualifiedName": "FindOptionsWhere"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 22794,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											],
											"name": "FindOptionsWhere",
											"package": "typeorm"
										}
									},
									{
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "P"
													},
													"name": "P",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 22794,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											}
										},
										"optionalModifier": "+"
									}
								]
							}
						]
					}
				},
				{
					"id": 22791,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/find-options/OrderByCondition.d.ts",
							"qualifiedName": "OrderByCondition"
						},
						"name": "OrderByCondition",
						"package": "typeorm"
					}
				},
				{
					"id": 22792,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22793,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						22789,
						22790,
						22791,
						22792,
						22793
					]
				}
			],
			"typeParameters": [
				{
					"id": 22794,
					"name": "TModel",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 22795,
					"name": "InKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 22794,
							"name": "TModel",
							"package": "@medusajs/medusa",
							"qualifiedName": "CustomFindOptions.TModel",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 22796,
			"name": "QueryConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22806,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
							"qualifiedName": "BaseEntity"
						},
						"name": "BaseEntity",
						"package": "@medusajs/medusa"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22797,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22798,
							"name": "defaults",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default fields and relations to return"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 22806,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 22799,
							"name": "defaultFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaults`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 22806,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 22800,
							"name": "defaultRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaultFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 22801,
							"name": "allowed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields and relations that are allowed to be requested"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 22802,
							"name": "allowedFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowed`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 22803,
							"name": "allowedRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowedFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 22804,
							"name": "defaultLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 22805,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22798,
								22799,
								22800,
								22801,
								22802,
								22803,
								22804,
								22805
							]
						}
					]
				}
			}
		},
		{
			"id": 22807,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request parameters used to configure and paginate retrieved data."
					}
				]
			},
			"children": [
				{
					"id": 22808,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`fields`"
									},
									{
										"kind": "text",
										"text": " instead and the relations will be inferred"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22809,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22810,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22811,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22812,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						22808,
						22809,
						22810,
						22811,
						22812
					]
				}
			]
		},
		{
			"id": 22813,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pagination fields returned in the response of an API route."
					}
				]
			},
			"children": [
				{
					"id": 22814,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items that can be returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22815,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items skipped before the returned items in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22816,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of items available."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						22814,
						22815,
						22816
					]
				}
			]
		},
		{
			"id": 22817,
			"name": "DeleteResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The response returned for a "
					},
					{
						"kind": "code",
						"text": "`DELETE`"
					},
					{
						"kind": "text",
						"text": " request."
					}
				]
			},
			"children": [
				{
					"id": 22818,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the deleted item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22819,
					"name": "object",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the deleted item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "product-collection"
				},
				{
					"id": 22820,
					"name": "deleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the item was deleted successfully."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						22818,
						22819,
						22820
					]
				}
			]
		},
		{
			"id": 22821,
			"name": "EmptyQueryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22822,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22823,
							"name": "new EmptyQueryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22821,
								"name": "EmptyQueryParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22822
					]
				}
			]
		},
		{
			"id": 22824,
			"name": "DateComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on dates."
					}
				]
			},
			"children": [
				{
					"id": 22825,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22826,
							"name": "new DateComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22824,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22827,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be less than this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 22828,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be greater than this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 22829,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 22830,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22825
					]
				},
				{
					"title": "Properties",
					"children": [
						22827,
						22828,
						22829,
						22830
					]
				}
			]
		},
		{
			"id": 22831,
			"name": "StringComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on strings."
					}
				]
			},
			"children": [
				{
					"id": 22832,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22833,
							"name": "new StringComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22834,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22835,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22836,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22837,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22838,
					"name": "contains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must contain this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22839,
					"name": "starts_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must start with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22840,
					"name": "ends_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must end with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22832
					]
				},
				{
					"title": "Properties",
					"children": [
						22834,
						22835,
						22836,
						22837,
						22838,
						22839,
						22840
					]
				}
			]
		},
		{
			"id": 22841,
			"name": "NumericalComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on numbers."
					}
				]
			},
			"children": [
				{
					"id": 22842,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22843,
							"name": "new NumericalComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22841,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22844,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22845,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22846,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22847,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22842
					]
				},
				{
					"title": "Properties",
					"children": [
						22844,
						22845,
						22846,
						22847
					]
				}
			]
		},
		{
			"id": 22848,
			"name": "AddressPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Address fields used when creating/updating an address."
					}
				]
			},
			"children": [
				{
					"id": 22849,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22850,
							"name": "new AddressPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address fields used when creating/updating an address."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22848,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22851,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22852,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22853,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22854,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 22855,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22856,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22857,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22858,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22859,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22860,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22861,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22849
					]
				},
				{
					"title": "Properties",
					"children": [
						22851,
						22852,
						22853,
						22854,
						22855,
						22856,
						22857,
						22858,
						22859,
						22860,
						22861
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 22270,
					"name": "StorePostCustomersCustomerAddressesAddressReq"
				}
			]
		},
		{
			"id": 22862,
			"name": "AddressCreatePayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Address fields used when creating an address."
					}
				]
			},
			"children": [
				{
					"id": 22863,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22864,
							"name": "new AddressCreatePayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address fields used when creating an address."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 22862,
								"name": "AddressCreatePayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22865,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22866,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22867,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22868,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 22869,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22870,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22871,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22872,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22873,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22874,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22875,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22863
					]
				},
				{
					"title": "Properties",
					"children": [
						22865,
						22866,
						22867,
						22868,
						22869,
						22870,
						22871,
						22872,
						22873,
						22874,
						22875
					]
				}
			]
		},
		{
			"id": 22876,
			"name": "FindParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 22877,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22878,
							"name": "new FindParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22876,
								"name": "FindParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22879,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22880,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22877
					]
				},
				{
					"title": "Properties",
					"children": [
						22879,
						22880
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20060,
					"name": "AdminGetCustomerGroupsGroupParams"
				},
				{
					"type": "reference",
					"target": 20149,
					"name": "AdminPostDiscountsDiscountConditionsParams"
				},
				{
					"type": "reference",
					"target": 20184,
					"name": "AdminPostDiscountsParams"
				},
				{
					"type": "reference",
					"target": 20195,
					"name": "AdminDeleteDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 20200,
					"name": "AdminGetDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 20205,
					"name": "AdminGetDiscountParams"
				},
				{
					"type": "reference",
					"target": 20210,
					"name": "AdminGetDiscountsDiscountCodeParams"
				},
				{
					"type": "reference",
					"target": 20238,
					"name": "AdminPostDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 20273,
					"name": "AdminPostDiscountsDiscountParams"
				},
				{
					"type": "reference",
					"target": 20284,
					"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
				},
				{
					"type": "reference",
					"target": 20289,
					"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams"
				},
				{
					"type": "reference",
					"target": 20448,
					"name": "AdminPostInventoryItemsParams"
				},
				{
					"type": "reference",
					"target": 20459,
					"name": "AdminPostInventoryItemsItemLocationLevelsParams"
				},
				{
					"type": "reference",
					"target": 20464,
					"name": "AdminGetInventoryItemsItemParams"
				},
				{
					"type": "reference",
					"target": 20491,
					"name": "AdminGetInventoryItemsItemLocationLevelsParams"
				},
				{
					"type": "reference",
					"target": 20513,
					"name": "AdminPostInventoryItemsInventoryItemParams"
				},
				{
					"type": "reference",
					"target": 20523,
					"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams"
				},
				{
					"type": "reference",
					"target": 20622,
					"name": "GetOrderEditsOrderEditParams"
				},
				{
					"type": "reference",
					"target": 20667,
					"name": "AdminPostOrdersOrderShippingMethodsParams"
				},
				{
					"type": "reference",
					"target": 20672,
					"name": "AdminPostOrdersOrderArchiveParams"
				},
				{
					"type": "reference",
					"target": 20677,
					"name": "AdminPostOrdersClaimCancel"
				},
				{
					"type": "reference",
					"target": 20688,
					"name": "AdminPostOrdersOrderFulfillementsCancelParams"
				},
				{
					"type": "reference",
					"target": 20693,
					"name": "AdminPostOrdersClaimFulfillmentsCancelParams"
				},
				{
					"type": "reference",
					"target": 20698,
					"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams"
				},
				{
					"type": "reference",
					"target": 20703,
					"name": "AdminPostOrdersOrderCancel"
				},
				{
					"type": "reference",
					"target": 20708,
					"name": "AdminPostOrdersSwapCancelParams"
				},
				{
					"type": "reference",
					"target": 20713,
					"name": "AdminPostOrdersOrderCaptureParams"
				},
				{
					"type": "reference",
					"target": 20718,
					"name": "AdminPostOrdersOrderCompleteParams"
				},
				{
					"type": "reference",
					"target": 20736,
					"name": "AdminPostOrdersOrderClaimsParams"
				},
				{
					"type": "reference",
					"target": 20746,
					"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams"
				},
				{
					"type": "reference",
					"target": 20765,
					"name": "AdminPostOrdersOrderFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 20776,
					"name": "AdminPostOrdersOrderShipmentParams"
				},
				{
					"type": "reference",
					"target": 20792,
					"name": "AdminPostOrdersOrderSwapsParams"
				},
				{
					"type": "reference",
					"target": 20803,
					"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams"
				},
				{
					"type": "reference",
					"target": 20814,
					"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 20825,
					"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 20830,
					"name": "AdminGetOrdersOrderParams"
				},
				{
					"type": "reference",
					"target": 20859,
					"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams"
				},
				{
					"type": "reference",
					"target": 20871,
					"name": "AdminPostOrdersOrderRefundsParams"
				},
				{
					"type": "reference",
					"target": 20886,
					"name": "AdminPostOrdersOrderReturnsParams"
				},
				{
					"type": "reference",
					"target": 20898,
					"name": "AdminPostOrdersOrderClaimsClaimParams"
				},
				{
					"type": "reference",
					"target": 20916,
					"name": "AdminPostOrdersOrderParams"
				},
				{
					"type": "reference",
					"target": 20931,
					"name": "AdminGetPaymentCollectionsParams"
				},
				{
					"type": "reference",
					"target": 20948,
					"name": "GetPaymentsParams"
				},
				{
					"type": "reference",
					"target": 21064,
					"name": "AdminGetProductCategoryParams"
				},
				{
					"type": "reference",
					"target": 21094,
					"name": "AdminPostProductCategoriesParams"
				},
				{
					"type": "reference",
					"target": 21110,
					"name": "AdminPostProductCategoriesCategoryParams"
				},
				{
					"type": "reference",
					"target": 21119,
					"name": "AdminPostProductCategoriesCategoryProductsBatchParams"
				},
				{
					"type": "reference",
					"target": 21128,
					"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams"
				},
				{
					"type": "reference",
					"target": 21300,
					"name": "AdminGetProductParams"
				},
				{
					"type": "reference",
					"target": 21516,
					"name": "AdminGetRegionsRegionParams"
				},
				{
					"type": "reference",
					"target": 21758,
					"name": "AdminPostStockLocationsParams"
				},
				{
					"type": "reference",
					"target": 21763,
					"name": "AdminGetStockLocationsLocationParams"
				},
				{
					"type": "reference",
					"target": 21789,
					"name": "AdminPostStockLocationsLocationParams"
				},
				{
					"type": "reference",
					"target": 22050,
					"name": "AdminGetVariantParams"
				},
				{
					"type": "reference",
					"target": 22077,
					"name": "AdminGetWorkflowExecutionDetailsParams"
				},
				{
					"type": "reference",
					"target": 22323,
					"name": "StoreGetOrdersParams"
				},
				{
					"type": "reference",
					"target": 22346,
					"name": "StoreGetPaymentCollectionsParams"
				},
				{
					"type": "reference",
					"target": 22378,
					"name": "StoreGetProductCategoriesCategoryParams"
				},
				{
					"type": "reference",
					"target": 22529,
					"name": "StoreGetRegionsRegionParams"
				},
				{
					"type": "reference",
					"target": 23600,
					"name": "PriceSelectionParams"
				}
			]
		},
		{
			"id": 22881,
			"name": "FindPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 22882,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22883,
							"name": "new FindPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22881,
								"name": "FindPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22884,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 22885,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20"
				},
				{
					"id": 22886,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22882
					]
				},
				{
					"title": "Properties",
					"children": [
						22884,
						22885,
						22886
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20026,
					"name": "AdminGetCurrenciesParams"
				},
				{
					"type": "reference",
					"target": 21160,
					"name": "AdminGetProductTypesParams"
				},
				{
					"type": "reference",
					"target": 22402,
					"name": "StoreGetProductTagsParams"
				},
				{
					"type": "reference",
					"target": 22420,
					"name": "StoreGetProductTypesParams"
				}
			]
		},
		{
			"id": 22743,
			"name": "extendedFindParamsMixin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 22744,
					"name": "extendedFindParamsMixin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 22745,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22746,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 22747,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 22748,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 22749,
											"name": "order",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												22747,
												22748,
												22749
											]
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 22891,
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 22876,
										"name": "FindParams",
										"package": "@medusajs/medusa"
									},
									{
										"type": "reference",
										"target": 22881,
										"name": "FindPaginationParams",
										"package": "@medusajs/medusa"
									}
								]
							}
						],
						"name": "ClassConstructor",
						"package": "@medusajs/medusa"
					}
				}
			]
		},
		{
			"id": 23139,
			"name": "FilterableCustomerGroupProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved customer groups."
					}
				]
			},
			"children": [
				{
					"id": 23140,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23141,
							"name": "new FilterableCustomerGroupProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23139,
								"name": "FilterableCustomerGroupProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23142,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 22831,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 23143,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search customer groups by their name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23144,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23145,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23146,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23147,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customer groups by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23140
					]
				},
				{
					"title": "Properties",
					"children": [
						23142,
						23143,
						23144,
						23145,
						23146,
						23147
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20065,
					"name": "AdminGetCustomerGroupsParams"
				}
			]
		},
		{
			"id": 23135,
			"name": "CustomerGroupsBatchCustomer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23136,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23137,
							"name": "new CustomerGroupsBatchCustomer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23135,
								"name": "CustomerGroupsBatchCustomer",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23138,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the customer"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23136
					]
				},
				{
					"title": "Properties",
					"children": [
						23138
					]
				}
			]
		},
		{
			"id": 23148,
			"name": "AdminListCustomerSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters used to filter retrieved customers."
					}
				]
			},
			"children": [
				{
					"id": 23149,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23150,
							"name": "new AdminListCustomerSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23148,
								"name": "AdminListCustomerSelector",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23151,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term used to search customers' email, first name, last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23152,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by whether they have an account."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23153,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by the customer's customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23154,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23155,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23156,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23149
					]
				},
				{
					"title": "Properties",
					"children": [
						23151,
						23152,
						23153,
						23154,
						23155,
						23156
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20100,
					"name": "AdminGetCustomersParams"
				}
			]
		},
		{
			"id": 23169,
			"name": "AdminGetDiscountsDiscountRuleParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on discounts' rules."
					}
				]
			},
			"children": [
				{
					"id": 23170,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23171,
							"name": "new AdminGetDiscountsDiscountRuleParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23169,
								"name": "AdminGetDiscountsDiscountRuleParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23172,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type to filter discount rules by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "DiscountRuleType"
						},
						"name": "DiscountRuleType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23173,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allocation to filter discount rules by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23170
					]
				},
				{
					"title": "Properties",
					"children": [
						23172,
						23173
					]
				}
			]
		},
		{
			"id": 23161,
			"name": "AdminUpsertConditionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields to create or update a discount condition."
					}
				]
			},
			"children": [
				{
					"id": 23162,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23163,
							"name": "new AdminUpsertConditionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23161,
								"name": "AdminUpsertConditionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23164,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23165,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23166,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23167,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23168,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23162
					]
				},
				{
					"title": "Properties",
					"children": [
						23164,
						23165,
						23166,
						23167,
						23168
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20140,
					"name": "AdminPostDiscountsDiscountConditions"
				},
				{
					"type": "reference",
					"target": 20175,
					"name": "AdminCreateCondition"
				},
				{
					"type": "reference",
					"target": 20230,
					"name": "AdminPostDiscountsDiscountConditionsCondition"
				},
				{
					"type": "reference",
					"target": 20263,
					"name": "AdminUpsertCondition"
				}
			]
		},
		{
			"id": 23192,
			"name": "DraftOrderStatusValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "open"
					},
					{
						"type": "literal",
						"value": "completed"
					}
				]
			}
		},
		{
			"id": 23747,
			"name": "FeatureFlagsResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 23748,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 23749,
								"name": "key",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"id": 23750,
								"name": "value",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									]
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									23749,
									23750
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 22887,
			"name": "ExtendedRequest",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22890,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.Request"
						},
						"name": "Request",
						"package": "@types/express",
						"qualifiedName": "e.Request"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 22888,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 22889,
									"name": "resource",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 22890,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										22889
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 22891,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22895,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22892,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 22893,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 22894,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 22895,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 22896,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 23666,
				"name": "coreMedusaContainer",
				"package": "medusa-core-utils",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 22897,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22898,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 22899,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22900,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22901,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22902,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22903,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22904,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22905,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22906,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22907,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22908,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22909,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22910,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22911,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22912,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22913,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22914,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22915,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22916,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22917,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22918,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22919,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22920,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22921,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22922,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22923,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22924,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22925,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22926,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22927,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22928,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22929,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22930,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22931,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22932,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22933,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22934,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22935,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22936,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22937,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22938,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22939,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22940,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22941,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22942,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22943,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22944,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22945,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22946,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22947,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22948,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22949,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22950,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 22951,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 22952,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 22953,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 22954,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								22899,
								22903,
								22907,
								22911,
								22914,
								22919,
								22924,
								22929,
								22934,
								22939,
								22943,
								22947,
								22951
							]
						}
					]
				}
			}
		},
		{
			"id": 22955,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 22959,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 22956,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22957,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 22958,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 22959,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 22960,
			"name": "ConfigModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 23677,
				"name": "CommonTypes.ConfigModule",
				"package": "@medusajs/types",
				"qualifiedName": "ConfigModule"
			}
		},
		{
			"id": 23287,
			"name": "AdminListOrdersSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 23288,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23289,
							"name": "new AdminListOrdersSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23287,
								"name": "AdminListOrdersSelector",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23290,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' shipping address, first name, email, and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23291,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23292,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23293,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23294,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23295,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23296,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23297,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Customer ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23298,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23299,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Regions to filter orders by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 23300,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23301,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23302,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channel IDs to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23303,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23304,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23305,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23288
					]
				},
				{
					"title": "Properties",
					"children": [
						23290,
						23291,
						23292,
						23293,
						23294,
						23295,
						23296,
						23297,
						23298,
						23299,
						23300,
						23301,
						23302,
						23303,
						23304,
						23305
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20835,
					"name": "AdminGetOrdersParams"
				}
			]
		},
		{
			"id": 23306,
			"name": "OrdersReturnItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23307,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23308,
							"name": "new OrdersReturnItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23306,
								"name": "OrdersReturnItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23309,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23310,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23311,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Return Reason to use."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23312,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23307
					]
				},
				{
					"title": "Properties",
					"children": [
						23309,
						23310,
						23311,
						23312
					]
				}
			]
		},
		{
			"id": 22961,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of price list."
					}
				]
			},
			"children": [
				{
					"id": 22962,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is used for a sale."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 22963,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is used to override original prices for specific conditions."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						22962,
						22963
					]
				}
			]
		},
		{
			"id": 22964,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a price list."
					}
				]
			},
			"children": [
				{
					"id": 22965,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is active, meaning its prices are applied to customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 22966,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is a draft, meaning its not yet applied to customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						22965,
						22966
					]
				}
			]
		},
		{
			"id": 22967,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved price lists."
					}
				]
			},
			"children": [
				{
					"id": 22968,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22969,
							"name": "new FilterablePriceListProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22967,
								"name": "FilterablePriceListProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22970,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22971,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search price lists' description, name, and customer group's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22972,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22964,
							"name": "PriceListStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22973,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22974,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price lists by their associated customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 22975,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22976,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 22961,
							"name": "PriceListType",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 22977,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22978,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 22979,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22968
					]
				},
				{
					"title": "Properties",
					"children": [
						22970,
						22971,
						22972,
						22973,
						22974,
						22975,
						22976,
						22977,
						22978,
						22979
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 21025,
					"name": "AdminGetPriceListPaginationParams"
				}
			]
		},
		{
			"id": 22980,
			"name": "AdminPriceListPricesUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22981,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22982,
							"name": "new AdminPriceListPricesUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22980,
								"name": "AdminPriceListPricesUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22983,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22984,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region for which the price is used. This is only required if `currecny_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22985,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code for which the price will be used. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22986,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Variant for which the price is used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22987,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22988,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22989,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22981
					]
				},
				{
					"title": "Properties",
					"children": [
						22983,
						22984,
						22985,
						22986,
						22987,
						22988,
						22989
					]
				}
			]
		},
		{
			"id": 22990,
			"name": "AdminPriceListPricesCreateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 22991,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 22992,
							"name": "new AdminPriceListPricesCreateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22990,
								"name": "AdminPriceListPricesCreateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 22993,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region for which the price is used. This is only required if `currecny_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22994,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code for which the price will be used. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22995,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22996,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Variant for which the price is used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 22997,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 22998,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22991
					]
				},
				{
					"title": "Properties",
					"children": [
						22993,
						22994,
						22995,
						22996,
						22997,
						22998
					]
				}
			]
		},
		{
			"id": 22999,
			"name": "CreatePriceListInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23000,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23001,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23002,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23003,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22961,
								"name": "PriceListType",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 23004,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 22964,
								"name": "PriceListStatus",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 23005,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 22990,
									"name": "AdminPriceListPricesCreateReq",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 23006,
							"name": "customer_groups",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 23007,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 23008,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													23008
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 23009,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 23010,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 23011,
							"name": "includes_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23001,
								23002,
								23003,
								23004,
								23005,
								23006,
								23009,
								23010,
								23011
							]
						}
					]
				}
			}
		},
		{
			"id": 23012,
			"name": "UpdatePriceListInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
											"qualifiedName": "PriceList"
										},
										"name": "PriceList",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "description"
											},
											{
												"type": "literal",
												"value": "starts_at"
											},
											{
												"type": "literal",
												"value": "ends_at"
											},
											{
												"type": "literal",
												"value": "status"
											},
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "includes_tax"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 23013,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23014,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 22980,
											"name": "AdminPriceListPricesUpdateReq",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 23015,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 23016,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 23017,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															23017
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23014,
										23015
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 23018,
			"name": "PriceListPriceUpdateInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23019,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23020,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23021,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23022,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23023,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23024,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23025,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23026,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23020,
								23021,
								23022,
								23023,
								23024,
								23025,
								23026
							]
						}
					]
				}
			}
		},
		{
			"id": 23027,
			"name": "PriceListPriceCreateInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23028,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23029,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23030,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23031,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23032,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23033,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23034,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23029,
								23030,
								23031,
								23032,
								23033,
								23034
							]
						}
					]
				}
			}
		},
		{
			"id": 23035,
			"name": "PriceListLoadConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23036,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23037,
							"name": "include_discount_prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 23038,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23039,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23040,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23041,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23037,
								23038,
								23039,
								23040,
								23041
							]
						}
					]
				}
			}
		},
		{
			"id": 23600,
			"name": "PriceSelectionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices."
					}
				]
			},
			"children": [
				{
					"id": 23601,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23602,
							"name": "new PriceSelectionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23600,
								"name": "PriceSelectionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 22878,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 22877,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 23606,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22879,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 23607,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 22880,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 23603,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23604,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23605,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23601
					]
				},
				{
					"title": "Properties",
					"children": [
						23606,
						23607,
						23603,
						23604,
						23605
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 22876,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 22478,
					"name": "StoreGetProductsPaginationParams"
				},
				{
					"type": "reference",
					"target": 22594,
					"name": "StoreGetVariantsVariantParams"
				},
				{
					"type": "reference",
					"target": 22603,
					"name": "StoreGetVariantsParams"
				},
				{
					"type": "reference",
					"target": 23580,
					"name": "AdminPriceSelectionParams"
				}
			]
		},
		{
			"id": 23580,
			"name": "AdminPriceSelectionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices by a user admin."
					}
				]
			},
			"children": [
				{
					"id": 23581,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23582,
							"name": "new AdminPriceSelectionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23580,
								"name": "AdminPriceSelectionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 23602,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 23601,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 23587,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23606,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 23588,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23607,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 23584,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23603,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 23585,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23604,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 23586,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23605,
						"name": "PriceSelectionParams.currency_code"
					}
				},
				{
					"id": 23583,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a customer ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23581
					]
				},
				{
					"title": "Properties",
					"children": [
						23587,
						23588,
						23584,
						23585,
						23586,
						23583
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23600,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 22032,
					"name": "AdminGetVariantsParams"
				}
			]
		},
		{
			"id": 23752,
			"name": "ProductVariantPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pricing fields for product variants."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 23753,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23754,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
												"qualifiedName": "MoneyAmount"
											},
											"name": "MoneyAmount",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 23755,
									"name": "original_price",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The original price of the variant."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 23756,
									"name": "calculated_price",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The lowest price among the retrieved prices."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 23757,
									"name": "original_price_includes_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the "
											},
											{
												"kind": "code",
												"text": "`original_price`"
											},
											{
												"kind": "text",
												"text": " field includes taxes."
											}
										],
										"blockTags": [
											{
												"tag": "@featureFlag",
												"content": [
													{
														"kind": "text",
														"text": "tax_inclusive_pricing"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 23758,
									"name": "calculated_price_includes_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the "
											},
											{
												"kind": "code",
												"text": "`calculated_price`"
											},
											{
												"kind": "text",
												"text": " field includes taxes."
											}
										],
										"blockTags": [
											{
												"tag": "@featureFlag",
												"content": [
													{
														"kind": "text",
														"text": "tax_inclusive_pricing"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 23759,
									"name": "calculated_price_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either "
											},
											{
												"kind": "code",
												"text": "`default`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`calculated_price`"
											},
											{
												"kind": "text",
												"text": " is the original price, or the type of the price list applied, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23754,
										23755,
										23756,
										23757,
										23758,
										23759
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": 23832,
						"name": "TaxedPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 23832,
			"name": "TaxedPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pricing fields related to taxes."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23833,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23834,
							"name": "original_price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price after applying the tax amount on the original price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23835,
							"name": "calculated_price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price after applying the tax amount on the calculated price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23836,
							"name": "original_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax amount applied to the original price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23837,
							"name": "calculated_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax amount applied to the calculated price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23838,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of tax rates."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23839,
											"name": "TaxServiceRate",
											"package": "@medusajs/medusa"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23834,
								23835,
								23836,
								23837,
								23838
							]
						}
					]
				}
			}
		},
		{
			"id": 23760,
			"name": "ShippingOptionPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23761,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23762,
							"name": "price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Price including taxes"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23763,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of applied tax rates"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23839,
											"name": "TaxServiceRate",
											"package": "@medusajs/medusa"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23764,
							"name": "tax_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The taxes applied."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23762,
								23763,
								23764
							]
						}
					]
				}
			}
		},
		{
			"id": 23619,
			"name": "PricedShippingOption",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
									"qualifiedName": "ShippingOption"
								},
								"name": "ShippingOption",
								"package": "@medusajs/medusa"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": 23760,
						"name": "ShippingOptionPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 23579,
			"name": "PricedVariant",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
									"qualifiedName": "ProductVariant"
								},
								"name": "ProductVariant",
								"package": "@medusajs/medusa"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": 23752,
						"name": "ProductVariantPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 23373,
			"name": "PricedProduct",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Partial",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 23374,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23375,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variants and their prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 23579,
											"name": "PricedVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23375
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 23361,
			"name": "AdminProductCategoriesReqBase",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23362,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23363,
							"name": "new AdminProductCategoriesReqBase",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23361,
								"name": "AdminProductCategoriesReqBase",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23364,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23365,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23366,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23367,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23368,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23362
					]
				},
				{
					"title": "Properties",
					"children": [
						23364,
						23365,
						23366,
						23367,
						23368
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 21084,
					"name": "AdminPostProductCategoriesReq"
				},
				{
					"type": "reference",
					"target": 21099,
					"name": "AdminPostProductCategoriesCategoryReq"
				}
			]
		},
		{
			"id": 23369,
			"name": "ProductBatchProductCategory",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23370,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23371,
							"name": "new ProductBatchProductCategory",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23369,
								"name": "ProductBatchProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23372,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23370
					]
				},
				{
					"title": "Properties",
					"children": [
						23372
					]
				}
			]
		},
		{
			"id": 23477,
			"name": "ProductVariantPricesUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23478,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23479,
							"name": "new ProductVariantPricesUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23477,
								"name": "ProductVariantPricesUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23480,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Price. If provided, the existing price will be updated. Otherwise, a new price will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23481,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region the price will be used in. This is only required if `currency_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23482,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code the price will be used in. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23483,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23484,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23485,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23478
					]
				},
				{
					"title": "Properties",
					"children": [
						23480,
						23481,
						23482,
						23483,
						23484,
						23485
					]
				}
			]
		},
		{
			"id": 23420,
			"name": "ProductVariantPricesCreateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23421,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23422,
							"name": "new ProductVariantPricesCreateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23420,
								"name": "ProductVariantPricesCreateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23423,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region the price will be used in. This is only required if `currency_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23424,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code the price will be used in. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23425,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23426,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23427,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23421
					]
				},
				{
					"title": "Properties",
					"children": [
						23423,
						23424,
						23425,
						23426,
						23427
					]
				}
			]
		},
		{
			"id": 23433,
			"name": "FilterableProductProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 23434,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23435,
							"name": "new FilterableProductProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23433,
								"name": "FilterableProductProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23436,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 23437,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23438,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 23439,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated price lists' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23440,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23441,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23442,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23443,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23444,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23445,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23446,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23447,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23448,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23449,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 23450,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23451,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23452,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 23453,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22824,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23434
					]
				},
				{
					"title": "Properties",
					"children": [
						23436,
						23437,
						23438,
						23439,
						23440,
						23441,
						23442,
						23443,
						23444,
						23445,
						23446,
						23447,
						23448,
						23449,
						23450,
						23451,
						23452,
						23453
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 21305,
					"name": "AdminGetProductsParams"
				}
			]
		},
		{
			"id": 23386,
			"name": "ProductSalesChannelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23387,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23388,
							"name": "new ProductSalesChannelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23386,
								"name": "ProductSalesChannelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23389,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23387
					]
				},
				{
					"title": "Properties",
					"children": [
						23389
					]
				}
			]
		},
		{
			"id": 23390,
			"name": "ProductProductCategoryReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23391,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23392,
							"name": "new ProductProductCategoryReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23390,
								"name": "ProductProductCategoryReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23393,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a Product Category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23391
					]
				},
				{
					"title": "Properties",
					"children": [
						23393
					]
				}
			]
		},
		{
			"id": 23381,
			"name": "ProductTagReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23382,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23383,
							"name": "new ProductTagReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23381,
								"name": "ProductTagReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23384,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Product Tag. If not provided, a new product tag will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23385,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Tag. If the `id` is provided, the value of the existing tag will be updated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23382
					]
				},
				{
					"title": "Properties",
					"children": [
						23384,
						23385
					]
				}
			]
		},
		{
			"id": 23376,
			"name": "ProductTypeReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a product type, used to create or update an existing product type."
					}
				]
			},
			"children": [
				{
					"id": 23377,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23378,
							"name": "new ProductTypeReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23376,
								"name": "ProductTypeReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23379,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type. It's only required when referring to an existing product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23380,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23377
					]
				},
				{
					"title": "Properties",
					"children": [
						23379,
						23380
					]
				}
			]
		},
		{
			"id": 23042,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 23065,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "unknown",
						"name": "(User | Customer) & { customer_id?: string | undefined; userId?: string | undefined; }"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				},
				{
					"id": 23043,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 23066,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 23044,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 23685,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 23045,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 23046,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22758,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 23047,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22758,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 23048,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23049,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23050,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 23051,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 23052,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 23053,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 23054,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 23055,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														23053,
														23054,
														23055
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23050,
										23051
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 23056,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 23057,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 23058,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 23059,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 23060,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 23061,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 23691,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 23062,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 23063,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 23064,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23065,
						23043,
						23044,
						23045,
						23046,
						23047,
						23048,
						23056,
						23057,
						23058,
						23059,
						23060,
						23061,
						23062,
						23063,
						23064
					]
				}
			],
			"typeParameters": [
				{
					"id": 23066,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 23066,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 23067,
					"name": "AuthenticatedMedusaRequest"
				}
			]
		},
		{
			"id": 23067,
			"name": "AuthenticatedMedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 23078,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 23100,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "AuthenticatedMedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23043,
						"name": "MedusaRequest.validatedBody"
					}
				},
				{
					"id": 23079,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 23685,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23044,
						"name": "MedusaRequest.validatedQuery"
					}
				},
				{
					"id": 23080,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23045,
						"name": "MedusaRequest.allowedProperties"
					}
				},
				{
					"id": 23081,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22758,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23046,
						"name": "MedusaRequest.listConfig"
					}
				},
				{
					"id": 23082,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 22758,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23047,
						"name": "MedusaRequest.retrieveConfig"
					}
				},
				{
					"id": 23083,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23084,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23085,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 23086,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 23087,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 23088,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 23089,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 23090,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														23088,
														23089,
														23090
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23085,
										23086
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23048,
						"name": "MedusaRequest.remoteQueryConfig"
					}
				},
				{
					"id": 23091,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23056,
						"name": "MedusaRequest.filterableFields"
					}
				},
				{
					"id": 23092,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23057,
						"name": "MedusaRequest.includes"
					}
				},
				{
					"id": 23093,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23058,
						"name": "MedusaRequest.allowedFields"
					}
				},
				{
					"id": 23094,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23059,
						"name": "MedusaRequest.allowed"
					}
				},
				{
					"id": 23095,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23060,
						"name": "MedusaRequest.errors"
					}
				},
				{
					"id": 23096,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 23691,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23061,
						"name": "MedusaRequest.scope"
					}
				},
				{
					"id": 23097,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23062,
						"name": "MedusaRequest.session"
					}
				},
				{
					"id": 23098,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23063,
						"name": "MedusaRequest.rawBody"
					}
				},
				{
					"id": 23099,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 23064,
						"name": "MedusaRequest.requestId"
					}
				},
				{
					"id": 23068,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 23069,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 23070,
											"name": "customer_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 23071,
											"name": "userId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												23070,
												23071
											]
										}
									]
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": 23065,
						"name": "MedusaRequest.user"
					}
				},
				{
					"id": 23072,
					"name": "auth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23073,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23074,
									"name": "actor_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23075,
									"name": "auth_user_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23076,
									"name": "app_metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 23077,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23074,
										23075,
										23076,
										23077
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23078,
						23079,
						23080,
						23081,
						23082,
						23083,
						23091,
						23092,
						23093,
						23094,
						23095,
						23096,
						23097,
						23098,
						23099,
						23068,
						23072
					]
				}
			],
			"typeParameters": [
				{
					"id": 23100,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 23042,
					"typeArguments": [
						{
							"type": "reference",
							"target": 23100,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "AuthenticatedMedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "MedusaRequest",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 23101,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23102,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 23102,
						"name": "Body",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 23103,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 23104,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23110,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 23111,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23105,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 23106,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 23107,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 23042,
										"typeArguments": [
											{
												"type": "reference",
												"target": 23110,
												"name": "Body",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 23108,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 23101,
										"typeArguments": [
											{
												"type": "reference",
												"target": 23111,
												"name": "Res",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 23109,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 23103,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 23491,
			"name": "ProductBatchSalesChannel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 23492,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23493,
							"name": "new ProductBatchSalesChannel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23491,
								"name": "ProductBatchSalesChannel",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 23494,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						23492
					]
				},
				{
					"title": "Properties",
					"children": [
						23494
					]
				}
			]
		},
		{
			"id": 23112,
			"name": "ScheduledJobConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23117,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23113,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23114,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the job"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23115,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The cron schedule of the job, e.g. "
									},
									{
										"kind": "code",
										"text": "`0 0 * * *`"
									},
									{
										"kind": "text",
										"text": " for running every day at midnight."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23116,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional data object to pass to the job handler"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23117,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23114,
								23115,
								23116
							]
						}
					]
				}
			}
		},
		{
			"id": 23118,
			"name": "ScheduledJobArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23123,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23119,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23120,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23691,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23121,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 23123,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 23122,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23120,
								23121,
								23122
							]
						}
					]
				}
			}
		},
		{
			"id": 23751,
			"name": "ModulesResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 23828,
				"name": "sdkModulesResponse",
				"package": "@medusajs/types",
				"qualifiedName": "ModulesResponse"
			}
		},
		{
			"id": 23566,
			"name": "ExtendedStoreDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/store.ts",
							"qualifiedName": "Store"
						},
						"name": "Store",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 23567,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23568,
									"name": "payment_providers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The store's payment providers."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
												"qualifiedName": "PaymentProvider"
											},
											"name": "PaymentProvider",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 23569,
									"name": "fulfillment_providers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The store's fulfillment providers."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/fulfillment-provider.ts",
												"qualifiedName": "FulfillmentProvider"
											},
											"name": "FulfillmentProvider",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 23570,
									"name": "feature_flags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The feature flags enabled in the store's backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 23747,
										"name": "FeatureFlagsResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 23571,
									"name": "modules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The modules installed in the store's backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 23751,
										"name": "ModulesResponse",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23568,
										23569,
										23570,
										23571
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 23702,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 23703,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23703
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 23124,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23125,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23126,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 23127,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 23702,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23126,
								23127
							]
						}
					]
				}
			}
		},
		{
			"id": 23128,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23134,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23129,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23130,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23134,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 23131,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23132,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23691,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23133,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23130,
								23131,
								23132,
								23133
							]
						}
					]
				}
			}
		},
		{
			"id": 23839,
			"name": "TaxServiceRate",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate object as configured in Medusa. These may have an unspecified\nnumerical rate as they may be used for lookup purposes in the tax provider\nplugin."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23840,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23841,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23842,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23843,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23841,
								23842,
								23843
							]
						}
					]
				}
			}
		},
		{
			"id": 23575,
			"name": "UserRole",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 23576,
					"name": "MEMBER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "member"
					}
				},
				{
					"id": 23577,
					"name": "ADMIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "admin"
					}
				},
				{
					"id": 23578,
					"name": "DEVELOPER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "developer"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						23576,
						23577,
						23578
					]
				}
			]
		},
		{
			"id": 23685,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 23686,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23687,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23688,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23689,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23690,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Field to sort items in the list by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23686,
						23687,
						23688,
						23689,
						23690
					]
				}
			]
		},
		{
			"id": 23229,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields included in the response if it's paginated."
					}
				]
			},
			"children": [
				{
					"id": 23230,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit applied on the retrieved items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23231,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items skipped before retrieving the list of items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23232,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total count of items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23230,
						23231,
						23232
					]
				}
			],
			"typeParameters": [
				{
					"id": 23233,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 23535,
			"name": "DeleteResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fields returned in the response of a DELETE request."
					}
				]
			},
			"typeParameters": [
				{
					"id": 23540,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23536,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23537,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23538,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23540,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"defaultValue": "stock_location"
						},
						{
							"id": 23539,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23537,
								23538,
								23539
							]
						}
					]
				}
			}
		},
		{
			"id": 23844,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 23845,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23846,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23847,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23848,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23849,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`cookie_secret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23850,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23845,
						23846,
						23847,
						23848,
						23849,
						23850
					]
				}
			]
		},
		{
			"id": 23851,
			"name": "HttpCompressionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "HTTP compression configurations."
					}
				]
			},
			"children": [
				{
					"id": 23852,
					"name": "enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether HTTP compression is enabled. By default, it's "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23853,
					"name": "level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
							},
							{
								"kind": "code",
								"text": "`6`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23854,
					"name": "memLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
							},
							{
								"kind": "code",
								"text": "`8`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23855,
					"name": "threshold",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
							},
							{
								"kind": "code",
								"text": "`1024`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23852,
						23853,
						23854,
						23855
					]
				}
			]
		},
		{
			"id": 23765,
			"name": "ProjectConfigOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
					}
				]
			},
			"children": [
				{
					"id": 23766,
					"name": "store_cors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
							},
							{
								"kind": "code",
								"text": "`store_cors`"
							},
							{
								"kind": "text",
								"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
							},
							{
								"kind": "code",
								"text": "`http://localhost:8000`"
							},
							{
								"kind": "text",
								"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
							},
							{
								"kind": "code",
								"text": "`.example.com`"
							},
							{
								"kind": "text",
								"text": ". The regex pattern that the backend tests for is "
							},
							{
								"kind": "code",
								"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Some example values of common use cases:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, set the configuration in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: process.env.STORE_CORS,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you’re adding the value directly within "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ", make sure to add an extra escaping "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": " for every backslash in the pattern. For example:\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: \"/vercel\\\\.app$/\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23767,
					"name": "admin_cors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
							},
							{
								"kind": "code",
								"text": "`admin_cors`"
							},
							{
								"kind": "text",
								"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
							},
							{
								"kind": "code",
								"text": "`http://localhost:7001`"
							},
							{
								"kind": "text",
								"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
							},
							{
								"kind": "code",
								"text": "`.example.com`"
							},
							{
								"kind": "text",
								"text": ". The regex pattern that the backend tests for is "
							},
							{
								"kind": "code",
								"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Some example values of common use cases:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, set the configuration in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: process.env.ADMIN_CORS,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you’re adding the value directly within "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ", make sure to add an extra escaping "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": " for every backslash in the pattern. For example:\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23768,
					"name": "auth_cors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
							},
							{
								"kind": "code",
								"text": "`auth_cors`"
							},
							{
								"kind": "text",
								"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
							},
							{
								"kind": "code",
								"text": "`/auth`"
							},
							{
								"kind": "text",
								"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
							},
							{
								"kind": "code",
								"text": "`http://localhost:7001`"
							},
							{
								"kind": "text",
								"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
							},
							{
								"kind": "code",
								"text": "`.example.com`"
							},
							{
								"kind": "text",
								"text": ". The regex pattern that the backend tests for is "
							},
							{
								"kind": "code",
								"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Some example values of common use cases:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, set the configuration in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: process.env.AUTH_CORS,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you’re adding the value directly within "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ", make sure to add an extra escaping "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": " for every backslash in the pattern. For example:\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23769,
					"name": "cookie_secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A random string used to create cookie tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
							},
							{
								"kind": "code",
								"text": "`supersecret`"
							},
							{
								"kind": "text",
								"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    cookie_secret: process.env.COOKIE_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23770,
					"name": "jwt_secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A random string used to create authentication tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
							},
							{
								"kind": "code",
								"text": "`supersecret`"
							},
							{
								"kind": "text",
								"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jwt_secret: process.env.JWT_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23771,
					"name": "database_database",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the database to connect to. If specified in "
							},
							{
								"kind": "code",
								"text": "`database_url`"
							},
							{
								"kind": "text",
								"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_database: process.env.DATABASE_DATABASE ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23772,
					"name": "database_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
							},
							{
								"kind": "code",
								"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
							},
							{
								"kind": "text",
								"text": "\n\nWhere:\n\n- "
							},
							{
								"kind": "code",
								"text": "`[user]`"
							},
							{
								"kind": "text",
								"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
							},
							{
								"kind": "code",
								"text": "`postgres`"
							},
							{
								"kind": "text",
								"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
							},
							{
								"kind": "code",
								"text": "`[:password]`"
							},
							{
								"kind": "text",
								"text": ": an optional password for the user. When provided, make sure to put "
							},
							{
								"kind": "code",
								"text": "`:`"
							},
							{
								"kind": "text",
								"text": " before the password.\n- "
							},
							{
								"kind": "code",
								"text": "`[host]`"
							},
							{
								"kind": "text",
								"text": ": (required) your PostgreSQL host. When run locally, it should be "
							},
							{
								"kind": "code",
								"text": "`localhost`"
							},
							{
								"kind": "text",
								"text": ".\n- "
							},
							{
								"kind": "code",
								"text": "`[:port]`"
							},
							{
								"kind": "text",
								"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
							},
							{
								"kind": "code",
								"text": "`5432`"
							},
							{
								"kind": "text",
								"text": ". When provided, make sure to put "
							},
							{
								"kind": "code",
								"text": "`:`"
							},
							{
								"kind": "text",
								"text": " before the port.\n- "
							},
							{
								"kind": "code",
								"text": "`[dbname]`"
							},
							{
								"kind": "text",
								"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "For example, set the following database URL in your environment variables:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, use the value in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_url: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23773,
					"name": "database_schema",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
							},
							{
								"kind": "code",
								"text": "`public`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_schema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n}\n```"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23774,
					"name": "database_logging",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
							},
							{
								"kind": "code",
								"text": "`all`"
							},
							{
								"kind": "text",
								"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
							},
							{
								"kind": "code",
								"text": "`query`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`schema`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`error`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`warn`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`info`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`log`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`migration`"
							},
							{
								"kind": "text",
								"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ", meaning no database messages are logged."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_logging: [\n      \"query\", \"error\",\n    ],\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
							"qualifiedName": "LoggerOptions"
						},
						"name": "LoggerOptions",
						"package": "typeorm"
					}
				},
				{
					"id": 23776,
					"name": "database_extra",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that includes additional configurations to pass to the database connection. You can pass any configuration. One defined configuration to pass is\n"
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
							},
							{
								"kind": "code",
								"text": "`rejectUnauthorized`"
							},
							{
								"kind": "text",
								"text": " attribute of "
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " object to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nDuring development, it’s recommended not to pass this option."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_extra:\n      process.env.NODE_ENV !== \"development\"\n        ? { ssl: { rejectUnauthorized: false } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 23777,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 23778,
											"name": "ssl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure support for TLS/SSL connection"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 23779,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 23780,
															"name": "rejectUnauthorized",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																	}
																]
															},
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																23780
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												23778
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 23781,
					"name": "database_driver_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that includes additional configurations to pass to the database connection for v2. You can pass any configuration. One defined configuration to pass is\n"
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
							},
							{
								"kind": "code",
								"text": "`rejectUnauthorized`"
							},
							{
								"kind": "text",
								"text": " attribute of "
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " object to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nDuring development, it’s recommended not to pass this option."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_driver_options:\n      process.env.NODE_ENV !== \"development\"\n        ? { connection: { ssl: { rejectUnauthorized: false } } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 23782,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 23783,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 23784,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 23785,
															"name": "ssl",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Configure support for TLS/SSL connection"
																	}
																]
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 23786,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 23787,
																			"name": "rejectUnauthorized",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																					}
																				]
																			},
																			"type": {
																				"type": "literal",
																				"value": false
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				23787
																			]
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																23785
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												23783
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 23788,
					"name": "redis_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
							},
							{
								"kind": "code",
								"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
							},
							{
								"kind": "text",
								"text": "\n\nFor a local Redis installation, the connection URL should be "
							},
							{
								"kind": "code",
								"text": "`redis://localhost:6379`"
							},
							{
								"kind": "text",
								"text": " unless you’ve made any changes to the Redis configuration during installation."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_url: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23789,
					"name": "redis_prefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prefix set on all keys stored in Redis. The default value is "
							},
							{
								"kind": "code",
								"text": "`sess:`"
							},
							{
								"kind": "text",
								"text": ".\n\nIf this configuration option is provided, it is prepended to "
							},
							{
								"kind": "code",
								"text": "`sess:`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_prefix: process.env.REDIS_PREFIX ||\n      \"medusa:\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23790,
					"name": "redis_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_options: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
							"qualifiedName": "RedisOptions"
						},
						"name": "RedisOptions",
						"package": "ioredis"
					}
				},
				{
					"id": 23791,
					"name": "session_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    session_options: {\n      name: process.env.SESSION_NAME ||\n        \"custom\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23844,
						"name": "SessionOptions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23792,
					"name": "http_compression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
							},
							{
								"kind": "code",
								"text": "`\"x-no-compression\": true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    http_compression: {\n      enabled: true,\n      level: 6,\n      memLevel: 8,\n      threshold: 1024,\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23851,
						"name": "HttpCompressionOptions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23793,
					"name": "jobs_batch_size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configure the number of staged jobs that are polled from the database. Default is "
							},
							{
								"kind": "code",
								"text": "`1000`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jobs_batch_size: 100\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 23794,
					"name": "worker_mode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configure the application's worker mode. Default is "
							},
							{
								"kind": "code",
								"text": "`shared`"
							},
							{
								"kind": "text",
								"text": ".\n\n- Use "
							},
							{
								"kind": "code",
								"text": "`shared`"
							},
							{
								"kind": "text",
								"text": " to run the application in a single process.\n- Use "
							},
							{
								"kind": "code",
								"text": "`worker`"
							},
							{
								"kind": "text",
								"text": " to run the a worker process only.\n- Use "
							},
							{
								"kind": "code",
								"text": "`server`"
							},
							{
								"kind": "text",
								"text": " to run the application server only.\n\nLearn more in [this guide](https://docs.medusajs.com/development/medusa-worker)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    worker_mode: \"shared\"\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "shared"
							},
							{
								"type": "literal",
								"value": "worker"
							},
							{
								"type": "literal",
								"value": "server"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23766,
						23767,
						23768,
						23769,
						23770,
						23771,
						23772,
						23773,
						23774,
						23776,
						23781,
						23788,
						23789,
						23790,
						23791,
						23792,
						23793,
						23794
					]
				}
			]
		},
		{
			"id": 23677,
			"name": "ConfigModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The configurations for your Medusa backend are in "
					},
					{
						"kind": "code",
						"text": "`medusa-config.js`"
					},
					{
						"kind": "text",
						"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
					},
					{
						"kind": "code",
						"text": "`medusa-config.js`"
					},
					{
						"kind": "text",
						"text": " exports an object having the following properties:\n\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "projectConfig",
						"target": 23678,
						"tsLinkText": "projectConfig"
					},
					{
						"kind": "text",
						"text": ": (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "plugins",
						"target": 23679,
						"tsLinkText": "plugins"
					},
					{
						"kind": "text",
						"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "modules",
						"target": 23683,
						"tsLinkText": "modules"
					},
					{
						"kind": "text",
						"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "featureFlags",
						"target": 23684,
						"tsLinkText": "featureFlags"
					},
					{
						"kind": "text",
						"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
					},
					{
						"kind": "code",
						"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig,\n  plugins,\n  modules,\n  featureFlags,\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
					},
					{
						"kind": "code",
						"text": "`medusa-config.js`"
					},
					{
						"kind": "text",
						"text": ".\n\nDuring development, you can set your environment variables in the "
					},
					{
						"kind": "code",
						"text": "`.env`"
					},
					{
						"kind": "text",
						"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 23678,
					"name": "projectConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23765,
						"name": "ProjectConfigOptions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23679,
					"name": "plugins",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "On your Medusa backend, you can use [Plugins](https://docs.medusajs.com/development/plugins/overview) to add custom features or integrate third-party services.\nFor example, installing a plugin to use Stripe as a payment processor.\n\nAside from installing the plugin with NPM, you need to pass the plugin you installed into the "
							},
							{
								"kind": "code",
								"text": "`plugins`"
							},
							{
								"kind": "text",
								"text": " array defined in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nThe items in the array can either be:\n\n- A string, which is the name of the plugin to add. You can pass a plugin as a string if it doesn’t require any configurations.\n- An object having the following properties:\n    - "
							},
							{
								"kind": "code",
								"text": "`resolve`"
							},
							{
								"kind": "text",
								"text": ": The name of the plugin.\n    - "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": ": An object that includes the plugin’s options. These options vary for each plugin, and you should refer to the plugin’s documentation for available options."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  plugins: [\n    `medusa-my-plugin-1`,\n    {\n      resolve: `medusa-my-plugin`,\n      options: {\n        apiKey: process.env.MY_API_KEY ||\n          `test`,\n      },\n    },\n    // ...\n  ],\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 23680,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 23681,
												"name": "resolve",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 23682,
												"name": "options",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													23681,
													23682
												]
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 23683,
					"name": "modules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nThe keys of the "
							},
							{
								"kind": "code",
								"text": "`modules`"
							},
							{
								"kind": "text",
								"text": " configuration object refer to the type of module. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled;\n2. Or a string value indicating the name of the module to be used for the module type. This can be used if the module does not require any options;\n3. Or an object having the following properties, but typically you would mainly use the "
							},
							{
								"kind": "code",
								"text": "`resolve`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " properties only:\n    1. "
							},
							{
								"kind": "code",
								"text": "`resolve`"
							},
							{
								"kind": "text",
								"text": ": a string indicating the name of the module.\n    2. "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": ": an object indicating the options to pass to the module. These options vary for each module, and you should refer to the module’s documentation for details on them.\n    3. "
							},
							{
								"kind": "code",
								"text": "`resources`"
							},
							{
								"kind": "text",
								"text": ": a string indicating whether the module shares the dependency container with the Medusa core. Its value can either be "
							},
							{
								"kind": "code",
								"text": "`shared`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`isolated`"
							},
							{
								"kind": "text",
								"text": ". Refer to the [Modules documentation](https://docs.medusajs.com/development/modules/create#module-scope) for more details.\n    4. "
							},
							{
								"kind": "code",
								"text": "`alias`"
							},
							{
								"kind": "text",
								"text": ": a string indicating a unique alias to register the module under. Other modules can’t use the same alias.\n    5. "
							},
							{
								"kind": "code",
								"text": "`main`"
							},
							{
								"kind": "text",
								"text": ": a boolean value indicating whether this module is the main registered module. This is useful when an alias is used."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  modules: {\n    eventBus: {\n      resolve: \"@medusajs/event-bus-local\",\n    },\n    cacheService: {\n      resolve: \"@medusajs/cache-redis\",\n      options: {\n        redisUrl: process.env.CACHE_REDIS_URL,\n        ttl: 30,\n      },\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 23795,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": 23806,
														"name": "ExternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 23684,
					"name": "featureFlags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nIf you want to use the environment variables method, learn more about it in the [Feature Flags documentation](https://docs.medusajs.com/development/feature-flags/toggle#method-one-using-environment-variables).\n\nThe "
							},
							{
								"kind": "code",
								"text": "`featureFlags`"
							},
							{
								"kind": "text",
								"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/master/packages/medusa/src/loaders/feature-flags)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  featureFlags: {\n    product_categories: true,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to [run migrations](https://docs.medusajs.com/development/entities/migrations/overview#migrate-command) as it may require making changes to the database.\n\n:::"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23678,
						23679,
						23683,
						23684
					]
				}
			]
		},
		{
			"id": 23691,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
							"qualifiedName": "AwilixContainer"
						},
						"name": "AwilixContainer",
						"package": "awilix"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 23692,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				]
			}
		},
		{
			"id": 23572,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 23573,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23574,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23573,
						23574
					]
				}
			]
		},
		{
			"id": 24050,
			"name": "FulfillmentAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment address details."
					}
				]
			},
			"children": [
				{
					"id": 24051,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24052,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24053,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24054,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24055,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24056,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first line of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24057,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second line of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24058,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24059,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 2 character country code of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24060,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24061,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24062,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24063,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 24064,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the address."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 24065,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the address."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 24066,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						24051,
						24052,
						24053,
						24054,
						24055,
						24056,
						24057,
						24058,
						24059,
						24060,
						24061,
						24062,
						24063,
						24064,
						24065,
						24066
					]
				}
			]
		},
		{
			"id": 24067,
			"name": "FulfillmentItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment item details."
					}
				]
			},
			"children": [
				{
					"id": 24068,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24069,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24070,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 24071,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sku of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24072,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24073,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24074,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated inventory item's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 24075,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24076,
					"name": "fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23974,
						"name": "FulfillmentDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 24077,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 24078,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 24079,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						24068,
						24069,
						24070,
						24071,
						24072,
						24073,
						24074,
						24075,
						24076,
						24077,
						24078,
						24079
					]
				}
			]
		},
		{
			"id": 24080,
			"name": "FulfillmentLabelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment label details."
					}
				]
			},
			"children": [
				{
					"id": 24081,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24082,
					"name": "tracking_number",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking number of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24083,
					"name": "tracking_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking URL of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24084,
					"name": "label_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24085,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 24086,
					"name": "fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23974,
						"name": "FulfillmentDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 24087,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 24088,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 24089,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment label."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						24081,
						24082,
						24083,
						24084,
						24085,
						24086,
						24087,
						24088,
						24089
					]
				}
			]
		},
		{
			"id": 23944,
			"name": "FulfillmentProviderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment provider details."
					}
				]
			},
			"children": [
				{
					"id": 23945,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23946,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23947,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23948,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping options associated with the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23897,
							"name": "ShippingOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23949,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23950,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23951,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23945,
						23946,
						23947,
						23948,
						23949,
						23950,
						23951
					]
				}
			]
		},
		{
			"id": 23738,
			"name": "FulfillmentSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment set details."
					}
				]
			},
			"children": [
				{
					"id": 23739,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23740,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23741,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23742,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23743,
					"name": "service_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The service zones associated with the fulfillment set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23818,
							"name": "ServiceZoneDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23744,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23745,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23746,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment set."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23739,
						23740,
						23741,
						23742,
						23743,
						23744,
						23745,
						23746
					]
				}
			]
		},
		{
			"id": 23974,
			"name": "FulfillmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fulfillment details."
					}
				]
			},
			"children": [
				{
					"id": 23975,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23976,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23977,
					"name": "packed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was packed."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23978,
					"name": "shipped_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was shipped."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23979,
					"name": "delivered_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was delivered."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23980,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the fulfillment was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23981,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the fulfillment provider to process\nthe fulfillment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23982,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23983,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 23984,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23985,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 23897,
								"name": "ShippingOptionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 23986,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23944,
						"name": "FulfillmentProviderDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23987,
					"name": "delivery_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment address used for delivery."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 24050,
						"name": "FulfillmentAddressDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23988,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items of the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 24067,
							"name": "FulfillmentItemDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23989,
					"name": "labels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The labels of the fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 24080,
							"name": "FulfillmentLabelDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23990,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23991,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23992,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the fulfillment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23975,
						23976,
						23977,
						23978,
						23979,
						23980,
						23981,
						23982,
						23983,
						23984,
						23985,
						23986,
						23987,
						23988,
						23989,
						23990,
						23991,
						23992
					]
				}
			]
		},
		{
			"id": 23933,
			"name": "GeoZoneType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of the geo zone."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "country"
					},
					{
						"type": "literal",
						"value": "province"
					},
					{
						"type": "literal",
						"value": "city"
					},
					{
						"type": "literal",
						"value": "zip"
					}
				]
			}
		},
		{
			"id": 23886,
			"name": "GeoZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The geo zone details."
					}
				]
			},
			"children": [
				{
					"id": 23887,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23888,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23933,
						"name": "GeoZoneType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23889,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country code of the geo zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23890,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province code of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 23891,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 23892,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal expression of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23893,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23894,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23895,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the geo zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23896,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the geo zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23887,
						23888,
						23889,
						23890,
						23891,
						23892,
						23893,
						23894,
						23895,
						23896
					]
				}
			]
		},
		{
			"id": 23818,
			"name": "ServiceZoneDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The service zone details."
					}
				]
			},
			"children": [
				{
					"id": 23819,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23820,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the service zone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23821,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23822,
					"name": "fulfillment_sets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillment sets assoiated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23738,
							"name": "FulfillmentSetDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23823,
					"name": "geo_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zones assoiated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23886,
							"name": "GeoZoneDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23824,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping options assoiated with the service zone."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23897,
							"name": "ShippingOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23825,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the service zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23826,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the service zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23827,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the service zone."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23819,
						23820,
						23821,
						23822,
						23823,
						23824,
						23825,
						23826,
						23827
					]
				}
			]
		},
		{
			"id": 23962,
			"name": "ShippingOptionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option rule details."
					}
				]
			},
			"children": [
				{
					"id": 23963,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23964,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23965,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the shipping option rule."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nin\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23966,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 23967,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 23968,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The values of the shipping option rule."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												23968
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 23969,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23970,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23897,
						"name": "ShippingOptionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23971,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23972,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23973,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping option rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23963,
						23964,
						23965,
						23966,
						23969,
						23970,
						23971,
						23972,
						23973
					]
				}
			]
		},
		{
			"id": 23952,
			"name": "ShippingOptionTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option type details."
					}
				]
			},
			"children": [
				{
					"id": 23953,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23954,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23955,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23956,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the shipping option type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23957,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23958,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23897,
						"name": "ShippingOptionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23959,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping option type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23960,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping option type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23961,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping option type."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23953,
						23954,
						23955,
						23956,
						23957,
						23958,
						23959,
						23960,
						23961
					]
				}
			]
		},
		{
			"id": 23934,
			"name": "ShippingOptionPriceType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option's price type.\n\n- Use "
					},
					{
						"kind": "code",
						"text": "`calculated`"
					},
					{
						"kind": "text",
						"text": " if the shipping option's price amount is calculated by the fulfillment provider.\n- Use "
					},
					{
						"kind": "code",
						"text": "`flat_rate`"
					},
					{
						"kind": "text",
						"text": " if the shipping option's price is always the same amount."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "calculated"
					},
					{
						"type": "literal",
						"value": "flat"
					}
				]
			}
		},
		{
			"id": 23897,
			"name": "ShippingOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option details."
					}
				]
			},
			"children": [
				{
					"id": 23898,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23899,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23900,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping option's price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23934,
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23901,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23902,
					"name": "shipping_profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping profile's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23903,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23904,
					"name": "shipping_option_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option type's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 23905,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the associated fulfillment provider to process the shipping option\nand, later, its associated fulfillments."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23906,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23907,
					"name": "service_zone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated service zone."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23818,
						"name": "ServiceZoneDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23908,
					"name": "shipping_profile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping profile."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23935,
						"name": "ShippingProfileDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23909,
					"name": "fulfillment_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23944,
						"name": "FulfillmentProviderDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23910,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping option type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 23952,
						"name": "ShippingOptionTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 23911,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23962,
							"name": "ShippingOptionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23912,
					"name": "fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillments associated with the shipping option."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23974,
							"name": "FulfillmentDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23913,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23914,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23915,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23898,
						23899,
						23900,
						23901,
						23902,
						23903,
						23904,
						23905,
						23906,
						23907,
						23908,
						23909,
						23910,
						23911,
						23912,
						23913,
						23914,
						23915
					]
				}
			]
		},
		{
			"id": 23935,
			"name": "ShippingProfileDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping profile details."
					}
				]
			},
			"children": [
				{
					"id": 23936,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23937,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23938,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the shipping profile."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 23939,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 23940,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping options associated with the shipping profile."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 23897,
							"name": "ShippingOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 23941,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the shipping profile."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23942,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the shipping profile."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 23943,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the shipping profile."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23936,
						23937,
						23938,
						23939,
						23940,
						23941,
						23942,
						23943
					]
				}
			]
		},
		{
			"id": 23197,
			"name": "InventoryItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23198,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23199,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23200,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Stock Keeping Unit (SKU) code of the Inventory Item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23201,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23202,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23203,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 23204,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23205,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23206,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23207,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23208,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23209,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23210,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Title of the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23211,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23212,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Thumbnail for the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23213,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23214,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23215,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23216,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23199,
								23200,
								23201,
								23202,
								23203,
								23204,
								23205,
								23206,
								23207,
								23208,
								23209,
								23210,
								23211,
								23212,
								23213,
								23214,
								23215,
								23216
							]
						}
					]
				}
			}
		},
		{
			"id": 23495,
			"name": "ReservationItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a reservation of an inventory item at a stock location"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23496,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23497,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23498,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the location of the reservation"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23499,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the inventory item the reservation relates to"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23500,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23501,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23502,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the reservation item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23503,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UserId of user who created the reservation item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23504,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23505,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23506,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23507,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23497,
								23498,
								23499,
								23500,
								23501,
								23502,
								23503,
								23504,
								23505,
								23506,
								23507
							]
						}
					]
				}
			}
		},
		{
			"id": 23217,
			"name": "InventoryLevelDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23218,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23219,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23220,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23221,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the item location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23222,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the total stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23223,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the reserved stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23224,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the incoming stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 23225,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23226,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23227,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23228,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23219,
								23220,
								23221,
								23222,
								23223,
								23224,
								23225,
								23226,
								23227,
								23228
							]
						}
					]
				}
			}
		},
		{
			"id": 23993,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 23994,
					"name": "panic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23995,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 23996,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 23997,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 23998,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 23999,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24000,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24001,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24002,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24003,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24004,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24005,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24006,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24007,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24008,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24009,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24010,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24011,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24012,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 24013,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24014,
					"name": "progress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24015,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24016,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24017,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 24018,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24019,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24020,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24021,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24022,
											"name": "messageOrError",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 24023,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24024,
					"name": "failure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24025,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24026,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24027,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 24028,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24029,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24030,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24031,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24032,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 24033,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24034,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24035,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24036,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24037,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24038,
					"name": "info",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24039,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24040,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24041,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24042,
					"name": "warn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24043,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24044,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24045,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 24046,
					"name": "log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24047,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 24048,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24049,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						23994,
						23998,
						24002,
						24006,
						24009,
						24014,
						24019,
						24024,
						24029,
						24034,
						24038,
						24042,
						24046
					]
				}
			]
		},
		{
			"id": 23916,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23920,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23917,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23918,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 23919,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 23920,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 23856,
			"name": "INTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "internal"
			}
		},
		{
			"id": 23885,
			"name": "EXTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "external"
			}
		},
		{
			"id": 23857,
			"name": "MODULE_RESOURCE_TYPE",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 23858,
					"name": "SHARED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "shared"
					}
				},
				{
					"id": 23859,
					"name": "ISOLATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "isolated"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						23858,
						23859
					]
				}
			]
		},
		{
			"id": 23795,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23796,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23797,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23856,
								"name": "MODULE_SCOPE.INTERNAL",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23798,
							"name": "resources",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23857,
								"name": "MODULE_RESOURCE_TYPE",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23799,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 23800,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 23860,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 23801,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 23871,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 23802,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 23803,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23804,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 23805,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23797,
								23798,
								23799,
								23800,
								23801,
								23802,
								23803,
								23804,
								23805
							]
						}
					]
				}
			}
		},
		{
			"id": 23806,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23807,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23808,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23885,
								"name": "MODULE_SCOPE.EXTERNAL",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23809,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 23860,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 23810,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 23811,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 23812,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 23813,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 23814,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												23812,
												23813,
												23814
											]
										}
									]
								}
							}
						},
						{
							"id": 23815,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 23816,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23817,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23808,
								23809,
								23810,
								23815,
								23816,
								23817
							]
						}
					]
				}
			}
		},
		{
			"id": 23860,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23861,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23862,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23863,
							"name": "registrationName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23864,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 23865,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23866,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 23867,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 23868,
							"name": "isLegacy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 23869,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 23870,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 23795,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 23806,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23862,
								23863,
								23864,
								23865,
								23866,
								23867,
								23868,
								23869,
								23870
							]
						}
					]
				}
			}
		},
		{
			"id": 23926,
			"name": "LoaderOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 23932,
					"name": "TOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23927,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23928,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23691,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23929,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 23932,
								"name": "TOptions",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 23930,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 23993,
								"name": "Logger",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23931,
							"name": "dataLoaderOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23928,
								23929,
								23930,
								23931
							]
						}
					]
				}
			}
		},
		{
			"id": 23921,
			"name": "ModuleLoaderFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23922,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 23923,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 23924,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 23926,
										"name": "LoaderOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 23925,
									"name": "moduleDeclaration",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 23795,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 23828,
			"name": "ModulesResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 23829,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 23830,
								"name": "module",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"id": 23831,
								"name": "resolution",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "literal",
											"value": false
										}
									]
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									23830,
									23831
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 23871,
			"name": "ModuleExports",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23872,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23873,
							"name": "service",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 23916,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23874,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23921,
									"name": "ModuleLoaderFunction",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 23875,
							"name": "migrations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 23876,
							"name": "models",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23916,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Constructor",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 23877,
							"name": "runMigrations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 23878,
									"name": "runMigrations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 23879,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 23926,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 23880,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 23795,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 23881,
							"name": "revertMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 23882,
									"name": "revertMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 23883,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 23926,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 23884,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 23795,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23873,
								23874,
								23875,
								23876
							]
						},
						{
							"title": "Methods",
							"children": [
								23877,
								23881
							]
						}
					]
				}
			}
		},
		{
			"id": 23723,
			"name": "StockLocationAddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a Stock Location Address"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23724,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23725,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23726,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 1 of the stock location address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23727,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 2 of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23728,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23729,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code of the stock location address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23730,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23731,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23732,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23733,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23734,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23735,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23736,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23737,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23725,
								23726,
								23727,
								23728,
								23729,
								23730,
								23731,
								23732,
								23733,
								23734,
								23735,
								23736,
								23737
							]
						}
					]
				}
			}
		},
		{
			"id": 23524,
			"name": "StockLocationDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a Stock Location"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 23525,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 23526,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23527,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23528,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 23529,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23530,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address of the stock location."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 23723,
								"name": "StockLocationAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 23531,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fulfillment sets for the location"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 23738,
									"name": "FulfillmentSetDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 23532,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the stock location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23533,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the stock location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 23534,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the stock location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								23526,
								23527,
								23528,
								23529,
								23530,
								23531,
								23532,
								23533,
								23534
							]
						}
					]
				}
			}
		},
		{
			"id": 23541,
			"name": "StockLocationExpandedDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 23524,
						"name": "StockLocationDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 23542,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 23543,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of sales channels."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										23543
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 23589,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 23590,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				},
				{
					"id": 23591,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						23590,
						23591
					]
				}
			]
		},
		{
			"id": 23347,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 23348,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 23349,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						23348,
						23349
					]
				}
			]
		},
		{
			"id": 23350,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 23351,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 23352,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						23351,
						23352
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				22708,
				22961,
				22964,
				23575,
				23857,
				23589,
				23347,
				23350
			]
		},
		{
			"title": "Enumeration Members",
			"children": [
				23856,
				23885
			]
		},
		{
			"title": "Classes",
			"children": [
				23637,
				19909,
				19914,
				19925,
				19937,
				19943,
				19951,
				19982,
				19986,
				19992,
				19997,
				20010,
				20014,
				20026,
				20035,
				20047,
				20051,
				20056,
				20060,
				20065,
				20079,
				20091,
				20100,
				23157,
				20113,
				20278,
				20284,
				20140,
				20149,
				20154,
				20162,
				20175,
				20184,
				20189,
				20195,
				20289,
				20294,
				20200,
				20210,
				20205,
				20215,
				20230,
				20238,
				20243,
				20251,
				20263,
				20273,
				20314,
				23186,
				23182,
				23174,
				20328,
				20336,
				20356,
				23193,
				20367,
				20383,
				20391,
				20398,
				20431,
				20448,
				20453,
				20459,
				20464,
				20469,
				20491,
				20497,
				20513,
				20518,
				20523,
				20535,
				20541,
				20546,
				20558,
				20564,
				20570,
				20582,
				20594,
				20610,
				20616,
				20622,
				20627,
				20638,
				20646,
				20642,
				20661,
				20667,
				20672,
				20677,
				20693,
				20698,
				20688,
				20703,
				20708,
				20713,
				20718,
				20741,
				20746,
				23243,
				23253,
				23234,
				23248,
				20723,
				20736,
				20758,
				23260,
				20765,
				20770,
				20776,
				20797,
				20803,
				23265,
				23272,
				23282,
				23277,
				20781,
				20792,
				20808,
				20814,
				20819,
				20825,
				20830,
				20835,
				20859,
				20864,
				20871,
				23313,
				20876,
				20886,
				20891,
				23327,
				23318,
				23704,
				23709,
				20898,
				23334,
				23339,
				20903,
				20916,
				20931,
				20936,
				20948,
				20953,
				20978,
				23353,
				20983,
				20995,
				20999,
				21003,
				21025,
				23357,
				21042,
				21115,
				21119,
				21084,
				21094,
				21124,
				21128,
				21064,
				21069,
				21099,
				21110,
				21138,
				21143,
				21160,
				21246,
				23714,
				23394,
				23398,
				21250,
				23428,
				21278,
				21300,
				21305,
				21331,
				21346,
				21351,
				23718,
				23454,
				21355,
				23486,
				21381,
				21413,
				21417,
				21421,
				21425,
				21429,
				21442,
				21464,
				21468,
				21472,
				21476,
				21516,
				21455,
				21460,
				21488,
				21501,
				21534,
				21543,
				21560,
				21576,
				21584,
				21604,
				23508,
				21609,
				21623,
				21659,
				21627,
				21633,
				21637,
				21663,
				21653,
				23513,
				21676,
				21691,
				23518,
				21709,
				21728,
				21734,
				23544,
				21751,
				21758,
				21763,
				21768,
				23555,
				21782,
				21789,
				21807,
				21825,
				21887,
				21891,
				21896,
				21900,
				21905,
				21909,
				21914,
				21924,
				21855,
				21839,
				21860,
				21864,
				21869,
				21873,
				21878,
				21882,
				21929,
				21939,
				21951,
				21956,
				21960,
				21990,
				21998,
				21986,
				21980,
				22016,
				22050,
				22032,
				22077,
				22082,
				22093,
				22098,
				22115,
				22135,
				22140,
				22145,
				22153,
				22159,
				23592,
				23596,
				22163,
				22176,
				22181,
				22193,
				22220,
				22224,
				22232,
				22239,
				22266,
				22260,
				22270,
				22284,
				22304,
				22315,
				22319,
				22323,
				22331,
				22342,
				22346,
				22351,
				22357,
				22361,
				22378,
				22383,
				22402,
				22420,
				22478,
				22489,
				22514,
				22529,
				22534,
				23615,
				23608,
				22556,
				22568,
				23620,
				23627,
				22579,
				22594,
				22603,
				22733,
				22821,
				22824,
				22831,
				22841,
				22848,
				22862,
				22876,
				22881,
				23139,
				23135,
				23148,
				23169,
				23161,
				23287,
				23306,
				22967,
				22980,
				22990,
				23600,
				23580,
				23361,
				23369,
				23477,
				23420,
				23433,
				23386,
				23390,
				23381,
				23376,
				23491
			]
		},
		{
			"title": "Interfaces",
			"children": [
				22758,
				22788,
				22807,
				22813,
				22817,
				23042,
				23067,
				23702,
				23685,
				23229,
				23844,
				23851,
				23765,
				23677,
				23572,
				24050,
				24067,
				24080,
				23944,
				23738,
				23974,
				23886,
				23818,
				23962,
				23952,
				23897,
				23935,
				23993
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				23666,
				23632,
				19905,
				19908,
				19919,
				19922,
				19930,
				19933,
				19970,
				19973,
				19974,
				19979,
				20020,
				20023,
				20039,
				20042,
				20043,
				20084,
				20087,
				20127,
				20130,
				20133,
				20134,
				20137,
				20304,
				20307,
				20310,
				20311,
				20376,
				20379,
				20380,
				20409,
				20412,
				20413,
				20416,
				20422,
				20425,
				20531,
				20532,
				20551,
				20554,
				20555,
				20576,
				20579,
				20598,
				20601,
				20604,
				20605,
				20650,
				20653,
				20923,
				20926,
				20942,
				20945,
				20961,
				20964,
				20969,
				20970,
				20971,
				20972,
				20975,
				21057,
				21060,
				21061,
				21135,
				21157,
				21212,
				21218,
				21224,
				21229,
				21232,
				21235,
				21238,
				21243,
				21403,
				21406,
				21409,
				21410,
				21448,
				21451,
				21454,
				21521,
				21524,
				21528,
				21533,
				21569,
				21572,
				21575,
				21595,
				21598,
				21601,
				21615,
				21618,
				21619,
				21620,
				21669,
				21672,
				21675,
				21721,
				21722,
				21725,
				21744,
				21745,
				21748,
				21795,
				21798,
				21801,
				21804,
				21819,
				21822,
				21832,
				21833,
				21836,
				21944,
				21947,
				21948,
				21968,
				21971,
				21974,
				21975,
				22055,
				22058,
				22061,
				22070,
				22026,
				22029,
				22106,
				22109,
				22112,
				22122,
				22125,
				22187,
				22190,
				22205,
				22208,
				22211,
				22214,
				22298,
				22301,
				22312,
				22336,
				22339,
				22372,
				22375,
				22399,
				22417,
				22469,
				22472,
				22475,
				22523,
				22526,
				22547,
				22550,
				22553,
				22562,
				22565,
				22576,
				22588,
				22591,
				22716,
				22717,
				22722,
				22728,
				22742,
				22750,
				22753,
				22756,
				22768,
				22777,
				22781,
				23664,
				22785,
				22787,
				22796,
				23192,
				23747,
				22887,
				22891,
				22896,
				22897,
				22955,
				22960,
				22999,
				23012,
				23018,
				23027,
				23035,
				23752,
				23832,
				23760,
				23619,
				23579,
				23373,
				23101,
				23103,
				23104,
				23112,
				23118,
				23751,
				23566,
				23124,
				23128,
				23839,
				23535,
				23691,
				23933,
				23934,
				23197,
				23495,
				23217,
				23916,
				23795,
				23806,
				23860,
				23926,
				23921,
				23828,
				23871,
				23723,
				23524,
				23541
			]
		},
		{
			"title": "Variables",
			"children": [
				19936,
				19968,
				19969,
				20046,
				20090,
				20123,
				20124,
				20125,
				20126,
				20300,
				20301,
				20302,
				20303,
				20374,
				20375,
				20406,
				20407,
				20408,
				20574,
				20575,
				20656,
				20657,
				20660,
				20921,
				20922,
				20941,
				20959,
				20960,
				21054,
				21055,
				21056,
				21133,
				21134,
				21155,
				21156,
				21172,
				21173,
				21174,
				21175,
				21176,
				21446,
				21447,
				21531,
				21532,
				21567,
				21568,
				21591,
				21592,
				21593,
				21594,
				21667,
				21668,
				21719,
				21720,
				21742,
				21743,
				21794,
				21817,
				21818,
				21830,
				21831,
				21967,
				22024,
				22025,
				22073,
				22074,
				22075,
				22076,
				22120,
				22121,
				22185,
				22186,
				22201,
				22202,
				22203,
				22204,
				22294,
				22295,
				22296,
				22297,
				22308,
				22309,
				22310,
				22311,
				22335,
				22365,
				22366,
				22370,
				22371,
				22396,
				22397,
				22398,
				22414,
				22415,
				22416,
				22432,
				22433,
				22434,
				22435,
				22436,
				22521,
				22522,
				22545,
				22546,
				22574,
				22575,
				22586,
				22587
			]
		},
		{
			"title": "Functions",
			"children": [
				22620,
				22618,
				22622,
				22625,
				22630,
				22635,
				22640,
				22648,
				22656,
				22663,
				22665,
				22675,
				22684,
				22696,
				20349,
				20528,
				20682,
				20751,
				21964,
				22743
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"19904": {
			"sourceFileName": "../../../packages/medusa/src/index.js",
			"qualifiedName": ""
		},
		"19905": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "AdminAnalyticsConfigRes"
		},
		"19906": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "__type"
		},
		"19907": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "__type.analytics_config"
		},
		"19908": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "AdminAnalyticsConfigDeleteRes"
		},
		"19909": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq"
		},
		"19912": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq.opt_out"
		},
		"19913": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq.anonymize"
		},
		"19914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq"
		},
		"19917": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq.opt_out"
		},
		"19918": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq.anonymize"
		},
		"19919": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "AdminAuthRes"
		},
		"19920": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type"
		},
		"19921": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type.user"
		},
		"19922": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "AdminBearerAuthRes"
		},
		"19923": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type"
		},
		"19924": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type.access_token"
		},
		"19925": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq"
		},
		"19928": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq.email"
		},
		"19929": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq.password"
		},
		"19930": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "AdminBatchJobRes"
		},
		"19931": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type"
		},
		"19932": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type.batch_job"
		},
		"19933": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "AdminBatchJobListRes"
		},
		"19934": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type"
		},
		"19935": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type.batch_jobs"
		},
		"19936": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "defaultAdminBatchFields"
		},
		"19937": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq"
		},
		"19940": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.type"
		},
		"19941": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.context"
		},
		"19942": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.dry_run"
		},
		"19943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams"
		},
		"19946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.limit"
		},
		"19947": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.offset"
		},
		"19948": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.expand"
		},
		"19949": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.fields"
		},
		"19950": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.order"
		},
		"19951": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams"
		},
		"19954": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.id"
		},
		"19955": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.type"
		},
		"19956": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.confirmed_at"
		},
		"19957": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.pre_processed_at"
		},
		"19958": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.completed_at"
		},
		"19959": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.failed_at"
		},
		"19960": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.canceled_at"
		},
		"19961": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.created_at"
		},
		"19962": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.updated_at"
		},
		"19963": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.limit"
		},
		"19964": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.offset"
		},
		"19965": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.expand"
		},
		"19966": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.fields"
		},
		"19967": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.order"
		},
		"19968": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "defaultAdminCollectionsFields"
		},
		"19969": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "defaultAdminCollectionsRelations"
		},
		"19970": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsListRes"
		},
		"19971": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"19972": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.collections"
		},
		"19973": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsDeleteRes"
		},
		"19974": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionRes"
		},
		"19975": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"19976": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.id"
		},
		"19977": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.object"
		},
		"19978": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.removed_products"
		},
		"19979": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsRes"
		},
		"19980": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"19981": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.collection"
		},
		"19982": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/add-products.ts",
			"qualifiedName": "AdminPostProductsToCollectionReq"
		},
		"19985": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/add-products.ts",
			"qualifiedName": "AdminPostProductsToCollectionReq.product_ids"
		},
		"19986": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq"
		},
		"19989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.title"
		},
		"19990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.handle"
		},
		"19991": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.metadata"
		},
		"19992": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams"
		},
		"19995": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.limit"
		},
		"19996": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.offset"
		},
		"19997": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams"
		},
		"20000": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.title"
		},
		"20001": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.handle"
		},
		"20002": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.created_at"
		},
		"20003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.updated_at"
		},
		"20004": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.deleted_at"
		},
		"20005": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.q"
		},
		"20006": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.order"
		},
		"20007": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.discount_condition_id"
		},
		"20008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.limit"
		},
		"20009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.offset"
		},
		"20010": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/remove-products.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionReq"
		},
		"20013": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/remove-products.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionReq.product_ids"
		},
		"20014": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq"
		},
		"20017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.title"
		},
		"20018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.handle"
		},
		"20019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.metadata"
		},
		"20020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "AdminCurrenciesListRes"
		},
		"20021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type"
		},
		"20022": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type.currencies"
		},
		"20023": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "AdminCurrenciesRes"
		},
		"20024": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type"
		},
		"20025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type.currency"
		},
		"20026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams"
		},
		"20029": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.code"
		},
		"20030": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.q"
		},
		"20031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.includes_tax"
		},
		"20032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.order"
		},
		"20033": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20034": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20035": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/update-currency.ts",
			"qualifiedName": "AdminPostCurrenciesCurrencyReq"
		},
		"20038": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/update-currency.ts",
			"qualifiedName": "AdminPostCurrenciesCurrencyReq.includes_tax"
		},
		"20039": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsRes"
		},
		"20040": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type"
		},
		"20041": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type.customer_group"
		},
		"20042": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsDeleteRes"
		},
		"20043": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsListRes"
		},
		"20044": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type"
		},
		"20045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"20046": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "defaultAdminCustomerGroupsRelations"
		},
		"20047": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/add-customers-batch.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
		},
		"20050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/add-customers-batch.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq.customer_ids"
		},
		"20051": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq"
		},
		"20054": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq.name"
		},
		"20055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq.metadata"
		},
		"20056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/delete-customers-batch.ts",
			"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
		},
		"20059": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/delete-customers-batch.ts",
			"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq.customer_ids"
		},
		"20060": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/get-customer-group.ts",
			"qualifiedName": "AdminGetCustomerGroupsGroupParams"
		},
		"20063": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20064": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20065": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams"
		},
		"20068": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.order"
		},
		"20069": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.offset"
		},
		"20070": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.limit"
		},
		"20071": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.expand"
		},
		"20072": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.fields"
		},
		"20073": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.id"
		},
		"20074": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.q"
		},
		"20075": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.name"
		},
		"20076": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.updated_at"
		},
		"20077": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_at"
		},
		"20078": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.discount_condition_id"
		},
		"20079": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq"
		},
		"20082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq.name"
		},
		"20083": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq.metadata"
		},
		"20084": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "AdminCustomersRes"
		},
		"20085": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type"
		},
		"20086": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"20087": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "AdminCustomersListRes"
		},
		"20088": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type"
		},
		"20089": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type.customers"
		},
		"20090": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "defaultAdminCustomersRelations"
		},
		"20091": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq"
		},
		"20094": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.email"
		},
		"20095": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.first_name"
		},
		"20096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.last_name"
		},
		"20097": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.password"
		},
		"20098": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.phone"
		},
		"20099": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.metadata"
		},
		"20100": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams"
		},
		"20103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.limit"
		},
		"20104": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.offset"
		},
		"20105": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.expand"
		},
		"20106": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.fields"
		},
		"20107": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.q"
		},
		"20108": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.has_account"
		},
		"20109": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.groups"
		},
		"20110": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.order"
		},
		"20111": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.created_at"
		},
		"20112": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.updated_at"
		},
		"20113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq"
		},
		"20116": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.email"
		},
		"20117": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.first_name"
		},
		"20118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.last_name"
		},
		"20119": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.password"
		},
		"20120": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.phone"
		},
		"20121": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.metadata"
		},
		"20122": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.groups"
		},
		"20123": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountsFields"
		},
		"20124": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountsRelations"
		},
		"20125": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountConditionFields"
		},
		"20126": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountConditionRelations"
		},
		"20127": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsRes"
		},
		"20128": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"20129": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount"
		},
		"20130": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountConditionsRes"
		},
		"20131": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"20132": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount_condition"
		},
		"20133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsDeleteRes"
		},
		"20134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountConditionsDeleteRes"
		},
		"20135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"20136": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount"
		},
		"20137": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsListRes"
		},
		"20138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"20139": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discounts"
		},
		"20140": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditions"
		},
		"20143": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditions.operator"
		},
		"20144": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"20145": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"20146": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"20147": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"20148": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"20149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsParams"
		},
		"20152": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20153": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule"
		},
		"20157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.description"
		},
		"20158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.type"
		},
		"20159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.value"
		},
		"20160": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.allocation"
		},
		"20161": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.conditions"
		},
		"20162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq"
		},
		"20165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.code"
		},
		"20166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.rule"
		},
		"20167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.is_dynamic"
		},
		"20168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.is_disabled"
		},
		"20169": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.starts_at"
		},
		"20170": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.ends_at"
		},
		"20171": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.valid_duration"
		},
		"20172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.usage_limit"
		},
		"20173": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.regions"
		},
		"20174": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.metadata"
		},
		"20175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminCreateCondition"
		},
		"20178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminCreateCondition.operator"
		},
		"20179": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"20180": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"20181": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"20182": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"20183": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"20184": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsParams"
		},
		"20187": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20188": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20189": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
		},
		"20192": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.code"
		},
		"20193": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.usage_limit"
		},
		"20194": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.metadata"
		},
		"20195": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-condition.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionParams"
		},
		"20198": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20199": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20200": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-condition.ts",
			"qualifiedName": "AdminGetDiscountsDiscountConditionsConditionParams"
		},
		"20203": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20204": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-discount.ts",
			"qualifiedName": "AdminGetDiscountParams"
		},
		"20208": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20209": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-discount-by-code.ts",
			"qualifiedName": "AdminGetDiscountsDiscountCodeParams"
		},
		"20213": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20214": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams"
		},
		"20216": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20217": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetDiscountsParams"
		},
		"20218": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20219": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.rule"
		},
		"20220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.q"
		},
		"20221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.is_dynamic"
		},
		"20222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.is_disabled"
		},
		"20223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.created_at"
		},
		"20224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.updated_at"
		},
		"20225": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.order"
		},
		"20226": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20227": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20228": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20229": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20230": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
		},
		"20233": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"20234": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"20235": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"20236": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"20237": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"20238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionParams"
		},
		"20241": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20242": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule"
		},
		"20246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.id"
		},
		"20247": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.description"
		},
		"20248": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.value"
		},
		"20249": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.allocation"
		},
		"20250": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.conditions"
		},
		"20251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq"
		},
		"20254": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.code"
		},
		"20255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.rule"
		},
		"20256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.is_disabled"
		},
		"20257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.starts_at"
		},
		"20258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.ends_at"
		},
		"20259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.valid_duration"
		},
		"20260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.usage_limit"
		},
		"20261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.regions"
		},
		"20262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.metadata"
		},
		"20263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition"
		},
		"20266": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition.id"
		},
		"20267": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition.operator"
		},
		"20268": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"20269": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"20270": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"20271": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"20272": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"20273": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountParams"
		},
		"20276": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20277": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20278": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
		},
		"20281": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq.resources"
		},
		"20282": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "__type"
		},
		"20283": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "__type.id"
		},
		"20284": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
		},
		"20287": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20288": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20289": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams"
		},
		"20292": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20293": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20294": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
		},
		"20297": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq.resources"
		},
		"20298": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "__type"
		},
		"20299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "__type.id"
		},
		"20300": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersRelations"
		},
		"20301": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersCartRelations"
		},
		"20302": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersCartFields"
		},
		"20303": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersFields"
		},
		"20304": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
		},
		"20305": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"20306": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"20307": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersRes"
		},
		"20308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"20309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.draft_order"
		},
		"20310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersDeleteRes"
		},
		"20311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersListRes"
		},
		"20312": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"20313": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.draft_orders"
		},
		"20314": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq"
		},
		"20317": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.status"
		},
		"20318": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.email"
		},
		"20319": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.billing_address"
		},
		"20320": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.shipping_address"
		},
		"20321": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.items"
		},
		"20322": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.region_id"
		},
		"20323": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.discounts"
		},
		"20324": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.customer_id"
		},
		"20325": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.no_notification_order"
		},
		"20326": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.shipping_methods"
		},
		"20327": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.metadata"
		},
		"20328": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
		},
		"20331": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.title"
		},
		"20332": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.unit_price"
		},
		"20333": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.variant_id"
		},
		"20334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.quantity"
		},
		"20335": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.metadata"
		},
		"20336": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams"
		},
		"20337": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20338": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetDraftOrdersParams"
		},
		"20339": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.q"
		},
		"20341": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.expand"
		},
		"20342": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.fields"
		},
		"20343": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.status"
		},
		"20344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.created_at"
		},
		"20345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.updated_at"
		},
		"20346": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20347": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20348": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20349": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "reserveQuantityForDraftOrder"
		},
		"20350": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "reserveQuantityForDraftOrder"
		},
		"20351": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "order"
		},
		"20352": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "context"
		},
		"20353": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type"
		},
		"20354": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type.productVariantInventoryService"
		},
		"20355": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type.locationId"
		},
		"20356": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
		},
		"20359": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.region_id"
		},
		"20360": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.country_code"
		},
		"20361": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.email"
		},
		"20362": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.billing_address"
		},
		"20363": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.shipping_address"
		},
		"20364": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.discounts"
		},
		"20365": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.customer_id"
		},
		"20366": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.no_notification_order"
		},
		"20367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq"
		},
		"20370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.title"
		},
		"20371": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.unit_price"
		},
		"20372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.quantity"
		},
		"20373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.metadata"
		},
		"20374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "defaultAdminGiftCardFields"
		},
		"20375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "defaultAdminGiftCardRelations"
		},
		"20376": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsRes"
		},
		"20377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"20378": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type.gift_card"
		},
		"20379": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsDeleteRes"
		},
		"20380": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsListRes"
		},
		"20381": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"20382": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type.gift_cards"
		},
		"20383": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq"
		},
		"20386": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.value"
		},
		"20387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.ends_at"
		},
		"20388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.is_disabled"
		},
		"20389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.region_id"
		},
		"20390": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.metadata"
		},
		"20391": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams"
		},
		"20394": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.limit"
		},
		"20395": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.offset"
		},
		"20396": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.q"
		},
		"20397": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.order"
		},
		"20398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq"
		},
		"20401": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.balance"
		},
		"20402": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.is_disabled"
		},
		"20403": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.ends_at"
		},
		"20404": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.region_id"
		},
		"20405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.metadata"
		},
		"20406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminInventoryItemFields"
		},
		"20407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminLocationLevelFields"
		},
		"20408": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminInventoryItemRelations"
		},
		"20409": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsRes"
		},
		"20410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"20411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"20412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsDeleteRes"
		},
		"20413": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsListRes"
		},
		"20414": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"20415": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"20416": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "DecoratedInventoryItemDTO"
		},
		"20417": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"20418": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.location_levels"
		},
		"20419": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.variants"
		},
		"20420": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"20421": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"20422": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes"
		},
		"20423": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"20424": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"20425": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsLocationLevelsRes"
		},
		"20426": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"20427": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"20428": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"20429": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.id"
		},
		"20430": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.location_levels"
		},
		"20431": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq"
		},
		"20434": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.variant_id"
		},
		"20435": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.sku"
		},
		"20436": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.hs_code"
		},
		"20437": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.weight"
		},
		"20438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.length"
		},
		"20439": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.height"
		},
		"20440": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.width"
		},
		"20441": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.origin_country"
		},
		"20442": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.mid_code"
		},
		"20443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.material"
		},
		"20444": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.title"
		},
		"20445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.description"
		},
		"20446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.thumbnail"
		},
		"20447": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.metadata"
		},
		"20448": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsParams"
		},
		"20451": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20452": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
		},
		"20456": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.location_id"
		},
		"20457": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.stocked_quantity"
		},
		"20458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.incoming_quantity"
		},
		"20459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsParams"
		},
		"20462": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20463": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/get-inventory-item.ts",
			"qualifiedName": "AdminGetInventoryItemsItemParams"
		},
		"20467": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20468": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20469": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams"
		},
		"20470": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20471": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetInventoryItemsParams"
		},
		"20472": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.id"
		},
		"20474": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.q"
		},
		"20475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.location_id"
		},
		"20476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.sku"
		},
		"20477": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.origin_country"
		},
		"20478": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.mid_code"
		},
		"20479": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.material"
		},
		"20480": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.hs_code"
		},
		"20481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.weight"
		},
		"20482": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.length"
		},
		"20483": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.height"
		},
		"20484": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.width"
		},
		"20485": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.requires_shipping"
		},
		"20486": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20487": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20488": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20489": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20490": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20491": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-location-levels.ts",
			"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams"
		},
		"20494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-location-levels.ts",
			"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams.location_id"
		},
		"20495": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20496": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20497": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
		},
		"20500": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.sku"
		},
		"20501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.origin_country"
		},
		"20502": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.hs_code"
		},
		"20503": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.mid_code"
		},
		"20504": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.material"
		},
		"20505": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.weight"
		},
		"20506": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.height"
		},
		"20507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.length"
		},
		"20508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.width"
		},
		"20509": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.title"
		},
		"20510": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.description"
		},
		"20511": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.thumbnail"
		},
		"20512": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.requires_shipping"
		},
		"20513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemParams"
		},
		"20516": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20517": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq"
		},
		"20521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq.incoming_quantity"
		},
		"20522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq.stocked_quantity"
		},
		"20523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelParams"
		},
		"20526": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20527": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20528": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "unauthenticatedInviteRoutes"
		},
		"20529": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "unauthenticatedInviteRoutes"
		},
		"20530": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "app"
		},
		"20531": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "AdminInviteDeleteRes"
		},
		"20532": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "AdminListInvitesRes"
		},
		"20533": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "__type"
		},
		"20534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "__type.invites"
		},
		"20535": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq"
		},
		"20538": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.first_name"
		},
		"20539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.last_name"
		},
		"20540": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.password"
		},
		"20541": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq"
		},
		"20544": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq.token"
		},
		"20545": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq.user"
		},
		"20546": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq"
		},
		"20549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq.user"
		},
		"20550": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq.role"
		},
		"20551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesRes"
		},
		"20552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type"
		},
		"20553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type.note"
		},
		"20554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesDeleteRes"
		},
		"20555": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesListRes"
		},
		"20556": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type"
		},
		"20557": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type.notes"
		},
		"20558": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq"
		},
		"20561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.resource_id"
		},
		"20562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.resource_type"
		},
		"20563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.value"
		},
		"20564": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams"
		},
		"20567": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.resource_id"
		},
		"20568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.limit"
		},
		"20569": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.offset"
		},
		"20570": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/update-note.ts",
			"qualifiedName": "AdminPostNotesNoteReq"
		},
		"20573": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/update-note.ts",
			"qualifiedName": "AdminPostNotesNoteReq.value"
		},
		"20574": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "defaultAdminNotificationsRelations"
		},
		"20575": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "defaultAdminNotificationsFields"
		},
		"20576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "AdminNotificationsListRes"
		},
		"20577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type"
		},
		"20578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type.notifications"
		},
		"20579": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "AdminNotificationsRes"
		},
		"20580": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type"
		},
		"20581": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type.notification"
		},
		"20582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams"
		},
		"20585": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.limit"
		},
		"20586": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.offset"
		},
		"20587": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.fields"
		},
		"20588": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.expand"
		},
		"20589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.event_name"
		},
		"20590": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.resource_type"
		},
		"20591": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.resource_id"
		},
		"20592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.to"
		},
		"20593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.include_resends"
		},
		"20594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/resend-notification.ts",
			"qualifiedName": "AdminPostNotificationsNotificationResendReq"
		},
		"20597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/resend-notification.ts",
			"qualifiedName": "AdminPostNotificationsNotificationResendReq.to"
		},
		"20598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditsRes"
		},
		"20599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"20600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.order_edit"
		},
		"20601": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditsListRes"
		},
		"20602": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"20603": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.order_edits"
		},
		"20604": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditDeleteRes"
		},
		"20605": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
		},
		"20606": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"20607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.id"
		},
		"20608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.object"
		},
		"20609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"20610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
		},
		"20613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.variant_id"
		},
		"20614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.quantity"
		},
		"20615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.metadata"
		},
		"20616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq"
		},
		"20619": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.order_id"
		},
		"20620": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.internal_note"
		},
		"20621": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.created_by"
		},
		"20622": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/get-order-edit.ts",
			"qualifiedName": "GetOrderEditsOrderEditParams"
		},
		"20625": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20626": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams"
		},
		"20628": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20629": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "GetOrderEditsParams"
		},
		"20630": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20631": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams.q"
		},
		"20632": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams.order_id"
		},
		"20633": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20634": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20635": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20636": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20637": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20638": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/request-confirmation.ts",
			"qualifiedName": "AdminPostOrderEditsRequestConfirmationReq"
		},
		"20641": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/request-confirmation.ts",
			"qualifiedName": "AdminPostOrderEditsRequestConfirmationReq.payment_collection_description"
		},
		"20642": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsOrderEditReq"
		},
		"20645": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsOrderEditReq.internal_note"
		},
		"20646": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
		},
		"20649": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq.quantity"
		},
		"20650": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AdminOrdersRes"
		},
		"20651": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type"
		},
		"20652": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"20653": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AdminOrdersListRes"
		},
		"20654": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type"
		},
		"20655": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type.orders"
		},
		"20656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "filterableAdminOrdersFields"
		},
		"20657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AvailableOrderIncludes"
		},
		"20658": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__object"
		},
		"20659": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__object.RETURNABLE_ITEMS"
		},
		"20660": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "allowedOrderIncludes"
		},
		"20661": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
		},
		"20664": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.price"
		},
		"20665": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.option_id"
		},
		"20666": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.data"
		},
		"20667": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsParams"
		},
		"20670": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20671": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20672": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/archive-order.ts",
			"qualifiedName": "AdminPostOrdersOrderArchiveParams"
		},
		"20675": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20676": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20677": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-claim.ts",
			"qualifiedName": "AdminPostOrdersClaimCancel"
		},
		"20680": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20681": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20682": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "adjustInventoryForCancelledFulfillment"
		},
		"20683": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "adjustInventoryForCancelledFulfillment"
		},
		"20684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "fulfillment"
		},
		"20685": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "context"
		},
		"20686": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "__type"
		},
		"20687": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "__type.productVariantInventoryService"
		},
		"20688": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillementsCancelParams"
		},
		"20691": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20692": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20693": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment-claim.ts",
			"qualifiedName": "AdminPostOrdersClaimFulfillmentsCancelParams"
		},
		"20696": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20697": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20698": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapFulfillementsCancelParams"
		},
		"20701": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20702": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20703": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-order.ts",
			"qualifiedName": "AdminPostOrdersOrderCancel"
		},
		"20706": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20707": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-swap.ts",
			"qualifiedName": "AdminPostOrdersSwapCancelParams"
		},
		"20711": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20712": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/capture-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderCaptureParams"
		},
		"20716": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20717": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/complete-order.ts",
			"qualifiedName": "AdminPostOrdersOrderCompleteParams"
		},
		"20721": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20722": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20723": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq"
		},
		"20726": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.type"
		},
		"20727": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.claim_items"
		},
		"20728": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.return_shipping"
		},
		"20729": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.additional_items"
		},
		"20730": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.shipping_methods"
		},
		"20731": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.refund_amount"
		},
		"20732": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.shipping_address"
		},
		"20733": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.no_notification"
		},
		"20734": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.return_location_id"
		},
		"20735": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.metadata"
		},
		"20736": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsParams"
		},
		"20739": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20740": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20741": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
		},
		"20744": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq.fulfillment_id"
		},
		"20745": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq.tracking_numbers"
		},
		"20746": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsParams"
		},
		"20749": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20750": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20751": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "updateInventoryAndReservations"
		},
		"20752": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "updateInventoryAndReservations"
		},
		"20753": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "fulfillments"
		},
		"20754": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "context"
		},
		"20755": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type"
		},
		"20756": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type.inventoryService"
		},
		"20757": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type.locationId"
		},
		"20758": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
		},
		"20761": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.items"
		},
		"20762": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.location_id"
		},
		"20763": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.no_notification"
		},
		"20764": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.metadata"
		},
		"20765": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsParams"
		},
		"20768": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20769": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20770": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq"
		},
		"20773": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.fulfillment_id"
		},
		"20774": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.tracking_numbers"
		},
		"20775": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.no_notification"
		},
		"20776": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentParams"
		},
		"20779": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20780": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20781": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq"
		},
		"20784": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_items"
		},
		"20785": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_shipping"
		},
		"20786": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.sales_channel_id"
		},
		"20787": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.additional_items"
		},
		"20788": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.custom_shipping_options"
		},
		"20789": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.no_notification"
		},
		"20790": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_location_id"
		},
		"20791": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.allow_backorder"
		},
		"20792": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsParams"
		},
		"20795": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20796": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20797": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq"
		},
		"20800": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.fulfillment_id"
		},
		"20801": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.tracking_numbers"
		},
		"20802": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.no_notification"
		},
		"20803": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsParams"
		},
		"20806": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20807": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20808": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq"
		},
		"20811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.metadata"
		},
		"20812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.no_notification"
		},
		"20813": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.location_id"
		},
		"20814": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams"
		},
		"20817": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20818": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20819": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq"
		},
		"20822": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.metadata"
		},
		"20823": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.no_notification"
		},
		"20824": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.location_id"
		},
		"20825": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams"
		},
		"20828": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20829": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20830": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/get-order.ts",
			"qualifiedName": "AdminGetOrdersOrderParams"
		},
		"20833": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20834": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20835": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams"
		},
		"20838": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.offset"
		},
		"20839": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.limit"
		},
		"20840": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.expand"
		},
		"20841": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.fields"
		},
		"20842": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.order"
		},
		"20843": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.q"
		},
		"20844": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.id"
		},
		"20845": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.status"
		},
		"20846": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.fulfillment_status"
		},
		"20847": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.payment_status"
		},
		"20848": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.display_id"
		},
		"20849": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.cart_id"
		},
		"20850": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.customer_id"
		},
		"20851": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.email"
		},
		"20852": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.region_id"
		},
		"20853": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.currency_code"
		},
		"20854": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.tax_rate"
		},
		"20855": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.sales_channel_id"
		},
		"20856": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.canceled_at"
		},
		"20857": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.created_at"
		},
		"20858": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.updated_at"
		},
		"20859": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/process-swap-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams"
		},
		"20862": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20863": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20864": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq"
		},
		"20867": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.amount"
		},
		"20868": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.reason"
		},
		"20869": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.note"
		},
		"20870": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.no_notification"
		},
		"20871": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsParams"
		},
		"20874": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20875": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20876": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq"
		},
		"20879": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.items"
		},
		"20880": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.return_shipping"
		},
		"20881": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.note"
		},
		"20882": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.receive_now"
		},
		"20883": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.no_notification"
		},
		"20884": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.refund"
		},
		"20885": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.location_id"
		},
		"20886": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsParams"
		},
		"20889": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20890": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20891": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq"
		},
		"20894": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.claim_items"
		},
		"20895": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.shipping_methods"
		},
		"20896": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.no_notification"
		},
		"20897": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.metadata"
		},
		"20898": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimParams"
		},
		"20901": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20902": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20903": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq"
		},
		"20906": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.email"
		},
		"20907": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.billing_address"
		},
		"20908": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.shipping_address"
		},
		"20909": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.items"
		},
		"20910": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.region"
		},
		"20911": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.discounts"
		},
		"20912": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.customer_id"
		},
		"20913": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.payment_method"
		},
		"20914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.shipping_method"
		},
		"20915": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.no_notification"
		},
		"20916": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderParams"
		},
		"20919": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20920": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20921": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "defaultPaymentCollectionFields"
		},
		"20922": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "defaulPaymentCollectionRelations"
		},
		"20923": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "AdminPaymentCollectionsRes"
		},
		"20924": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"20925": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.payment_collection"
		},
		"20926": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "AdminPaymentCollectionDeleteRes"
		},
		"20927": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"20928": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.id"
		},
		"20929": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.object"
		},
		"20930": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"20931": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/get-payment-collection.ts",
			"qualifiedName": "AdminGetPaymentCollectionsParams"
		},
		"20934": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20935": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20936": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq"
		},
		"20939": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq.description"
		},
		"20940": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq.metadata"
		},
		"20941": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "defaultPaymentFields"
		},
		"20942": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "AdminPaymentRes"
		},
		"20943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type"
		},
		"20944": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type.payment"
		},
		"20945": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "AdminRefundRes"
		},
		"20946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type"
		},
		"20947": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type.refund"
		},
		"20948": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/get-payment.ts",
			"qualifiedName": "GetPaymentsParams"
		},
		"20951": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20952": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20953": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq"
		},
		"20956": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.amount"
		},
		"20957": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.reason"
		},
		"20958": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.note"
		},
		"20959": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "defaultAdminPriceListFields"
		},
		"20960": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "defaultAdminPriceListRelations"
		},
		"20961": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListRes"
		},
		"20962": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"20963": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.price_list"
		},
		"20964": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteBatchRes"
		},
		"20965": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"20966": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.ids"
		},
		"20967": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"20968": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.object"
		},
		"20969": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteProductPricesRes"
		},
		"20970": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteVariantPricesRes"
		},
		"20971": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteRes"
		},
		"20972": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListsListRes"
		},
		"20973": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"20974": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.price_lists"
		},
		"20975": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListsProductsListRes"
		},
		"20976": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"20977": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.products"
		},
		"20978": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq"
		},
		"20981": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq.prices"
		},
		"20982": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq.override"
		},
		"20983": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq"
		},
		"20986": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.name"
		},
		"20987": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.description"
		},
		"20988": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.starts_at"
		},
		"20989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.ends_at"
		},
		"20990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.status"
		},
		"20991": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.type"
		},
		"20992": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.prices"
		},
		"20993": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.customer_groups"
		},
		"20994": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.includes_tax"
		},
		"20995": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListPricesPricesReq"
		},
		"20998": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListPricesPricesReq.price_ids"
		},
		"20999": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-products-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
		},
		"21002": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-products-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq.product_ids"
		},
		"21003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
		},
		"21004": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21005": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
		},
		"21006": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21007": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.id"
		},
		"21008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.q"
		},
		"21009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.status"
		},
		"21010": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.collection_id"
		},
		"21011": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.tags"
		},
		"21012": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.title"
		},
		"21013": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.description"
		},
		"21014": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.handle"
		},
		"21015": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.is_giftcard"
		},
		"21016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.type"
		},
		"21017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.order"
		},
		"21018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.created_at"
		},
		"21019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.updated_at"
		},
		"21020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.deleted_at"
		},
		"21021": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21022": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21023": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21024": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams"
		},
		"21028": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.offset"
		},
		"21029": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.limit"
		},
		"21030": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.expand"
		},
		"21031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.order"
		},
		"21032": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"21033": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"21034": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"21035": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.name"
		},
		"21036": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.customer_groups"
		},
		"21037": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.description"
		},
		"21038": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.type"
		},
		"21039": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.created_at"
		},
		"21040": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.updated_at"
		},
		"21041": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.deleted_at"
		},
		"21042": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
		},
		"21045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.name"
		},
		"21046": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.description"
		},
		"21047": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.starts_at"
		},
		"21048": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.ends_at"
		},
		"21049": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.status"
		},
		"21050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.type"
		},
		"21051": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.prices"
		},
		"21052": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.customer_groups"
		},
		"21053": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.includes_tax"
		},
		"21054": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "defaultAdminProductCategoryRelations"
		},
		"21055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "allowedAdminProductCategoryRelations"
		},
		"21056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "defaultProductCategoryFields"
		},
		"21057": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesCategoryRes"
		},
		"21058": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"21059": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type.product_category"
		},
		"21060": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesCategoryDeleteRes"
		},
		"21061": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesListRes"
		},
		"21062": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"21063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type.product_categories"
		},
		"21064": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/get-product-category.ts",
			"qualifiedName": "AdminGetProductCategoryParams"
		},
		"21067": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21068": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21069": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams"
		},
		"21070": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21071": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetProductCategoriesParams"
		},
		"21072": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21073": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.q"
		},
		"21074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.handle"
		},
		"21075": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.include_descendants_tree"
		},
		"21076": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.is_internal"
		},
		"21077": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.is_active"
		},
		"21078": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.parent_category_id"
		},
		"21079": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21080": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21081": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21082": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21083": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"21084": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq"
		},
		"21087": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq.name"
		},
		"21088": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq.metadata"
		},
		"21089": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"21090": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.handle"
		},
		"21091": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"21092": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"21093": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"21094": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesParams"
		},
		"21097": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21098": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21099": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq"
		},
		"21102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.name"
		},
		"21103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.handle"
		},
		"21104": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.rank"
		},
		"21105": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.metadata"
		},
		"21106": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"21107": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"21108": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"21109": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"21110": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryParams"
		},
		"21113": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21114": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21115": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
		},
		"21118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq.product_ids"
		},
		"21119": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchParams"
		},
		"21122": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21123": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21124": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
		},
		"21127": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq.product_ids"
		},
		"21128": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchParams"
		},
		"21131": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21132": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "defaultAdminProductTagsFields"
		},
		"21134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "defaultAdminProductTagsRelations"
		},
		"21135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "AdminProductTagsListRes"
		},
		"21136": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "__type"
		},
		"21137": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "__type.product_tags"
		},
		"21138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams"
		},
		"21141": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.limit"
		},
		"21142": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.offset"
		},
		"21143": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams"
		},
		"21146": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.id"
		},
		"21147": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.q"
		},
		"21148": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.value"
		},
		"21149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.created_at"
		},
		"21150": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.updated_at"
		},
		"21151": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.order"
		},
		"21152": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.discount_condition_id"
		},
		"21153": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.limit"
		},
		"21154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.offset"
		},
		"21155": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "defaultAdminProductTypeFields"
		},
		"21156": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "defaultAdminProductTypeRelations"
		},
		"21157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "AdminProductTypesListRes"
		},
		"21158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "__type"
		},
		"21159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "__type.product_types"
		},
		"21160": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams"
		},
		"21163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.id"
		},
		"21164": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.q"
		},
		"21165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.value"
		},
		"21166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.created_at"
		},
		"21167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.updated_at"
		},
		"21168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.order"
		},
		"21169": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.discount_condition_id"
		},
		"21170": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21171": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductRelations"
		},
		"21173": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductFields"
		},
		"21174": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminGetProductsVariantsFields"
		},
		"21175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminGetProductsVariantsRelations"
		},
		"21176": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductRemoteQueryObject"
		},
		"21177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21179": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.images"
		},
		"21180": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.tags"
		},
		"21183": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21184": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21185": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.type"
		},
		"21186": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21188": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.collection"
		},
		"21189": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21190": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21191": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.categories"
		},
		"21192": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21193": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21194": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"21195": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21196": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21197": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.values"
		},
		"21198": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21199": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21200": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.variants"
		},
		"21201": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21202": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21203": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"21204": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21206": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.profile"
		},
		"21207": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.sales_channels"
		},
		"21210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"21211": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"21212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteOptionRes"
		},
		"21213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21214": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.option_id"
		},
		"21215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"21216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"21217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"21218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteVariantRes"
		},
		"21219": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.variant_id"
		},
		"21221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"21222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"21223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"21224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteRes"
		},
		"21225": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21226": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.id"
		},
		"21227": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"21228": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"21229": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListRes"
		},
		"21230": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21231": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.products"
		},
		"21232": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListVariantsRes"
		},
		"21233": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21234": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.variants"
		},
		"21235": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListTypesRes"
		},
		"21236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21237": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.types"
		},
		"21238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListTagsRes"
		},
		"21239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21240": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.tags"
		},
		"21241": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21242": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.usage_count"
		},
		"21243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsRes"
		},
		"21244": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"21245": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"21246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/add-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsReq"
		},
		"21249": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/add-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsReq.title"
		},
		"21250": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq"
		},
		"21251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.__constructor"
		},
		"21252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq"
		},
		"21253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.title"
		},
		"21254": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.subtitle"
		},
		"21255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.description"
		},
		"21256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.is_giftcard"
		},
		"21257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.discountable"
		},
		"21258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.images"
		},
		"21259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.thumbnail"
		},
		"21260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.handle"
		},
		"21261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.status"
		},
		"21262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.type"
		},
		"21263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.collection_id"
		},
		"21264": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.tags"
		},
		"21265": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.sales_channels"
		},
		"21266": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.categories"
		},
		"21267": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.options"
		},
		"21268": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.variants"
		},
		"21269": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.weight"
		},
		"21270": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.length"
		},
		"21271": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.height"
		},
		"21272": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.width"
		},
		"21273": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.hs_code"
		},
		"21274": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.origin_country"
		},
		"21275": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.mid_code"
		},
		"21276": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.material"
		},
		"21277": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.metadata"
		},
		"21278": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq"
		},
		"21281": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.title"
		},
		"21282": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.sku"
		},
		"21283": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.ean"
		},
		"21284": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.upc"
		},
		"21285": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.barcode"
		},
		"21286": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.hs_code"
		},
		"21287": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.inventory_quantity"
		},
		"21288": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.allow_backorder"
		},
		"21289": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.manage_inventory"
		},
		"21290": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.weight"
		},
		"21291": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.length"
		},
		"21292": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.height"
		},
		"21293": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.width"
		},
		"21294": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.origin_country"
		},
		"21295": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.mid_code"
		},
		"21296": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.material"
		},
		"21297": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.metadata"
		},
		"21298": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.prices"
		},
		"21299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.options"
		},
		"21300": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/get-product.ts",
			"qualifiedName": "AdminGetProductParams"
		},
		"21303": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21304": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21305": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams"
		},
		"21308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.offset"
		},
		"21309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.limit"
		},
		"21310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.expand"
		},
		"21311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.fields"
		},
		"21312": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.order"
		},
		"21313": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"21314": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"21315": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"21316": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.price_list_id"
		},
		"21317": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"21318": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"21319": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"21320": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.description"
		},
		"21321": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"21322": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"21323": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"21324": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.sales_channel_id"
		},
		"21325": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.discount_condition_id"
		},
		"21326": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.category_id"
		},
		"21327": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.include_category_children"
		},
		"21328": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"21329": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"21330": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"21331": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams"
		},
		"21334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.id"
		},
		"21335": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.fields"
		},
		"21336": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.expand"
		},
		"21337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.offset"
		},
		"21338": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.limit"
		},
		"21339": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.q"
		},
		"21340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.order"
		},
		"21341": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.inventory_quantity"
		},
		"21342": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.manage_inventory"
		},
		"21343": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.allow_backorder"
		},
		"21344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.created_at"
		},
		"21345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.updated_at"
		},
		"21346": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq"
		},
		"21349": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq.key"
		},
		"21350": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq.value"
		},
		"21351": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsOption"
		},
		"21354": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsOption.title"
		},
		"21355": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq"
		},
		"21358": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.title"
		},
		"21359": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.subtitle"
		},
		"21360": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.description"
		},
		"21361": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.discountable"
		},
		"21362": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.images"
		},
		"21363": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.thumbnail"
		},
		"21364": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.handle"
		},
		"21365": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.status"
		},
		"21366": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.type"
		},
		"21367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.collection_id"
		},
		"21368": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.tags"
		},
		"21369": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.sales_channels"
		},
		"21370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.categories"
		},
		"21371": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.variants"
		},
		"21372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.weight"
		},
		"21373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.length"
		},
		"21374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.height"
		},
		"21375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.width"
		},
		"21376": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.hs_code"
		},
		"21377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.origin_country"
		},
		"21378": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.mid_code"
		},
		"21379": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.material"
		},
		"21380": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.metadata"
		},
		"21381": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq"
		},
		"21384": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.title"
		},
		"21385": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.sku"
		},
		"21386": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.ean"
		},
		"21387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.upc"
		},
		"21388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.barcode"
		},
		"21389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.hs_code"
		},
		"21390": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.inventory_quantity"
		},
		"21391": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.allow_backorder"
		},
		"21392": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.manage_inventory"
		},
		"21393": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.weight"
		},
		"21394": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.length"
		},
		"21395": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.height"
		},
		"21396": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.width"
		},
		"21397": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.origin_country"
		},
		"21398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.mid_code"
		},
		"21399": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.material"
		},
		"21400": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.metadata"
		},
		"21401": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.prices"
		},
		"21402": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.options"
		},
		"21403": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysRes"
		},
		"21404": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"21405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.publishable_api_key"
		},
		"21406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysListRes"
		},
		"21407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"21408": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.publishable_api_keys"
		},
		"21409": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeyDeleteRes"
		},
		"21410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysListSalesChannelsRes"
		},
		"21411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"21412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"21413": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/add-channels-batch.ts",
			"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
		},
		"21416": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/add-channels-batch.ts",
			"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq.sales_channel_ids"
		},
		"21417": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/create-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysReq"
		},
		"21420": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/create-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysReq.title"
		},
		"21421": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/delete-channels-batch.ts",
			"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
		},
		"21424": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/delete-channels-batch.ts",
			"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq.sales_channel_ids"
		},
		"21425": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.ts",
			"qualifiedName": "GetPublishableApiKeySalesChannelsParams"
		},
		"21428": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.ts",
			"qualifiedName": "GetPublishableApiKeySalesChannelsParams.q"
		},
		"21429": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams"
		},
		"21430": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21431": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "GetPublishableApiKeysParams"
		},
		"21432": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21433": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.q"
		},
		"21434": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.order"
		},
		"21435": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.created_at"
		},
		"21436": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.updated_at"
		},
		"21437": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.revoked_at"
		},
		"21438": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21439": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21440": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21441": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21442": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/update-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
		},
		"21445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/update-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq.title"
		},
		"21446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "defaultAdminRegionFields"
		},
		"21447": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "defaultAdminRegionRelations"
		},
		"21448": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsRes"
		},
		"21449": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type"
		},
		"21450": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type.region"
		},
		"21451": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsListRes"
		},
		"21452": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type"
		},
		"21453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type.regions"
		},
		"21454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsDeleteRes"
		},
		"21455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption"
		},
		"21458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption.provider_id"
		},
		"21459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption.options"
		},
		"21460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes"
		},
		"21463": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes.fulfillment_options"
		},
		"21464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-country.ts",
			"qualifiedName": "AdminPostRegionsRegionCountriesReq"
		},
		"21467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-country.ts",
			"qualifiedName": "AdminPostRegionsRegionCountriesReq.country_code"
		},
		"21468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-fulfillment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
		},
		"21471": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-fulfillment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq.provider_id"
		},
		"21472": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-payment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
		},
		"21475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-payment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq.provider_id"
		},
		"21476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq"
		},
		"21479": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.name"
		},
		"21480": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.currency_code"
		},
		"21481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.tax_code"
		},
		"21482": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.tax_rate"
		},
		"21483": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.payment_providers"
		},
		"21484": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.fulfillment_providers"
		},
		"21485": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.countries"
		},
		"21486": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.includes_tax"
		},
		"21487": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.metadata"
		},
		"21488": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams"
		},
		"21489": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21490": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetRegionsParams"
		},
		"21491": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21492": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.q"
		},
		"21493": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.order"
		},
		"21494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.created_at"
		},
		"21495": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.updated_at"
		},
		"21496": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.deleted_at"
		},
		"21497": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21498": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21499": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21500": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq"
		},
		"21504": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.name"
		},
		"21505": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.currency_code"
		},
		"21506": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_code"
		},
		"21507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_rate"
		},
		"21508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.gift_cards_taxable"
		},
		"21509": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.automatic_taxes"
		},
		"21510": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_provider_id"
		},
		"21511": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.payment_providers"
		},
		"21512": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.fulfillment_providers"
		},
		"21513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.countries"
		},
		"21514": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.includes_tax"
		},
		"21515": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.metadata"
		},
		"21516": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/get-region.ts",
			"qualifiedName": "AdminGetRegionsRegionParams"
		},
		"21519": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21520": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsRes"
		},
		"21522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"21523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.reservation"
		},
		"21524": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "ExtendedReservationItem"
		},
		"21525": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"21526": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.line_item"
		},
		"21527": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"21528": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsListRes"
		},
		"21529": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"21530": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.reservations"
		},
		"21531": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "defaultAdminReservationRelations"
		},
		"21532": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "defaultReservationFields"
		},
		"21533": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsDeleteRes"
		},
		"21534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq"
		},
		"21537": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.line_item_id"
		},
		"21538": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.location_id"
		},
		"21539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.inventory_item_id"
		},
		"21540": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.quantity"
		},
		"21541": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.description"
		},
		"21542": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.metadata"
		},
		"21543": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"21544": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21545": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"21546": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21547": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.location_id"
		},
		"21548": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.inventory_item_id"
		},
		"21549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.line_item_id"
		},
		"21550": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.created_by"
		},
		"21551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.quantity"
		},
		"21552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.created_at"
		},
		"21553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.updated_at"
		},
		"21554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.description"
		},
		"21555": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21556": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21557": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21558": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21559": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"21560": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq"
		},
		"21563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.quantity"
		},
		"21564": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.location_id"
		},
		"21565": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.description"
		},
		"21566": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.metadata"
		},
		"21567": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "defaultAdminReturnReasonsFields"
		},
		"21568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "defaultAdminReturnReasonsRelations"
		},
		"21569": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsRes"
		},
		"21570": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"21571": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type.return_reason"
		},
		"21572": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsListRes"
		},
		"21573": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"21574": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"21575": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsDeleteRes"
		},
		"21576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq"
		},
		"21579": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.value"
		},
		"21580": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.label"
		},
		"21581": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.parent_return_reason_id"
		},
		"21582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.description"
		},
		"21583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.metadata"
		},
		"21584": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq"
		},
		"21587": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.label"
		},
		"21588": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.value"
		},
		"21589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.description"
		},
		"21590": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.metadata"
		},
		"21591": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultRelations"
		},
		"21592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultRelationsList"
		},
		"21593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultReturnCancelRelations"
		},
		"21594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultReturnCancelFields"
		},
		"21595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsCancelRes"
		},
		"21596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"21597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.order"
		},
		"21598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsListRes"
		},
		"21599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"21600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.returns"
		},
		"21601": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsRes"
		},
		"21602": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"21603": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.return"
		},
		"21604": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams"
		},
		"21607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams.limit"
		},
		"21608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams.offset"
		},
		"21609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq"
		},
		"21612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.items"
		},
		"21613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.refund"
		},
		"21614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.location_id"
		},
		"21615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsRes"
		},
		"21616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type"
		},
		"21617": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type.sales_channel"
		},
		"21618": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsDeleteRes"
		},
		"21619": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsDeleteLocationRes"
		},
		"21620": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsListRes"
		},
		"21621": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type"
		},
		"21622": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"21623": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/add-product-batch.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
		},
		"21626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/add-product-batch.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq.product_ids"
		},
		"21627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq"
		},
		"21630": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.name"
		},
		"21631": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.description"
		},
		"21632": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.is_disabled"
		},
		"21633": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
		},
		"21636": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq.product_ids"
		},
		"21637": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams"
		},
		"21638": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21639": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetSalesChannelsParams"
		},
		"21640": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21641": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.id"
		},
		"21642": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.q"
		},
		"21643": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.name"
		},
		"21644": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.description"
		},
		"21645": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.created_at"
		},
		"21646": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.updated_at"
		},
		"21647": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.deleted_at"
		},
		"21648": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.order"
		},
		"21649": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21650": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21651": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21652": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21653": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
		},
		"21656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.name"
		},
		"21657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.description"
		},
		"21658": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.is_disabled"
		},
		"21659": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/associate-stock-location.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelStockLocationsReq"
		},
		"21662": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/associate-stock-location.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelStockLocationsReq.location_id"
		},
		"21663": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/remove-stock-location.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelStockLocationsReq"
		},
		"21666": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/remove-stock-location.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelStockLocationsReq.location_id"
		},
		"21667": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "shippingOptionsDefaultFields"
		},
		"21668": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "shippingOptionsDefaultRelations"
		},
		"21669": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsListRes"
		},
		"21670": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"21671": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"21672": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsRes"
		},
		"21673": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"21674": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_option"
		},
		"21675": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsDeleteRes"
		},
		"21676": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq"
		},
		"21679": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.name"
		},
		"21680": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.region_id"
		},
		"21681": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.provider_id"
		},
		"21682": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.profile_id"
		},
		"21683": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.data"
		},
		"21684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.price_type"
		},
		"21685": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.amount"
		},
		"21686": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.requirements"
		},
		"21687": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.admin_only"
		},
		"21688": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.is_return"
		},
		"21689": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.metadata"
		},
		"21690": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.includes_tax"
		},
		"21691": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams"
		},
		"21692": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21693": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetShippingOptionsParams"
		},
		"21694": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21695": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.id"
		},
		"21696": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.name"
		},
		"21697": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.region_id"
		},
		"21698": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.is_return"
		},
		"21699": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.admin_only"
		},
		"21700": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.q"
		},
		"21701": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.order"
		},
		"21702": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.created_at"
		},
		"21703": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.updated_at"
		},
		"21704": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.deleted_at"
		},
		"21705": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.fields"
		},
		"21706": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.expand"
		},
		"21707": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21708": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21709": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq"
		},
		"21712": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.name"
		},
		"21713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.amount"
		},
		"21714": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.price_type"
		},
		"21715": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.requirements"
		},
		"21716": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.admin_only"
		},
		"21717": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.metadata"
		},
		"21718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.includes_tax"
		},
		"21719": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "defaultAdminShippingProfilesFields"
		},
		"21720": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "defaultAdminShippingProfilesRelations"
		},
		"21721": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminDeleteShippingProfileRes"
		},
		"21722": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminShippingProfilesRes"
		},
		"21723": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type"
		},
		"21724": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type.shipping_profile"
		},
		"21725": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminShippingProfilesListRes"
		},
		"21726": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type"
		},
		"21727": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"21728": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq"
		},
		"21731": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.name"
		},
		"21732": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.type"
		},
		"21733": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.metadata"
		},
		"21734": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq"
		},
		"21737": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.name"
		},
		"21738": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.metadata"
		},
		"21739": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.type"
		},
		"21740": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.products"
		},
		"21741": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.shipping_options"
		},
		"21742": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "defaultAdminStockLocationFields"
		},
		"21743": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "defaultAdminStockLocationRelations"
		},
		"21744": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsDeleteRes"
		},
		"21745": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsRes"
		},
		"21746": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type"
		},
		"21747": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type.stock_location"
		},
		"21748": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsListRes"
		},
		"21749": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type"
		},
		"21750": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"21751": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq"
		},
		"21754": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.name"
		},
		"21755": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.address"
		},
		"21756": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.address_id"
		},
		"21757": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.metadata"
		},
		"21758": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsParams"
		},
		"21761": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21762": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21763": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/get-stock-location.ts",
			"qualifiedName": "AdminGetStockLocationsLocationParams"
		},
		"21766": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21767": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21768": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams"
		},
		"21769": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"21770": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetStockLocationsParams"
		},
		"21771": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"21772": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.q"
		},
		"21773": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.id"
		},
		"21774": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.name"
		},
		"21775": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.address_id"
		},
		"21776": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.sales_channel_id"
		},
		"21777": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.order"
		},
		"21778": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21779": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21780": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"21781": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"21782": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq"
		},
		"21785": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.name"
		},
		"21786": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.address"
		},
		"21787": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.address_id"
		},
		"21788": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.metadata"
		},
		"21789": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationParams"
		},
		"21792": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21793": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21794": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "defaultRelationsExtended"
		},
		"21795": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminExtendedStoresRes"
		},
		"21796": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"21797": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.store"
		},
		"21798": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminStoresRes"
		},
		"21799": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"21800": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.store"
		},
		"21801": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminTaxProvidersList"
		},
		"21802": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"21803": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.tax_providers"
		},
		"21804": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminPaymentProvidersList"
		},
		"21805": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"21806": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.payment_providers"
		},
		"21807": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq"
		},
		"21810": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.name"
		},
		"21811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.swap_link_template"
		},
		"21812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.payment_link_template"
		},
		"21813": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.invite_link_template"
		},
		"21814": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.default_currency_code"
		},
		"21815": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.currencies"
		},
		"21816": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.metadata"
		},
		"21817": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "defaultAdminSwapRelations"
		},
		"21818": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "defaultAdminSwapFields"
		},
		"21819": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "AdminSwapsListRes"
		},
		"21820": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"21821": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type.swaps"
		},
		"21822": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "AdminSwapsRes"
		},
		"21823": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"21824": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type.swap"
		},
		"21825": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams"
		},
		"21828": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams.limit"
		},
		"21829": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams.offset"
		},
		"21830": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "defaultAdminTaxRatesRelations"
		},
		"21831": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "defaultAdminTaxRatesFields"
		},
		"21832": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesDeleteRes"
		},
		"21833": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesListRes"
		},
		"21834": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type"
		},
		"21835": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"21836": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesRes"
		},
		"21837": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type"
		},
		"21838": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type.tax_rate"
		},
		"21839": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams"
		},
		"21842": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.region_id"
		},
		"21843": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.name"
		},
		"21844": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.code"
		},
		"21845": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.rate"
		},
		"21846": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.offset"
		},
		"21847": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.limit"
		},
		"21848": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.expand"
		},
		"21849": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.fields"
		},
		"21850": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.order"
		},
		"21851": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.updated_at"
		},
		"21852": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.created_at"
		},
		"21853": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.deleted_at"
		},
		"21854": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.q"
		},
		"21855": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams"
		},
		"21858": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams.expand"
		},
		"21859": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams.fields"
		},
		"21860": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
		},
		"21863": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq.product_types"
		},
		"21864": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams"
		},
		"21867": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams.expand"
		},
		"21868": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams.fields"
		},
		"21869": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
		},
		"21872": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq.products"
		},
		"21873": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams"
		},
		"21876": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams.expand"
		},
		"21877": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams.fields"
		},
		"21878": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
		},
		"21881": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq.shipping_options"
		},
		"21882": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams"
		},
		"21885": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams.expand"
		},
		"21886": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams.fields"
		},
		"21887": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
		},
		"21890": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq.product_types"
		},
		"21891": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams"
		},
		"21894": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams.expand"
		},
		"21895": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams.fields"
		},
		"21896": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
		},
		"21899": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq.products"
		},
		"21900": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams"
		},
		"21903": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams.expand"
		},
		"21904": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams.fields"
		},
		"21905": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
		},
		"21908": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq.shipping_options"
		},
		"21909": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams"
		},
		"21912": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams.expand"
		},
		"21913": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams.fields"
		},
		"21914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq"
		},
		"21917": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.code"
		},
		"21918": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.name"
		},
		"21919": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.region_id"
		},
		"21920": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.rate"
		},
		"21921": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.products"
		},
		"21922": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.shipping_options"
		},
		"21923": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.product_types"
		},
		"21924": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams"
		},
		"21927": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams.expand"
		},
		"21928": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams.fields"
		},
		"21929": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq"
		},
		"21932": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.code"
		},
		"21933": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.name"
		},
		"21934": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.region_id"
		},
		"21935": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.rate"
		},
		"21936": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.products"
		},
		"21937": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.shipping_options"
		},
		"21938": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.product_types"
		},
		"21939": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams"
		},
		"21942": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams.expand"
		},
		"21943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams.fields"
		},
		"21944": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminUploadsRes"
		},
		"21945": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type"
		},
		"21946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type.uploads"
		},
		"21947": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminDeleteUploadsRes"
		},
		"21948": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminUploadsDownloadUrlRes"
		},
		"21949": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type"
		},
		"21950": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type.download_url"
		},
		"21951": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq"
		},
		"21954": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq.originalName"
		},
		"21955": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq.path"
		},
		"21956": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/delete-upload.ts",
			"qualifiedName": "AdminDeleteUploadsReq"
		},
		"21959": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/delete-upload.ts",
			"qualifiedName": "AdminDeleteUploadsReq.file_key"
		},
		"21960": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/get-download-url.ts",
			"qualifiedName": "AdminPostUploadsDownloadUrlReq"
		},
		"21963": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/get-download-url.ts",
			"qualifiedName": "AdminPostUploadsDownloadUrlReq.file_key"
		},
		"21964": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "unauthenticatedUserRoutes"
		},
		"21965": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "unauthenticatedUserRoutes"
		},
		"21966": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "app"
		},
		"21967": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "defaultAdminUserFields"
		},
		"21968": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminUserRes"
		},
		"21969": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type"
		},
		"21970": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type.user"
		},
		"21971": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminUsersListRes"
		},
		"21972": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type"
		},
		"21973": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type.users"
		},
		"21974": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminDeleteUserRes"
		},
		"21975": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "payload"
		},
		"21976": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type"
		},
		"21977": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.email"
		},
		"21978": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.user_id"
		},
		"21979": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.password"
		},
		"21980": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest"
		},
		"21983": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.email"
		},
		"21984": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.token"
		},
		"21985": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.password"
		},
		"21986": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password-token.ts",
			"qualifiedName": "AdminResetPasswordTokenRequest"
		},
		"21989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password-token.ts",
			"qualifiedName": "AdminResetPasswordTokenRequest.email"
		},
		"21990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest"
		},
		"21993": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.email"
		},
		"21994": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.first_name"
		},
		"21995": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.last_name"
		},
		"21996": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.role"
		},
		"21997": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.password"
		},
		"21998": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams"
		},
		"21999": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"22000": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetUsersParams"
		},
		"22001": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"22002": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.id"
		},
		"22003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.q"
		},
		"22004": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.order"
		},
		"22005": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.updated_at"
		},
		"22006": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.created_at"
		},
		"22007": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.deleted_at"
		},
		"22008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.email"
		},
		"22009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.first_name"
		},
		"22010": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.last_name"
		},
		"22011": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.role"
		},
		"22012": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.fields"
		},
		"22013": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22014": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"22015": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"22016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest"
		},
		"22019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.first_name"
		},
		"22020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.last_name"
		},
		"22021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.role"
		},
		"22022": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.api_token"
		},
		"22023": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.metadata"
		},
		"22024": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "defaultAdminVariantRelations"
		},
		"22025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "defaultAdminVariantFields"
		},
		"22026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "AdminVariantsListRes"
		},
		"22027": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type"
		},
		"22028": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type.variants"
		},
		"22029": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "AdminVariantsRes"
		},
		"22030": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type"
		},
		"22031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type.variant"
		},
		"22032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams"
		},
		"22035": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.q"
		},
		"22036": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.limit"
		},
		"22037": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.offset"
		},
		"22038": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.expand"
		},
		"22039": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.fields"
		},
		"22040": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.id"
		},
		"22041": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.title"
		},
		"22042": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.inventory_quantity"
		},
		"22043": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.order"
		},
		"22044": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.manage_inventory"
		},
		"22045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.allow_backorder"
		},
		"22046": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams.customer_id"
		},
		"22047": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"22048": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"22049": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"22050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-variant.ts",
			"qualifiedName": "AdminGetVariantParams"
		},
		"22053": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22054": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "LevelWithAvailability"
		},
		"22056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"22057": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.available_quantity"
		},
		"22058": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "ResponseInventoryItem"
		},
		"22059": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"22060": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.location_levels"
		},
		"22061": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "VariantInventory"
		},
		"22062": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"22063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.id"
		},
		"22064": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.inventory"
		},
		"22065": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.sales_channel_availability"
		},
		"22066": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"22067": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.channel_name"
		},
		"22068": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.channel_id"
		},
		"22069": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.available_quantity"
		},
		"22070": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "AdminGetVariantsVariantInventoryRes"
		},
		"22071": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"22072": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.variant"
		},
		"22073": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "defaultAdminWorkflowExecutionsRelations"
		},
		"22074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "allowedAdminWorkflowExecutionsRelations"
		},
		"22075": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "defaultAdminWorkflowExecutionsFields"
		},
		"22076": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "defaultAdminWorkflowExecutionDetailFields"
		},
		"22077": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionDetailsParams"
		},
		"22080": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22081": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams"
		},
		"22083": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"22084": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams"
		},
		"22085": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"22086": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.transaction_id"
		},
		"22087": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.workflow_id"
		},
		"22088": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22089": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22090": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"22091": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"22092": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"22093": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsRunReq"
		},
		"22096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsRunReq.input"
		},
		"22097": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsRunReq.transaction_id"
		},
		"22098": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq"
		},
		"22101": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.transaction_id"
		},
		"22102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.step_id"
		},
		"22103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.response"
		},
		"22104": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.compensate_input"
		},
		"22105": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.action"
		},
		"22106": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreAuthRes"
		},
		"22107": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"22108": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.customer"
		},
		"22109": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreBearerAuthRes"
		},
		"22110": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"22111": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.access_token"
		},
		"22112": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreGetAuthEmailRes"
		},
		"22113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"22114": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.exists"
		},
		"22115": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq"
		},
		"22118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq.email"
		},
		"22119": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq.password"
		},
		"22120": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "defaultStoreCartFields"
		},
		"22121": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "defaultStoreCartRelations"
		},
		"22122": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "StoreCartsRes"
		},
		"22123": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"22124": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.cart"
		},
		"22125": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "StoreCompleteCartRes"
		},
		"22126": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"22127": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"22128": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"22129": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"22130": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"22131": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"22132": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"22133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"22134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"22135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq"
		},
		"22138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq.option_id"
		},
		"22139": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq.data"
		},
		"22140": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item"
		},
		"22143": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item.variant_id"
		},
		"22144": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item.quantity"
		},
		"22145": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq"
		},
		"22148": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.region_id"
		},
		"22149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.country_code"
		},
		"22150": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.items"
		},
		"22151": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.context"
		},
		"22152": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.sales_channel_id"
		},
		"22153": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq"
		},
		"22156": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.variant_id"
		},
		"22157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.quantity"
		},
		"22158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.metadata"
		},
		"22159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/set-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionReq"
		},
		"22162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/set-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionReq.provider_id"
		},
		"22163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq"
		},
		"22166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.region_id"
		},
		"22167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.country_code"
		},
		"22168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.email"
		},
		"22169": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.billing_address"
		},
		"22170": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.shipping_address"
		},
		"22171": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.gift_cards"
		},
		"22172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.discounts"
		},
		"22173": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.customer_id"
		},
		"22174": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.context"
		},
		"22175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.sales_channel_id"
		},
		"22176": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq"
		},
		"22179": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq.quantity"
		},
		"22180": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq.metadata"
		},
		"22181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq"
		},
		"22184": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq.data"
		},
		"22185": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "defaultStoreCollectionRelations"
		},
		"22186": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "allowedFields"
		},
		"22187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "StoreCollectionsListRes"
		},
		"22188": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type"
		},
		"22189": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type.collections"
		},
		"22190": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "StoreCollectionsRes"
		},
		"22191": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type"
		},
		"22192": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type.collection"
		},
		"22193": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams"
		},
		"22196": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.handle"
		},
		"22197": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.limit"
		},
		"22198": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.offset"
		},
		"22199": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.created_at"
		},
		"22200": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.updated_at"
		},
		"22201": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "defaultStoreCustomersRelations"
		},
		"22202": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "defaultStoreCustomersFields"
		},
		"22203": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "allowedStoreCustomersRelations"
		},
		"22204": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "allowedStoreCustomersFields"
		},
		"22205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersRes"
		},
		"22206": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"22207": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"22208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersResetPasswordRes"
		},
		"22209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"22210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"22211": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersListOrdersRes"
		},
		"22212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"22213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.orders"
		},
		"22214": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersListPaymentMethodsRes"
		},
		"22215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"22216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.payment_methods"
		},
		"22217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"22218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.provider_id"
		},
		"22219": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.data"
		},
		"22220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesReq"
		},
		"22223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesReq.address"
		},
		"22224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq"
		},
		"22227": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.first_name"
		},
		"22228": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.last_name"
		},
		"22229": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.email"
		},
		"22230": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.password"
		},
		"22231": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.phone"
		},
		"22232": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams"
		},
		"22235": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
		},
		"22236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
		},
		"22237": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
		},
		"22238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
		},
		"22239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams"
		},
		"22242": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.id"
		},
		"22243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.q"
		},
		"22244": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.status"
		},
		"22245": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.fulfillment_status"
		},
		"22246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.payment_status"
		},
		"22247": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.display_id"
		},
		"22248": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.cart_id"
		},
		"22249": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.email"
		},
		"22250": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.region_id"
		},
		"22251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.currency_code"
		},
		"22252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.tax_rate"
		},
		"22253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.created_at"
		},
		"22254": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.updated_at"
		},
		"22255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.canceled_at"
		},
		"22256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
		},
		"22257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
		},
		"22258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
		},
		"22259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
		},
		"22260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq"
		},
		"22263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.email"
		},
		"22264": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.token"
		},
		"22265": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.password"
		},
		"22266": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password-token.ts",
			"qualifiedName": "StorePostCustomersCustomerPasswordTokenReq"
		},
		"22269": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password-token.ts",
			"qualifiedName": "StorePostCustomersCustomerPasswordTokenReq.email"
		},
		"22270": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesAddressReq"
		},
		"22273": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"22274": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"22275": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"22276": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"22277": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"22278": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"22279": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"22280": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"22281": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"22282": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"22283": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"22284": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq"
		},
		"22287": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.billing_address"
		},
		"22288": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.first_name"
		},
		"22289": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.last_name"
		},
		"22290": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.password"
		},
		"22291": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.phone"
		},
		"22292": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.email"
		},
		"22293": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.metadata"
		},
		"22294": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "defaultStoreGiftCardRelations"
		},
		"22295": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "defaultStoreGiftCardFields"
		},
		"22296": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "allowedStoreGiftCardRelations"
		},
		"22297": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "allowedStoreGiftCardFields"
		},
		"22298": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "StoreGiftCardsRes"
		},
		"22299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"22300": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "__type.gift_card"
		},
		"22301": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "StoreOrderEditsRes"
		},
		"22302": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"22303": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "__type.order_edit"
		},
		"22304": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/decline-order-edit.ts",
			"qualifiedName": "StorePostOrderEditsOrderEditDecline"
		},
		"22307": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/decline-order-edit.ts",
			"qualifiedName": "StorePostOrderEditsOrderEditDecline.declined_reason"
		},
		"22308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "defaultStoreOrdersRelations"
		},
		"22309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "allowedStoreOrdersRelations"
		},
		"22310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "defaultStoreOrdersFields"
		},
		"22311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "allowedStoreOrdersFields"
		},
		"22312": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "StoreOrdersRes"
		},
		"22313": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "__type"
		},
		"22314": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"22315": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/confirm-order-request.ts",
			"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
		},
		"22318": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/confirm-order-request.ts",
			"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq.token"
		},
		"22319": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "ShippingAddressPayload"
		},
		"22322": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "ShippingAddressPayload.postal_code"
		},
		"22323": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams"
		},
		"22326": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.display_id"
		},
		"22327": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.email"
		},
		"22328": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.shipping_address"
		},
		"22329": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22330": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22331": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/request-order.ts",
			"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
		},
		"22334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/request-order.ts",
			"qualifiedName": "StorePostCustomersCustomerOrderClaimReq.order_ids"
		},
		"22335": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "defaultPaymentCollectionRelations"
		},
		"22336": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "StorePaymentCollectionsRes"
		},
		"22337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"22338": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type.payment_collection"
		},
		"22339": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "StorePaymentCollectionsSessionRes"
		},
		"22340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"22341": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type.payment_session"
		},
		"22342": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/authorize-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
		},
		"22345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/authorize-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq.session_ids"
		},
		"22346": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/get-payment-collection.ts",
			"qualifiedName": "StoreGetPaymentCollectionsParams"
		},
		"22349": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22350": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22351": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq"
		},
		"22354": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.provider_id"
		},
		"22355": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.amount"
		},
		"22356": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.session_id"
		},
		"22357": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
		},
		"22360": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq.sessions"
		},
		"22361": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-payment-session.ts",
			"qualifiedName": "StorePaymentCollectionSessionsReq"
		},
		"22364": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-payment-session.ts",
			"qualifiedName": "StorePaymentCollectionSessionsReq.provider_id"
		},
		"22365": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreProductCategoryRelations"
		},
		"22366": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreCategoryScope"
		},
		"22367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object"
		},
		"22368": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object.is_internal"
		},
		"22369": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object.is_active"
		},
		"22370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreProductCategoryFields"
		},
		"22371": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "allowedStoreProductCategoryFields"
		},
		"22372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "StoreGetProductCategoriesCategoryRes"
		},
		"22373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"22374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type.product_category"
		},
		"22375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "StoreGetProductCategoriesRes"
		},
		"22376": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"22377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type.product_categories"
		},
		"22378": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/get-product-category.ts",
			"qualifiedName": "StoreGetProductCategoriesCategoryParams"
		},
		"22381": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22382": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22383": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams"
		},
		"22384": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"22385": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "StoreGetProductCategoriesParams"
		},
		"22386": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"22387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.q"
		},
		"22388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.handle"
		},
		"22389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.parent_category_id"
		},
		"22390": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.include_descendants_tree"
		},
		"22391": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22392": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22393": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"22394": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"22395": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"22396": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "defaultStoreProductTagFields"
		},
		"22397": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "allowedStoreProductTagFields"
		},
		"22398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "defaultStoreProductTagRelations"
		},
		"22399": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "StoreProductTagsListRes"
		},
		"22400": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "__type"
		},
		"22401": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "__type.product_tags"
		},
		"22402": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams"
		},
		"22405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.id"
		},
		"22406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.q"
		},
		"22407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.value"
		},
		"22408": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.created_at"
		},
		"22409": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.updated_at"
		},
		"22410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.order"
		},
		"22411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.discount_condition_id"
		},
		"22412": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"22413": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"22414": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "allowedStoreProductTypeFields"
		},
		"22415": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "defaultStoreProductTypeFields"
		},
		"22416": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "defaultStoreProductTypeRelations"
		},
		"22417": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "StoreProductTypesListRes"
		},
		"22418": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "__type"
		},
		"22419": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "__type.product_types"
		},
		"22420": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams"
		},
		"22423": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.id"
		},
		"22424": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.q"
		},
		"22425": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.value"
		},
		"22426": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.created_at"
		},
		"22427": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.updated_at"
		},
		"22428": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.order"
		},
		"22429": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.discount_condition_id"
		},
		"22430": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"22431": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"22432": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductsRelations"
		},
		"22433": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductsFields"
		},
		"22434": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "allowedStoreProductsFields"
		},
		"22435": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "allowedStoreProductsRelations"
		},
		"22436": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductRemoteQueryObject"
		},
		"22437": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22439": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.images"
		},
		"22440": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22441": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22442": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.tags"
		},
		"22443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22444": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.type"
		},
		"22446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22447": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22448": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.collection"
		},
		"22449": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22450": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22451": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"22452": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.values"
		},
		"22455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22456": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22457": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.variants"
		},
		"22458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"22461": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22462": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22463": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.profile"
		},
		"22464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.sales_channels"
		},
		"22467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"22468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"22469": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StoreProductsRes"
		},
		"22470": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"22471": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"22472": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StorePostSearchRes"
		},
		"22473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"22474": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.hits"
		},
		"22475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StoreProductsListRes"
		},
		"22476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"22477": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.products"
		},
		"22478": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams"
		},
		"22481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.offset"
		},
		"22482": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.limit"
		},
		"22483": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.order"
		},
		"22484": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"22485": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"22486": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"22487": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22488": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22489": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams"
		},
		"22492": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.id"
		},
		"22493": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.q"
		},
		"22494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.collection_id"
		},
		"22495": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.tags"
		},
		"22496": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.title"
		},
		"22497": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.description"
		},
		"22498": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.handle"
		},
		"22499": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.is_giftcard"
		},
		"22500": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.type_id"
		},
		"22501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.sales_channel_id"
		},
		"22502": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.category_id"
		},
		"22503": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.include_category_children"
		},
		"22504": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.created_at"
		},
		"22505": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.updated_at"
		},
		"22506": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.offset"
		},
		"22507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.limit"
		},
		"22508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.order"
		},
		"22509": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"22510": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"22511": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"22512": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22513": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22514": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq"
		},
		"22517": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.q"
		},
		"22518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.offset"
		},
		"22519": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.limit"
		},
		"22520": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.filter"
		},
		"22521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "defaultStoreRegionRelations"
		},
		"22522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "defaultStoreRegionFields"
		},
		"22523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "StoreRegionsListRes"
		},
		"22524": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type"
		},
		"22525": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type.regions"
		},
		"22526": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "StoreRegionsRes"
		},
		"22527": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type"
		},
		"22528": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type.region"
		},
		"22529": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/get-region.ts",
			"qualifiedName": "StoreGetRegionsRegionParams"
		},
		"22532": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22533": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams"
		},
		"22535": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"22536": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "StoreGetRegionsParams"
		},
		"22537": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"22538": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams.created_at"
		},
		"22539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams.updated_at"
		},
		"22540": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22541": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22542": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"22543": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"22544": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"22545": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "defaultStoreReturnReasonFields"
		},
		"22546": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "defaultStoreReturnReasonRelations"
		},
		"22547": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "StoreReturnReasonsListRes"
		},
		"22548": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"22549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"22550": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "StoreReturnReasonsRes"
		},
		"22551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"22552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type.return_reason"
		},
		"22553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "StoreReturnsRes"
		},
		"22554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "__type"
		},
		"22555": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "__type.return"
		},
		"22556": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq"
		},
		"22559": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.order_id"
		},
		"22560": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.items"
		},
		"22561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.return_shipping"
		},
		"22562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "StoreShippingOptionsListRes"
		},
		"22563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"22564": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"22565": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "StoreCartShippingOptionsListRes"
		},
		"22566": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"22567": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"22568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams"
		},
		"22571": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.product_ids"
		},
		"22572": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.region_id"
		},
		"22573": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.is_return"
		},
		"22574": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "defaultStoreSwapRelations"
		},
		"22575": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "defaultStoreSwapFields"
		},
		"22576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "StoreSwapsRes"
		},
		"22577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"22578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "__type.swap"
		},
		"22579": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq"
		},
		"22582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.order_id"
		},
		"22583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.return_items"
		},
		"22584": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.additional_items"
		},
		"22585": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.return_shipping_option"
		},
		"22586": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "defaultStoreVariantRelations"
		},
		"22587": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "allowedStoreVariantRelations"
		},
		"22588": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "StoreVariantsRes"
		},
		"22589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type"
		},
		"22590": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type.variant"
		},
		"22591": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "StoreVariantsListRes"
		},
		"22592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type"
		},
		"22593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type.variants"
		},
		"22594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/get-variant.ts",
			"qualifiedName": "StoreGetVariantsVariantParams"
		},
		"22597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/get-variant.ts",
			"qualifiedName": "StoreGetVariantsVariantParams.sales_channel_id"
		},
		"22598": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"22599": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"22600": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"22601": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22602": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22603": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams"
		},
		"22606": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.limit"
		},
		"22607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.offset"
		},
		"22608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.ids"
		},
		"22609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.sales_channel_id"
		},
		"22610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.id"
		},
		"22611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.title"
		},
		"22612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.inventory_quantity"
		},
		"22613": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"22614": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"22615": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"22616": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22617": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22618": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate.ts",
			"qualifiedName": "default"
		},
		"22619": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate.ts",
			"qualifiedName": "default"
		},
		"22620": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate-customer.ts",
			"qualifiedName": "default"
		},
		"22621": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate-customer.ts",
			"qualifiedName": "default"
		},
		"22622": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "default"
		},
		"22623": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "default"
		},
		"22624": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "fn"
		},
		"22625": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "canAccessBatchJob"
		},
		"22626": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "canAccessBatchJob"
		},
		"22627": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "req"
		},
		"22628": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "res"
		},
		"22629": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "next"
		},
		"22630": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "getRequestedBatchJob"
		},
		"22631": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "getRequestedBatchJob"
		},
		"22632": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "req"
		},
		"22633": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "res"
		},
		"22634": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "next"
		},
		"22635": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "doesConditionBelongToDiscount"
		},
		"22636": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "doesConditionBelongToDiscount"
		},
		"22637": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "req"
		},
		"22638": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "res"
		},
		"22639": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "next"
		},
		"22640": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "default"
		},
		"22641": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "default"
		},
		"22642": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "__function"
		},
		"22643": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "__function"
		},
		"22644": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "err"
		},
		"22645": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "req"
		},
		"22646": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "res"
		},
		"22647": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "next"
		},
		"22648": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "isFeatureFlagEnabled"
		},
		"22649": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "isFeatureFlagEnabled"
		},
		"22650": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "flagKey"
		},
		"22651": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "__type"
		},
		"22652": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "__type"
		},
		"22653": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "req"
		},
		"22654": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "res"
		},
		"22655": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "next"
		},
		"22656": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "default"
		},
		"22657": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "default"
		},
		"22658": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "__type"
		},
		"22659": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "__type"
		},
		"22660": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "req"
		},
		"22661": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "res"
		},
		"22662": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "next"
		},
		"22663": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/require-customer-authentication.ts",
			"qualifiedName": "default"
		},
		"22664": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/require-customer-authentication.ts",
			"qualifiedName": "default"
		},
		"22665": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "transformBody"
		},
		"22666": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "transformBody"
		},
		"22667": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "T"
		},
		"22668": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "plainToClass"
		},
		"22669": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "config"
		},
		"22670": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "__type"
		},
		"22671": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "__type"
		},
		"22672": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "req"
		},
		"22673": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "res"
		},
		"22674": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "next"
		},
		"22675": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "transformIncludesOptions"
		},
		"22676": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "transformIncludesOptions"
		},
		"22677": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "allowedIncludes"
		},
		"22678": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "expectedIncludes"
		},
		"22679": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "__function"
		},
		"22680": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "__function"
		},
		"22681": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "req"
		},
		"22682": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "res"
		},
		"22683": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "next"
		},
		"22684": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformQuery"
		},
		"22685": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformQuery"
		},
		"22686": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "T"
		},
		"22687": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "TEntity"
		},
		"22688": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "plainToClass"
		},
		"22689": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "queryConfig"
		},
		"22690": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "config"
		},
		"22691": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"22692": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"22693": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "req"
		},
		"22694": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "res"
		},
		"22695": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "next"
		},
		"22696": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformStoreQuery"
		},
		"22697": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformStoreQuery"
		},
		"22698": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "T"
		},
		"22699": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "TEntity"
		},
		"22700": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "plainToClass"
		},
		"22701": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "queryConfig"
		},
		"22702": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "config"
		},
		"22703": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"22704": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"22705": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "req"
		},
		"22706": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "res"
		},
		"22707": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "next"
		},
		"22708": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus"
		},
		"22709": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CREATED"
		},
		"22710": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.PRE_PROCESSED"
		},
		"22711": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CONFIRMED"
		},
		"22712": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.PROCESSING"
		},
		"22713": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.COMPLETED"
		},
		"22714": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CANCELED"
		},
		"22715": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.FAILED"
		},
		"22716": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobUpdateProps"
		},
		"22717": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "CreateBatchJobInput"
		},
		"22718": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"22719": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.type"
		},
		"22720": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.context"
		},
		"22721": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.dry_run"
		},
		"22722": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobResultError"
		},
		"22723": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"22724": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.message"
		},
		"22725": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.code"
		},
		"22726": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.__index"
		},
		"22728": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobResultStatDescriptor"
		},
		"22729": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"22730": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.key"
		},
		"22731": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.name"
		},
		"22732": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.message"
		},
		"22733": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps"
		},
		"22736": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.id"
		},
		"22737": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.status"
		},
		"22738": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.type"
		},
		"22739": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.created_by"
		},
		"22740": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.created_at"
		},
		"22741": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.updated_at"
		},
		"22742": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobCreateProps"
		},
		"22743": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "extendedFindParamsMixin"
		},
		"22744": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "extendedFindParamsMixin"
		},
		"22745": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__0"
		},
		"22746": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"22747": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"22748": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"22749": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"22750": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"22751": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"22752": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "K"
		},
		"22753": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "PartialPick"
		},
		"22754": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"22755": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "K"
		},
		"22756": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "Writable"
		},
		"22757": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"22758": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig"
		},
		"22759": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"22760": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"22761": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"22762": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"22763": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"22764": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"22765": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.__index"
		},
		"22767": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"22768": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "ExtendedFindConfig"
		},
		"22769": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"22770": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.select"
		},
		"22771": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.relations"
		},
		"22772": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.where"
		},
		"22773": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"22774": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.skip"
		},
		"22775": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.take"
		},
		"22776": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"22777": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QuerySelector"
		},
		"22778": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"22779": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.q"
		},
		"22780": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"22781": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TreeQuerySelector"
		},
		"22782": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"22783": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.include_descendants_tree"
		},
		"22784": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"22785": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "Selector"
		},
		"22786": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"22787": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TotalField"
		},
		"22788": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions"
		},
		"22789": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.select"
		},
		"22790": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.where"
		},
		"22791": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.order"
		},
		"22792": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.skip"
		},
		"22793": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.take"
		},
		"22794": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.TModel"
		},
		"22795": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.InKeys"
		},
		"22796": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"22797": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"22798": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaults"
		},
		"22799": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"22800": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"22801": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowed"
		},
		"22802": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"22803": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"22804": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"22805": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.isList"
		},
		"22806": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"22807": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"22808": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.expand"
		},
		"22809": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.fields"
		},
		"22810": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"22811": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"22812": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"22813": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"22814": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"22815": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"22816": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.count"
		},
		"22817": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"22818": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.id"
		},
		"22819": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.object"
		},
		"22820": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"22821": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"22824": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"22827": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"22828": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"22829": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"22830": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"22831": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"22834": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"22835": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"22836": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"22837": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"22838": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"22839": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"22840": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"22841": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"22844": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"22845": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"22846": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"22847": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"22848": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload"
		},
		"22851": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"22852": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"22853": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"22854": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"22855": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"22856": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"22857": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"22858": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"22859": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"22860": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"22861": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"22862": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload"
		},
		"22865": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.first_name"
		},
		"22866": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.last_name"
		},
		"22867": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.phone"
		},
		"22868": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.metadata"
		},
		"22869": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.company"
		},
		"22870": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.address_1"
		},
		"22871": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.address_2"
		},
		"22872": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.city"
		},
		"22873": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.country_code"
		},
		"22874": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.province"
		},
		"22875": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.postal_code"
		},
		"22876": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams"
		},
		"22879": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"22880": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"22881": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams"
		},
		"22884": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"22885": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"22886": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"22887": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ExtendedRequest"
		},
		"22888": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22889": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.resource"
		},
		"22890": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "TEntity"
		},
		"22891": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"22892": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22893": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22894": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"22895": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"22896": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"22897": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"22898": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22899": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.panic"
		},
		"22900": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22901": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22902": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "data"
		},
		"22903": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.shouldLog"
		},
		"22904": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22905": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22906": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"22907": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.setLogLevel"
		},
		"22908": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22909": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22910": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"22911": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.unsetLogLevel"
		},
		"22912": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22913": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22914": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.activity"
		},
		"22915": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22916": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22917": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"22918": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "config"
		},
		"22919": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.progress"
		},
		"22920": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22921": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22922": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"22923": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"22924": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.error"
		},
		"22925": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22926": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22927": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "messageOrError"
		},
		"22928": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "error"
		},
		"22929": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.failure"
		},
		"22930": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22931": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22932": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"22933": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"22934": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.success"
		},
		"22935": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22936": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22937": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"22938": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"22939": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.debug"
		},
		"22940": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22941": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22942": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"22943": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.info"
		},
		"22944": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22945": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22946": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"22947": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.warn"
		},
		"22948": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22949": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22950": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"22951": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.log"
		},
		"22952": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22953": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22954": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"22955": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"22956": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22957": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"22958": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"22959": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"22960": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ConfigModule"
		},
		"22961": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"22962": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"22963": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"22964": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"22965": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"22966": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"22967": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"22970": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"22971": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"22972": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"22973": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.name"
		},
		"22974": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.customer_groups"
		},
		"22975": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.description"
		},
		"22976": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.type"
		},
		"22977": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.created_at"
		},
		"22978": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.updated_at"
		},
		"22979": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.deleted_at"
		},
		"22980": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq"
		},
		"22983": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.id"
		},
		"22984": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.region_id"
		},
		"22985": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.currency_code"
		},
		"22986": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.variant_id"
		},
		"22987": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.amount"
		},
		"22988": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.min_quantity"
		},
		"22989": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.max_quantity"
		},
		"22990": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq"
		},
		"22993": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.region_id"
		},
		"22994": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.currency_code"
		},
		"22995": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.amount"
		},
		"22996": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.variant_id"
		},
		"22997": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.min_quantity"
		},
		"22998": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.max_quantity"
		},
		"22999": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "CreatePriceListInput"
		},
		"23000": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"23001": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.name"
		},
		"23002": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.description"
		},
		"23003": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.type"
		},
		"23004": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.status"
		},
		"23005": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.prices"
		},
		"23006": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"23007": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"23008": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"23009": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.starts_at"
		},
		"23010": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.ends_at"
		},
		"23011": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.includes_tax"
		},
		"23012": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "UpdatePriceListInput"
		},
		"23013": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"23014": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.prices"
		},
		"23015": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"23016": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"23017": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"23018": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListPriceUpdateInput"
		},
		"23019": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"23020": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"23021": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.variant_id"
		},
		"23022": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"23023": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"23024": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"23025": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"23026": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"23027": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListPriceCreateInput"
		},
		"23028": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"23029": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"23030": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"23031": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.variant_id"
		},
		"23032": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"23033": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"23034": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"23035": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListLoadConfig"
		},
		"23036": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"23037": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.include_discount_prices"
		},
		"23038": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_id"
		},
		"23039": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.cart_id"
		},
		"23040": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"23041": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"23042": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest"
		},
		"23043": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"23044": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"23045": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"23046": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"23047": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"23048": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"23049": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23050": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"23051": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"23052": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23053": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"23054": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"23055": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"23056": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"23057": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"23058": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"23059": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"23060": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"23061": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"23062": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"23063": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"23064": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"23065": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"23066": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"23067": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest"
		},
		"23068": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.user"
		},
		"23069": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23070": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.customer_id"
		},
		"23071": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.userId"
		},
		"23072": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.auth"
		},
		"23073": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23074": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.actor_id"
		},
		"23075": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.auth_user_id"
		},
		"23076": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.app_metadata"
		},
		"23077": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.scope"
		},
		"23078": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"23079": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"23080": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"23081": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"23082": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"23083": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"23084": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23085": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"23086": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"23087": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23088": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"23089": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"23090": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"23091": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"23092": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"23093": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"23094": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"23095": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"23096": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"23097": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"23098": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"23099": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"23100": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.Body"
		},
		"23101": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaResponse"
		},
		"23102": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"23103": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"23104": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"23105": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23106": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"23107": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "req"
		},
		"23108": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "res"
		},
		"23109": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "next"
		},
		"23110": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"23111": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Res"
		},
		"23112": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "ScheduledJobConfig"
		},
		"23113": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type"
		},
		"23114": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.name"
		},
		"23115": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.schedule"
		},
		"23116": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.data"
		},
		"23117": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "T"
		},
		"23118": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "ScheduledJobArgs"
		},
		"23119": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type"
		},
		"23120": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.container"
		},
		"23121": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.data"
		},
		"23122": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"23123": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "T"
		},
		"23124": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"23125": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"23126": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"23127": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"23128": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"23129": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"23130": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.data"
		},
		"23131": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.eventName"
		},
		"23132": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"23133": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"23134": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"23135": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "CustomerGroupsBatchCustomer"
		},
		"23138": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "CustomerGroupsBatchCustomer.id"
		},
		"23139": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps"
		},
		"23142": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.id"
		},
		"23143": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.q"
		},
		"23144": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.name"
		},
		"23145": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.updated_at"
		},
		"23146": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_at"
		},
		"23147": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.discount_condition_id"
		},
		"23148": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector"
		},
		"23151": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.q"
		},
		"23152": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.has_account"
		},
		"23153": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.groups"
		},
		"23154": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.order"
		},
		"23155": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.created_at"
		},
		"23156": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.updated_at"
		},
		"23157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "Group"
		},
		"23160": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "Group.id"
		},
		"23161": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq"
		},
		"23164": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"23165": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"23166": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"23167": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"23168": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"23169": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams"
		},
		"23172": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams.type"
		},
		"23173": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams.allocation"
		},
		"23174": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item"
		},
		"23177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.title"
		},
		"23178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.unit_price"
		},
		"23179": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.variant_id"
		},
		"23180": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.quantity"
		},
		"23181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.metadata"
		},
		"23182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Discount"
		},
		"23185": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Discount.code"
		},
		"23186": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod"
		},
		"23189": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"23190": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"23191": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"23192": {
			"sourceFileName": "../../../packages/medusa/src/types/draft-orders.ts",
			"qualifiedName": "DraftOrderStatusValue"
		},
		"23193": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "Discount"
		},
		"23196": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "Discount.code"
		},
		"23197": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"23198": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"23199": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"23200": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.sku"
		},
		"23201": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.origin_country"
		},
		"23202": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.hs_code"
		},
		"23203": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.requires_shipping"
		},
		"23204": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.mid_code"
		},
		"23205": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.material"
		},
		"23206": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.weight"
		},
		"23207": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.length"
		},
		"23208": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.height"
		},
		"23209": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.width"
		},
		"23210": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.title"
		},
		"23211": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"23212": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.thumbnail"
		},
		"23213": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"23214": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"23215": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"23216": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"23217": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"23218": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"23219": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"23220": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"23221": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"23222": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"23223": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"23224": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"23225": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"23226": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"23227": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"23228": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"23229": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"23230": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"23231": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"23232": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"23233": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"23234": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item"
		},
		"23237": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.item_id"
		},
		"23238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.quantity"
		},
		"23239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.note"
		},
		"23240": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.reason"
		},
		"23241": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.tags"
		},
		"23242": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.images"
		},
		"23243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping"
		},
		"23246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"23247": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"23248": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem"
		},
		"23251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"23252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"23253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod"
		},
		"23256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.id"
		},
		"23257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"23258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"23259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"23260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item"
		},
		"23263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item.item_id"
		},
		"23264": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item.quantity"
		},
		"23265": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem"
		},
		"23268": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.item_id"
		},
		"23269": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.quantity"
		},
		"23270": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.reason_id"
		},
		"23271": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.note"
		},
		"23272": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping"
		},
		"23275": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"23276": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"23277": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem"
		},
		"23280": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"23281": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"23282": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption"
		},
		"23285": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption.option_id"
		},
		"23286": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption.price"
		},
		"23287": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector"
		},
		"23290": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.q"
		},
		"23291": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.id"
		},
		"23292": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.status"
		},
		"23293": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.fulfillment_status"
		},
		"23294": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.payment_status"
		},
		"23295": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.display_id"
		},
		"23296": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.cart_id"
		},
		"23297": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.customer_id"
		},
		"23298": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.email"
		},
		"23299": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.region_id"
		},
		"23300": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.currency_code"
		},
		"23301": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.tax_rate"
		},
		"23302": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.sales_channel_id"
		},
		"23303": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.canceled_at"
		},
		"23304": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.created_at"
		},
		"23305": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.updated_at"
		},
		"23306": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem"
		},
		"23309": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.item_id"
		},
		"23310": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.quantity"
		},
		"23311": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.reason_id"
		},
		"23312": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.note"
		},
		"23313": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping"
		},
		"23316": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"23317": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"23318": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item"
		},
		"23321": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.id"
		},
		"23322": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.note"
		},
		"23323": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.reason"
		},
		"23324": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.images"
		},
		"23325": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.tags"
		},
		"23326": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.metadata"
		},
		"23327": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod"
		},
		"23330": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.id"
		},
		"23331": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"23332": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"23333": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"23334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod"
		},
		"23337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod.provider_id"
		},
		"23338": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod.data"
		},
		"23339": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod"
		},
		"23342": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.provider_id"
		},
		"23343": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.profile_id"
		},
		"23344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"23345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"23346": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.items"
		},
		"23347": {
			"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"23348": {
			"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"23349": {
			"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"23350": {
			"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"23351": {
			"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"23352": {
			"sourceFileName": "../../../packages/utils/src/pricing/price-list.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"23353": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "CustomerGroup"
		},
		"23356": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "CustomerGroup.id"
		},
		"23357": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "CustomerGroup"
		},
		"23360": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "CustomerGroup.id"
		},
		"23361": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase"
		},
		"23364": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"23365": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.handle"
		},
		"23366": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"23367": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"23368": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"23369": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "ProductBatchProductCategory"
		},
		"23372": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "ProductBatchProductCategory.id"
		},
		"23373": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedProduct"
		},
		"23374": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"23375": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.variants"
		},
		"23376": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq"
		},
		"23379": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq.id"
		},
		"23380": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq.value"
		},
		"23381": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq"
		},
		"23384": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq.id"
		},
		"23385": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq.value"
		},
		"23386": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductSalesChannelReq"
		},
		"23389": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductSalesChannelReq.id"
		},
		"23390": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductProductCategoryReq"
		},
		"23393": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductProductCategoryReq.id"
		},
		"23394": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductOptionReq"
		},
		"23397": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductOptionReq.title"
		},
		"23398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq"
		},
		"23401": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.title"
		},
		"23402": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.sku"
		},
		"23403": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.ean"
		},
		"23404": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.upc"
		},
		"23405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.barcode"
		},
		"23406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.hs_code"
		},
		"23407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.inventory_quantity"
		},
		"23408": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.allow_backorder"
		},
		"23409": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.manage_inventory"
		},
		"23410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.weight"
		},
		"23411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.length"
		},
		"23412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.height"
		},
		"23413": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.width"
		},
		"23414": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.origin_country"
		},
		"23415": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.mid_code"
		},
		"23416": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.material"
		},
		"23417": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.metadata"
		},
		"23418": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.prices"
		},
		"23419": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.options"
		},
		"23420": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq"
		},
		"23423": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.region_id"
		},
		"23424": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.currency_code"
		},
		"23425": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.amount"
		},
		"23426": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.min_quantity"
		},
		"23427": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.max_quantity"
		},
		"23428": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"23431": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"23432": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"23433": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps"
		},
		"23436": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"23437": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"23438": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"23439": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.price_list_id"
		},
		"23440": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"23441": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"23442": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"23443": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.description"
		},
		"23444": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"23445": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"23446": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"23447": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.sales_channel_id"
		},
		"23448": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.discount_condition_id"
		},
		"23449": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.category_id"
		},
		"23450": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.include_category_children"
		},
		"23451": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"23452": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"23453": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"23454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq"
		},
		"23457": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.id"
		},
		"23458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.title"
		},
		"23459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.sku"
		},
		"23460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.ean"
		},
		"23461": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.upc"
		},
		"23462": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.barcode"
		},
		"23463": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.hs_code"
		},
		"23464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.inventory_quantity"
		},
		"23465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.allow_backorder"
		},
		"23466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.manage_inventory"
		},
		"23467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.weight"
		},
		"23468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.length"
		},
		"23469": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.height"
		},
		"23470": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.width"
		},
		"23471": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.origin_country"
		},
		"23472": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.mid_code"
		},
		"23473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.material"
		},
		"23474": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.metadata"
		},
		"23475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.prices"
		},
		"23476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.options"
		},
		"23477": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq"
		},
		"23480": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.id"
		},
		"23481": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.region_id"
		},
		"23482": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.currency_code"
		},
		"23483": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.amount"
		},
		"23484": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.min_quantity"
		},
		"23485": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.max_quantity"
		},
		"23486": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"23489": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"23490": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"23491": {
			"sourceFileName": "../../../packages/medusa/src/types/sales-channels.ts",
			"qualifiedName": "ProductBatchSalesChannel"
		},
		"23494": {
			"sourceFileName": "../../../packages/medusa/src/types/sales-channels.ts",
			"qualifiedName": "ProductBatchSalesChannel.id"
		},
		"23495": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"23496": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"23497": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"23498": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"23499": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"23500": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.quantity"
		},
		"23501": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.line_item_id"
		},
		"23502": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"23503": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_by"
		},
		"23504": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"23505": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"23506": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"23507": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"23508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item"
		},
		"23511": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item.item_id"
		},
		"23512": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item.quantity"
		},
		"23513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement"
		},
		"23516": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement.type"
		},
		"23517": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement.amount"
		},
		"23518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement"
		},
		"23521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.id"
		},
		"23522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.type"
		},
		"23523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.amount"
		},
		"23524": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"23525": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"23526": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"23527": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"23528": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"23529": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"23530": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"23531": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.fulfillment_sets"
		},
		"23532": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"23533": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"23534": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"23535": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"23536": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"23537": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.id"
		},
		"23538": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.object"
		},
		"23539": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"23540": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"23541": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"23542": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"23543": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"23544": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress"
		},
		"23547": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_1"
		},
		"23548": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_2"
		},
		"23549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.company"
		},
		"23550": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.city"
		},
		"23551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.country_code"
		},
		"23552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.phone"
		},
		"23553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.postal_code"
		},
		"23554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.province"
		},
		"23555": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress"
		},
		"23558": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_1"
		},
		"23559": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_2"
		},
		"23560": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.company"
		},
		"23561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.city"
		},
		"23562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.country_code"
		},
		"23563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.phone"
		},
		"23564": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.postal_code"
		},
		"23565": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.province"
		},
		"23566": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "ExtendedStoreDTO"
		},
		"23567": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type"
		},
		"23568": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.payment_providers"
		},
		"23569": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"23570": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.feature_flags"
		},
		"23571": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.modules"
		},
		"23572": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"23573": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"23574": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"23575": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole"
		},
		"23576": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole.MEMBER"
		},
		"23577": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole.ADMIN"
		},
		"23578": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole.DEVELOPER"
		},
		"23579": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedVariant"
		},
		"23580": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams"
		},
		"23583": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams.customer_id"
		},
		"23584": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"23585": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"23586": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"23587": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"23588": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"23589": {
			"sourceFileName": "../../../packages/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"23590": {
			"sourceFileName": "../../../packages/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"23591": {
			"sourceFileName": "../../../packages/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"23592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "GiftCard"
		},
		"23595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "GiftCard.code"
		},
		"23596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "Discount"
		},
		"23599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "Discount.code"
		},
		"23600": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams"
		},
		"23603": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"23604": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"23605": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"23606": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"23607": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"23608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item"
		},
		"23611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.item_id"
		},
		"23612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.quantity"
		},
		"23613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.reason_id"
		},
		"23614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.note"
		},
		"23615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "ReturnShipping"
		},
		"23618": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"23619": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedShippingOption"
		},
		"23620": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item"
		},
		"23623": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.item_id"
		},
		"23624": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.quantity"
		},
		"23625": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.reason_id"
		},
		"23626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.note"
		},
		"23627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem"
		},
		"23630": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"23631": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"23632": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "handler"
		},
		"23633": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "__type"
		},
		"23634": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "__type"
		},
		"23635": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "req"
		},
		"23636": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "res"
		},
		"23637": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError"
		},
		"23638": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.Types"
		},
		"23639": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type"
		},
		"23640": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.DB_ERROR"
		},
		"23641": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.DUPLICATE_ERROR"
		},
		"23642": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INVALID_ARGUMENT"
		},
		"23643": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INVALID_DATA"
		},
		"23644": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.UNAUTHORIZED"
		},
		"23645": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.NOT_FOUND"
		},
		"23646": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.NOT_ALLOWED"
		},
		"23647": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.UNEXPECTED_STATE"
		},
		"23648": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.CONFLICT"
		},
		"23649": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.PAYMENT_AUTHORIZATION_ERROR"
		},
		"23650": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.Codes"
		},
		"23651": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type"
		},
		"23652": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INSUFFICIENT_INVENTORY"
		},
		"23653": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.CART_INCOMPATIBLE_STATE"
		},
		"23654": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.__constructor"
		},
		"23655": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError"
		},
		"23656": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "type"
		},
		"23657": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "message"
		},
		"23658": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "code"
		},
		"23659": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "params"
		},
		"23660": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.type"
		},
		"23661": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.message"
		},
		"23662": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.code"
		},
		"23663": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.date"
		},
		"23664": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "InnerSelector"
		},
		"23665": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"23666": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "MedusaContainer"
		},
		"23667": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"23668": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"23669": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"23670": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"23671": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "name"
		},
		"23672": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "registration"
		},
		"23673": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "T"
		},
		"23674": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type.createScope"
		},
		"23675": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"23676": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"23677": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"23678": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"23679": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.plugins"
		},
		"23680": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"23681": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"23682": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"23683": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"23684": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"23685": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"23686": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"23687": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"23688": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"23689": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"23690": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"23691": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"23692": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"23702": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"23703": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"23704": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image"
		},
		"23707": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image.id"
		},
		"23708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image.url"
		},
		"23709": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag"
		},
		"23712": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag.id"
		},
		"23713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag.value"
		},
		"23714": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"23717": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"23718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"23721": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"23722": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"23723": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"23724": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"23725": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"23726": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"23727": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"23728": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"23729": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"23730": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"23731": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"23732": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"23733": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"23734": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"23735": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"23736": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"23737": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"23738": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO"
		},
		"23739": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.id"
		},
		"23740": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.name"
		},
		"23741": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.type"
		},
		"23742": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.metadata"
		},
		"23743": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.service_zones"
		},
		"23744": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.created_at"
		},
		"23745": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.updated_at"
		},
		"23746": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.deleted_at"
		},
		"23747": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"23748": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type"
		},
		"23749": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type.key"
		},
		"23750": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type.value"
		},
		"23751": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "ModulesResponse"
		},
		"23752": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "ProductVariantPricing"
		},
		"23753": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"23754": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.prices"
		},
		"23755": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price"
		},
		"23756": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price"
		},
		"23757": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price_includes_tax"
		},
		"23758": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_includes_tax"
		},
		"23759": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_type"
		},
		"23760": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "ShippingOptionPricing"
		},
		"23761": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"23762": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.price_incl_tax"
		},
		"23763": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"23764": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_amount"
		},
		"23765": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"23766": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.store_cors"
		},
		"23767": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin_cors"
		},
		"23768": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.auth_cors"
		},
		"23769": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookie_secret"
		},
		"23770": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwt_secret"
		},
		"23771": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_database"
		},
		"23772": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_url"
		},
		"23773": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_schema"
		},
		"23774": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_logging"
		},
		"23776": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_extra"
		},
		"23777": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"23778": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"23779": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"23780": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"23781": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_driver_options"
		},
		"23782": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"23783": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"23784": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"23785": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"23786": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"23787": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"23788": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_url"
		},
		"23789": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_prefix"
		},
		"23790": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_options"
		},
		"23791": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.session_options"
		},
		"23792": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.http_compression"
		},
		"23793": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobs_batch_size"
		},
		"23794": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"23795": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"23796": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23797": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"23798": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"23799": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"23800": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"23801": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"23802": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"23803": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"23804": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"23805": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"23806": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"23807": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23808": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"23809": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"23810": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"23811": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23812": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"23813": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"23814": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"23815": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"23816": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"23817": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"23818": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO"
		},
		"23819": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.id"
		},
		"23820": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.name"
		},
		"23821": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.metadata"
		},
		"23822": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.fulfillment_sets"
		},
		"23823": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.geo_zones"
		},
		"23824": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.shipping_options"
		},
		"23825": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.created_at"
		},
		"23826": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.updated_at"
		},
		"23827": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.deleted_at"
		},
		"23828": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"23829": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23830": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"23831": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"23832": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "TaxedPricing"
		},
		"23833": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"23834": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price_incl_tax"
		},
		"23835": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_incl_tax"
		},
		"23836": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_tax"
		},
		"23837": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_tax"
		},
		"23838": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"23839": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "TaxServiceRate"
		},
		"23840": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type"
		},
		"23841": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.rate"
		},
		"23842": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.name"
		},
		"23843": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.code"
		},
		"23844": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"23845": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"23846": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"23847": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"23848": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"23849": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"23850": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"23851": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"23852": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"23853": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"23854": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"23855": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"23856": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"23857": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"23858": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"23859": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"23860": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"23861": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23862": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"23863": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"23864": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"23865": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"23866": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"23867": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"23868": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"23869": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"23870": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"23871": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"23872": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23873": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"23874": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"23875": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.migrations"
		},
		"23876": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.models"
		},
		"23877": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"23878": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"23879": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"23880": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"23881": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"23882": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"23883": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"23884": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"23885": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"23886": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO"
		},
		"23887": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.id"
		},
		"23888": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.type"
		},
		"23889": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.country_code"
		},
		"23890": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.province_code"
		},
		"23891": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.city"
		},
		"23892": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.postal_expression"
		},
		"23893": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.metadata"
		},
		"23894": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.created_at"
		},
		"23895": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.updated_at"
		},
		"23896": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.deleted_at"
		},
		"23897": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO"
		},
		"23898": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.id"
		},
		"23899": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.name"
		},
		"23900": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.price_type"
		},
		"23901": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone_id"
		},
		"23902": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile_id"
		},
		"23903": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.provider_id"
		},
		"23904": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_option_type_id"
		},
		"23905": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.data"
		},
		"23906": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.metadata"
		},
		"23907": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone"
		},
		"23908": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile"
		},
		"23909": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillment_provider"
		},
		"23910": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.type"
		},
		"23911": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.rules"
		},
		"23912": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillments"
		},
		"23913": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.created_at"
		},
		"23914": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.updated_at"
		},
		"23915": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.deleted_at"
		},
		"23916": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"23917": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23918": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23919": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"23920": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"23921": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"23922": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23923": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23924": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"23925": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"23926": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"23927": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"23928": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"23929": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"23930": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"23931": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"23932": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"23933": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneType"
		},
		"23934": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionPriceType"
		},
		"23935": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO"
		},
		"23936": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.id"
		},
		"23937": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.name"
		},
		"23938": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.type"
		},
		"23939": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.metadata"
		},
		"23940": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.shipping_options"
		},
		"23941": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.created_at"
		},
		"23942": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.updated_at"
		},
		"23943": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.deleted_at"
		},
		"23944": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO"
		},
		"23945": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.id"
		},
		"23946": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.name"
		},
		"23947": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.metadata"
		},
		"23948": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.shipping_options"
		},
		"23949": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.created_at"
		},
		"23950": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.updated_at"
		},
		"23951": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.deleted_at"
		},
		"23952": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO"
		},
		"23953": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.id"
		},
		"23954": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.label"
		},
		"23955": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.description"
		},
		"23956": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.code"
		},
		"23957": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option_id"
		},
		"23958": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option"
		},
		"23959": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.created_at"
		},
		"23960": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.updated_at"
		},
		"23961": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.deleted_at"
		},
		"23962": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO"
		},
		"23963": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.id"
		},
		"23964": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.attribute"
		},
		"23965": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.operator"
		},
		"23966": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.value"
		},
		"23967": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type"
		},
		"23968": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type.value"
		},
		"23969": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option_id"
		},
		"23970": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option"
		},
		"23971": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.created_at"
		},
		"23972": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.updated_at"
		},
		"23973": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.deleted_at"
		},
		"23974": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO"
		},
		"23975": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.id"
		},
		"23976": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.location_id"
		},
		"23977": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.packed_at"
		},
		"23978": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipped_at"
		},
		"23979": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivered_at"
		},
		"23980": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.canceled_at"
		},
		"23981": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.data"
		},
		"23982": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider_id"
		},
		"23983": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option_id"
		},
		"23984": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.metadata"
		},
		"23985": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option"
		},
		"23986": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider"
		},
		"23987": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivery_address"
		},
		"23988": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.items"
		},
		"23989": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.labels"
		},
		"23990": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.created_at"
		},
		"23991": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.updated_at"
		},
		"23992": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.deleted_at"
		},
		"23993": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"23994": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"23995": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"23996": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"23997": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"23998": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"23999": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24000": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24001": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"24002": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"24003": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24004": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24005": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"24006": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"24007": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24008": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24009": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"24010": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24011": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24012": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"24013": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"24014": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"24015": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24016": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24017": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"24018": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"24019": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"24020": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24021": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24022": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"24023": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"24024": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"24025": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24026": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24027": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"24028": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"24029": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"24030": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24031": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24032": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"24033": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"24034": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"24035": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24036": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24037": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"24038": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"24039": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24040": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24041": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"24042": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"24043": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24044": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24045": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"24046": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"24047": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24048": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"24049": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"24050": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO"
		},
		"24051": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.id"
		},
		"24052": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.fulfillment_id"
		},
		"24053": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.company"
		},
		"24054": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.first_name"
		},
		"24055": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.last_name"
		},
		"24056": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_1"
		},
		"24057": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_2"
		},
		"24058": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.city"
		},
		"24059": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.country_code"
		},
		"24060": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.province"
		},
		"24061": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.postal_code"
		},
		"24062": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.phone"
		},
		"24063": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.metadata"
		},
		"24064": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.created_at"
		},
		"24065": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.updated_at"
		},
		"24066": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.deleted_at"
		},
		"24067": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO"
		},
		"24068": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.id"
		},
		"24069": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.title"
		},
		"24070": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.quantity"
		},
		"24071": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.sku"
		},
		"24072": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.barcode"
		},
		"24073": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.line_item_id"
		},
		"24074": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.inventory_item_id"
		},
		"24075": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment_id"
		},
		"24076": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment"
		},
		"24077": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.created_at"
		},
		"24078": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.updated_at"
		},
		"24079": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.deleted_at"
		},
		"24080": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO"
		},
		"24081": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.id"
		},
		"24082": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_number"
		},
		"24083": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_url"
		},
		"24084": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.label_url"
		},
		"24085": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment_id"
		},
		"24086": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment"
		},
		"24087": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.created_at"
		},
		"24088": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.updated_at"
		},
		"24089": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.deleted_at"
		}
	}
}