openapi: 3.0.0
info:
  version: 2.0.0
  title: Medusa Admin API
  license:
    name: MIT
    url: https://github.com/medusajs/medusa/blob/master/LICENSE
servers:
  - url: http://localhost:9000
  - url: https://api.medusa-commerce.com
tags:
  - name: Api Keys
  - name: Campaigns
  - name: Collections
  - name: Currencies
    description: |
      A store can use unlimited currencies, and each region must be associated with at least one currency.
      Currencies are defined within the Medusa backend. Currency API Routes allow admins to list and update currencies.
    externalDocs:
      description: How to manage currencies
      url: https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-currencies
  - name: Customer Groups
    description: |
      Customer Groups can be used to organize customers that share similar data or attributes into dedicated groups.
      This can be useful for different purposes such as setting a different price for a specific customer group.
    externalDocs:
      description: How to manage customer groups
      url: https://docs.medusajs.com/modules/customers/admin/manage-customer-groups
  - name: Customers
    description: |
      Customers can either be created when they register through the Store APIs, or created by the admin using the Admin APIs.
    externalDocs:
      description: How to manage customers
      url: https://docs.medusajs.com/modules/customers/admin/manage-customers
  - name: Fulfillment
  - name: Inventory Items
    description: |
      Inventory items, provided by the [Inventory Module](https://docs.medusajs.com/modules/multiwarehouse/inventory-module), can be used to manage the inventory of saleable items in your store.
    externalDocs:
      description: How to manage inventory items
      url: https://docs.medusajs.com/modules/multiwarehouse/admin/manage-inventory-items
  - name: Invites
    description: |
      An admin can invite new users to manage their team. This would allow new users to authenticate as admins and perform admin functionalities.
    externalDocs:
      description: How to manage invites
      url: https://docs.medusajs.com/modules/users/admin/manage-invites
  - name: Payments
    description: |
      A payment can be related to an order, swap, return, or more. It can be captured or refunded.
  - name: Price Lists
    description: |
      A price list are special prices applied to products based on a set of conditions, such as customer group.
    externalDocs:
      description: How to manage price lists
      url: https://docs.medusajs.com/modules/price-lists/admin/manage-price-lists
  - name: Pricing
  - name: Products
    description: |
      Products are saleable items in a store. This also includes [saleable gift cards](https://docs.medusajs.com/modules/gift-cards/admin/manage-gift-cards#manage-gift-card-product) in a store.
    externalDocs:
      description: How to manage products
      url: https://docs.medusajs.com/modules/products/admin/manage-products
  - name: Promotions
  - name: Regions
    description: |
      Regions are different countries or geographical regions that the commerce store serves customers in.
      Admins can manage these regions, their providers, and more.
    externalDocs:
      description: How to manage regions
      url: https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-regions
  - name: Sales Channels
    description: |
      A sales channel indicates a channel where products can be sold in. For example, a webshop or a mobile app.
      Admins can manage sales channels and the products available in them.
    externalDocs:
      description: How to manage sales channels
      url: https://docs.medusajs.com/modules/sales-channels/admin/manage
  - name: Stock Locations
  - name: Stores
  - name: Tax Rates
    description: |
      Each region has at least a default tax rate. Admins can create and manage additional tax rates that can be applied for certain conditions, such as for specific product types.
    externalDocs:
      description: How to manage tax rates
      url: https://docs.medusajs.com/modules/taxes/admin/manage-tax-rates
  - name: Tax Regions
  - name: Users
    description: |
      A store can have more than one user, each having the same privileges. Admins can manage users, their passwords, and more.
    externalDocs:
      description: How to manage users
      url: https://docs.medusajs.com/modules/users/admin/manage-users
  - name: Workflows Executions
paths:
  /admin/api-keys:
    get:
      operationId: GetApiKeys
      summary: List Api Keys
      description: Retrieve a list of api keys. The api keys can be filtered by fields such as `id`. The api keys can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/api-keys' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostApiKeys
      summary: Create Api Key
      description: Create a api key.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/api-keys' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/api-keys/{id}:
    get:
      operationId: GetApiKeysId
      summary: Get a Api Key
      description: Retrieve a api key by its ID. You can expand the api key's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/api-keys/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostApiKeysId
      summary: Update a Api Key
      description: Update a api key's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/api-keys/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteApiKeysId
      summary: Delete a Api Key
      description: Delete a api key.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/api-keys/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/api-keys/{id}/revoke:
    post:
      operationId: PostApiKeysIdRevoke
      summary: Add Revokes to Api Key
      description: Add a list of revokes to a api key.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The api key's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/api-keys/{id}/revoke' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Api Keys
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/campaigns:
    get:
      operationId: GetCampaigns
      summary: List Campaigns
      description: Retrieve a list of campaigns. The campaigns can be filtered by fields such as `id`. The campaigns can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/campaigns' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCampaigns
      summary: Create Campaign
      description: Create a campaign.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/campaigns' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/campaigns/{id}:
    get:
      operationId: GetCampaignsId
      summary: Get a Campaign
      description: Retrieve a campaign by its ID. You can expand the campaign's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The campaign's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/campaigns/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCampaignsId
      summary: Update a Campaign
      description: Update a campaign's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The campaign's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostCampaignsReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/campaigns/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Moriah"
            }'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteCampaignsId
      summary: Delete a Campaign
      description: Delete a campaign.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The campaign's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/campaigns/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Campaigns
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/collections:
    get:
      operationId: GetCollections
      summary: List Collections
      description: Retrieve a list of collections. The collections can be filtered by fields such as `id`. The collections can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/collections' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCollections
      summary: Create Collection
      description: Create a collection.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/collections' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/collections/{id}:
    get:
      operationId: GetCollectionsId
      summary: Get a Collection
      description: Retrieve a collection by its ID. You can expand the collection's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The collection's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/collections/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCollectionsId
      summary: Update a Collection
      description: Update a collection's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The collection's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/collections/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteCollectionsId
      summary: Delete a Collection
      description: Delete a collection.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The collection's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/collections/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Collections
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/currencies:
    get:
      operationId: GetCurrencies
      summary: List Currencies
      description: Retrieve a list of currencies. The currencies can be filtered by fields such as `id`. The currencies can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/currencies' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Currencies
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/currencies/{code}:
    get:
      operationId: GetCurrenciesCode
      summary: Get a Currency
      description: Retrieve a currency by its ID. You can expand the currency's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: code
          in: path
          description: The currency's code.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/currencies/{code}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Currencies
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customer-groups:
    get:
      operationId: GetCustomerGroups
      summary: List Customer Groups
      description: Retrieve a list of customer groups. The customer groups can be filtered by fields such as `id`. The customer groups can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customer-groups' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomerGroups
      summary: Create Customer Group
      description: Create a customer group.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customer-groups' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customer-groups/{id}:
    get:
      operationId: GetCustomerGroupsId
      summary: Get a Customer Group
      description: Retrieve a customer group by its ID. You can expand the customer group's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customer-groups/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomerGroupsId
      summary: Update a Customer Group
      description: Update a customer group's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customer-groups/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteCustomerGroupsId
      summary: Delete a Customer Group
      description: Delete a customer group.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/customer-groups/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customer-groups/{id}/customers:
    get:
      operationId: GetCustomerGroupsIdCustomers
      summary: List Customers
      description: Retrieve a list of customers in a customer group. The customers can be filtered by fields like FILTER FIELDS. The customers can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customer-groups/{id}/customers' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customer-groups/{id}/customers/batch:
    post:
      operationId: PostCustomerGroupsIdCustomersBatch
      summary: Add Customers to Customer Group
      description: Add a list of customers to a customer group.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostCustomerGroupsGroupCustomersBatchReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customer-groups/{id}/customers/batch' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "customer_ids": [
                {
                  "id": "id_dx2Wieq4uGG"
                }
              ]
            }'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/customer-groups/{id}/customers/remove:
    post:
      operationId: PostCustomerGroupsIdCustomersRemove
      summary: Add Removes to Customer Group
      description: Add a list of removes to a customer group.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer group's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostCustomerGroupsGroupCustomersBatchReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customer-groups/{id}/customers/remove' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "customer_ids": [
                {
                  "id": "id_oAhMZi39hsjIOqPA6"
                }
              ]
            }'
      tags:
        - Customer Groups
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/customers:
    get:
      operationId: GetCustomers
      summary: List Customers
      description: Retrieve a list of customers. The customers can be filtered by fields such as `id`. The customers can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomers
      summary: Create Customer
      description: Create a customer.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customers/{id}:
    get:
      operationId: GetCustomersId
      summary: Get a Customer
      description: Retrieve a customer by its ID. You can expand the customer's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomersId
      summary: Update a Customer
      description: Update a customer's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteCustomersId
      summary: Delete a Customer
      description: Delete a customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/customers/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customers/{id}/addresses:
    get:
      operationId: GetCustomersIdAddresses
      summary: List Addresses
      description: Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER FIELDS. The addresses can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers/{id}/addresses' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomersIdAddresses
      summary: Add Addresses to Customer
      description: Add a list of addresses to a customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers/{id}/addresses' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/customers/{id}/addresses/{address_id}:
    get:
      operationId: GetCustomersIdAddressesAddress_id
      summary: List Addresses
      description: Retrieve a list of addresses in a customer. The addresses can be filtered by fields like FILTER FIELDS. The addresses can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          description: The customer's address id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/customers/{id}/addresses/{address_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostCustomersIdAddressesAddress_id
      summary: Add Addresses to Customer
      description: Add a list of addresses to a customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          description: The customer's address id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/customers/{id}/addresses/{address_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteCustomersIdAddressesAddress_id
      summary: Remove Addresses from Customer
      description: Remove a list of addresses from a customer. This doesn't delete the Address, only the association between the Address and the customer.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The customer's ID.
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          description: The customer's address id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/customers/{id}/addresses/{address_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Customers
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/fulfillment/shipping-options/{id}/rules/batch/add:
    post:
      operationId: PostFulfillmentShippingOptionsIdRulesBatchAdd
      summary: Add Adds to Fulfillment
      description: Add a list of adds to a fulfillment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostFulfillmentShippingOptionsRulesBatchAddReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/fulfillment/shipping-options/{id}/rules/batch/add' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rules": [
                {
                  "attribute": "{value}"
                }
              ]
            }'
      tags:
        - Fulfillment
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/fulfillment/shipping-options/{id}/rules/batch/remove:
    post:
      operationId: PostFulfillmentShippingOptionsIdRulesBatchRemove
      summary: Add Removes to Fulfillment
      description: Add a list of removes to a fulfillment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The fulfillment's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostFulfillmentShippingOptionsRulesBatchRemoveReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/fulfillment/shipping-options/{id}/rules/batch/remove' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rule_ids": [
                "{value}"
              ]
            }'
      tags:
        - Fulfillment
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/inventory-items:
    get:
      operationId: GetInventoryItems
      summary: List Inventory Items
      description: Retrieve a list of inventory items. The inventory items can be filtered by fields such as `id`. The inventory items can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/inventory-items' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostInventoryItems
      summary: Create Inventory Item
      description: Create a inventory item.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostInventoryItemsReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/inventory-items/{id}:
    get:
      operationId: GetInventoryItemsId
      summary: Get a Inventory Item
      description: Retrieve a inventory item by its ID. You can expand the inventory item's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/inventory-items/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostInventoryItemsId
      summary: Update a Inventory Item
      description: Update a inventory item's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostInventoryItemsInventoryItemReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteInventoryItemsId
      summary: Delete a Inventory Item
      description: Delete a inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/inventory-items/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/inventory-items/{id}/location-levels:
    post:
      operationId: PostInventoryItemsIdLocationLevels
      summary: Add Location Levels to Inventory Item
      description: Add a list of location levels to a inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostInventoryItemsItemLocationLevelsReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items/{id}/location-levels' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "location_id": "{value}",
              "stocked_quantity": 1506469662949376
            }'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/inventory-items/{id}/location-levels/{location_id}:
    post:
      operationId: PostInventoryItemsIdLocationLevelsLocation_id
      summary: Add Location Levels to Inventory Item
      description: Add a list of location levels to a inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: The inventory item's location id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostInventoryItemsItemLocationLevelsLevelReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/inventory-items/{id}/location-levels/{location_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteInventoryItemsIdLocationLevelsLocation_id
      summary: Remove Location Levels from Inventory Item
      description: Remove a list of location levels from a inventory item. This doesn't delete the Location Level, only the association between the Location Level and the inventory item.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The inventory item's ID.
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          description: The inventory item's location id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/inventory-items/{id}/location-levels/{location_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Inventory Items
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/invites:
    get:
      operationId: GetInvites
      summary: List Invites
      description: Retrieve a list of invites. The invites can be filtered by fields such as `id`. The invites can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/invites' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostInvites
      summary: Create Invite
      description: Create a invite.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/invites' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/invites/accept:
    post:
      operationId: PostInvitesAccept
      summary: Create Invite
      description: Create a invite.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostInvitesInviteAcceptReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/invites/accept' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "first_name": "{value}",
              "last_name": "{value}"
            }'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/invites/{id}:
    get:
      operationId: GetInvitesId
      summary: Get a Invite
      description: Retrieve a invite by its ID. You can expand the invite's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The invite's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/invites/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteInvitesId
      summary: Delete a Invite
      description: Delete a invite.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The invite's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/invites/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/invites/{id}/resend:
    post:
      operationId: PostInvitesIdResend
      summary: Add Resends to Invite
      description: Add a list of resends to a invite.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The invite's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/invites/{id}/resend' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Invites
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/payments:
    get:
      operationId: GetPayments
      summary: List Payments
      description: Retrieve a list of payments. The payments can be filtered by fields such as `id`. The payments can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/payments' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/payments/{id}:
    get:
      operationId: GetPaymentsId
      summary: Get a Payment
      description: Retrieve a payment by its ID. You can expand the payment's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The payment's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/payments/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/payments/{id}/capture:
    post:
      operationId: PostPaymentsIdCapture
      summary: Add Captures to Payment
      description: Add a list of captures to a payment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The payment's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPaymentsCapturesReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/payments/{id}/capture' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/payments/{id}/refund:
    post:
      operationId: PostPaymentsIdRefund
      summary: Add Refunds to Payment
      description: Add a list of refunds to a payment.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The payment's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPaymentsRefundsReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/payments/{id}/refund' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Payments
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/price-lists:
    get:
      operationId: GetPriceLists
      summary: List Price Lists
      description: Retrieve a list of price lists. The price lists can be filtered by fields such as `id`. The price lists can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/price-lists' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostPriceLists
      summary: Create Price List
      description: Create a price list.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPriceListsReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "title": "{value}",
              "description": "{value}",
              "prices": [
                {
                  "currency_code": "{value}",
                  "amount": 1270314195484672,
                  "variant_id": "{value}"
                }
              ]
            }'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/price-lists/{id}:
    get:
      operationId: GetPriceListsId
      summary: Get a Price List
      description: Retrieve a price list by its ID. You can expand the price list's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/price-lists/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostPriceListsId
      summary: Update a Price List
      description: Update a price list's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPriceListsPriceListReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "prices": [
                {
                  "currency_code": "{value}",
                  "amount": 1670236243755008,
                  "variant_id": "{value}"
                }
              ]
            }'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeletePriceListsId
      summary: Delete a Price List
      description: Delete a price list.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/price-lists/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/price-lists/{id}/prices/batch/add:
    post:
      operationId: PostPriceListsIdPricesBatchAdd
      summary: Add Adds to Price List
      description: Add a list of adds to a price list.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPriceListsPriceListPricesBatchAddReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists/{id}/prices/batch/add' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "prices": [
                {
                  "currency_code": "{value}",
                  "amount": 6595965345595392,
                  "variant_id": "{value}"
                }
              ]
            }'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/price-lists/{id}/prices/batch/remove:
    post:
      operationId: PostPriceListsIdPricesBatchRemove
      summary: Add Removes to Price List
      description: Add a list of removes to a price list.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The price list's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPriceListsPriceListPricesBatchRemoveReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/price-lists/{id}/prices/batch/remove' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "ids": [
                "{value}"
              ]
            }'
      tags:
        - Price Lists
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/pricing/rule-types:
    get:
      operationId: GetPricingRuleTypes
      summary: List Pricing
      description: Retrieve a list of pricing. The pricing can be filtered by fields such as `id`. The pricing can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminGetPricingRuleTypesParams'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/pricing/rule-types' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostPricingRuleTypes
      summary: Create Pricing
      description: Create a pricing.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPricingRuleTypesReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/pricing/rule-types' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Thurman",
              "rule_attribute": "{value}",
              "default_priority": 4640267816665088
            }'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/pricing/rule-types/{id}:
    get:
      operationId: GetPricingRuleTypesId
      summary: List Rule Types
      description: Retrieve a list of rule types in a pricing. The rule types can be filtered by fields like FILTER FIELDS. The rule types can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The pricing's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminGetPricingRuleTypesRuleTypeParams'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/pricing/rule-types/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostPricingRuleTypesId
      summary: Add Rule Types to Pricing
      description: Add a list of rule types to a pricing.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The pricing's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPricingRuleTypesRuleTypeReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/pricing/rule-types/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeletePricingRuleTypesId
      summary: Remove Rule Types from Pricing
      description: Remove a list of rule types from a pricing. This doesn't delete the Rule Type, only the association between the Rule Type and the pricing.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The pricing's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminDeletePricingRuleTypesRuleTypeReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/pricing/rule-types/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Pricing
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/products:
    get:
      operationId: GetProducts
      summary: List Products
      description: Retrieve a list of products. The products can be filtered by fields such as `id`. The products can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminGetProductsParams'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostProducts
      summary: Create Product
      description: Create a product.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products/{id}:
    get:
      operationId: GetProductsId
      summary: Get a Product
      description: Retrieve a product by its ID. You can expand the product's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsId
      summary: Update a Product
      description: Update a product's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteProductsId
      summary: Delete a Product
      description: Delete a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/products/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products/{id}/options:
    get:
      operationId: GetProductsIdOptions
      summary: List Options
      description: Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS. The options can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/options' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdOptions
      summary: Add Options to Product
      description: Add a list of options to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/options' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products/{id}/options/{option_id}:
    get:
      operationId: GetProductsIdOptionsOption_id
      summary: List Options
      description: Retrieve a list of options in a product. The options can be filtered by fields like FILTER FIELDS. The options can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: option_id
          in: path
          description: The product's option id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/options/{option_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdOptionsOption_id
      summary: Add Options to Product
      description: Add a list of options to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: option_id
          in: path
          description: The product's option id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/options/{option_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteProductsIdOptionsOption_id
      summary: Remove Options from Product
      description: Remove a list of options from a product. This doesn't delete the Option, only the association between the Option and the product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: option_id
          in: path
          description: The product's option id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/products/{id}/options/{option_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products/{id}/variants:
    get:
      operationId: GetProductsIdVariants
      summary: List Variants
      description: Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER FIELDS. The variants can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/variants' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdVariants
      summary: Add Variants to Product
      description: Add a list of variants to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/variants' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/products/{id}/variants/{variant_id}:
    get:
      operationId: GetProductsIdVariantsVariant_id
      summary: List Variants
      description: Retrieve a list of variants in a product. The variants can be filtered by fields like FILTER FIELDS. The variants can also be paginated.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: variant_id
          in: path
          description: The product's variant id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/products/{id}/variants/{variant_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostProductsIdVariantsVariant_id
      summary: Add Variants to Product
      description: Add a list of variants to a product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: variant_id
          in: path
          description: The product's variant id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/products/{id}/variants/{variant_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteProductsIdVariantsVariant_id
      summary: Remove Variants from Product
      description: Remove a list of variants from a product. This doesn't delete the Variant, only the association between the Variant and the product.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The product's ID.
          required: true
          schema:
            type: string
        - name: variant_id
          in: path
          description: The product's variant id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/products/{id}/variants/{variant_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Products
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions:
    get:
      operationId: GetPromotions
      summary: List Promotions
      description: Retrieve a list of promotions. The promotions can be filtered by fields such as `id`. The promotions can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostPromotions
      summary: Create Promotion
      description: Create a promotion.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions/{id}:
    get:
      operationId: GetPromotionsId
      summary: Get a Promotion
      description: Retrieve a promotion by its ID. You can expand the promotion's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminGetPromotionsParams'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/promotions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    post:
      operationId: PostPromotionsId
      summary: Update a Promotion
      description: Update a promotion's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeletePromotionsId
      summary: Delete a Promotion
      description: Delete a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/promotions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/promotions/{id}/buy-rules/batch/add:
    post:
      operationId: PostPromotionsIdBuyRulesBatchAdd
      summary: Add Adds to Promotion
      description: Add a list of adds to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionRulesBatchAddReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/buy-rules/batch/add' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rules": [
                {
                  "attribute": "{value}",
                  "values": [
                    "{value}"
                  ]
                }
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/promotions/{id}/buy-rules/batch/remove:
    post:
      operationId: PostPromotionsIdBuyRulesBatchRemove
      summary: Add Removes to Promotion
      description: Add a list of removes to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionRulesBatchRemoveReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/buy-rules/batch/remove' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rule_ids": [
                "{value}"
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/promotions/{id}/rules/batch/add:
    post:
      operationId: PostPromotionsIdRulesBatchAdd
      summary: Add Adds to Promotion
      description: Add a list of adds to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionRulesBatchAddReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/rules/batch/add' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rules": [
                {
                  "attribute": "{value}",
                  "values": [
                    "{value}"
                  ]
                }
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/promotions/{id}/rules/batch/remove:
    post:
      operationId: PostPromotionsIdRulesBatchRemove
      summary: Add Removes to Promotion
      description: Add a list of removes to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionRulesBatchRemoveReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/rules/batch/remove' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rule_ids": [
                "{value}"
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/promotions/{id}/rules/batch/update:
    post:
      operationId: PostPromotionsIdRulesBatchUpdate
      summary: Add Updates to Promotion
      description: Add a list of updates to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionRulesBatchUpdateReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/rules/batch/update' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rules": [
                {
                  "id": "id_orjnxCxIQlJAp4",
                  "attribute": "{value}",
                  "values": [
                    "{value}"
                  ]
                }
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/promotions/{id}/target-rules/batch/add:
    post:
      operationId: PostPromotionsIdTargetRulesBatchAdd
      summary: Add Adds to Promotion
      description: Add a list of adds to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionRulesBatchAddReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/target-rules/batch/add' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rules": [
                {
                  "attribute": "{value}",
                  "values": [
                    "{value}"
                  ]
                }
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/promotions/{id}/target-rules/batch/remove:
    post:
      operationId: PostPromotionsIdTargetRulesBatchRemove
      summary: Add Removes to Promotion
      description: Add a list of removes to a promotion.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The promotion's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostPromotionsPromotionRulesBatchRemoveReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/promotions/{id}/target-rules/batch/remove' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "rule_ids": [
                "{value}"
              ]
            }'
      tags:
        - Promotions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/regions:
    get:
      operationId: GetRegions
      summary: List Regions
      description: Retrieve a list of regions. The regions can be filtered by fields such as `id`. The regions can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/regions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostRegions
      summary: Create Region
      description: Create a region.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/regions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/regions/{id}:
    get:
      operationId: GetRegionsId
      summary: Get a Region
      description: Retrieve a region by its ID. You can expand the region's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The region's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostRegionsId
      summary: Update a Region
      description: Update a region's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The region's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteRegionsId
      summary: Delete a Region
      description: Delete a region.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The region's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/sales-channels:
    get:
      operationId: GetSalesChannels
      summary: List Sales Channels
      description: Retrieve a list of sales channels. The sales channels can be filtered by fields such as `id`. The sales channels can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/sales-channels' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostSalesChannels
      summary: Create Sales Channel
      description: Create a sales channel.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/sales-channels' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/sales-channels/{id}:
    get:
      operationId: GetSalesChannelsId
      summary: Get a Sales Channel
      description: Retrieve a sales channel by its ID. You can expand the sales channel's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/sales-channels/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostSalesChannelsId
      summary: Update a Sales Channel
      description: Update a sales channel's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/sales-channels/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    delete:
      operationId: DeleteSalesChannelsId
      summary: Delete a Sales Channel
      description: Delete a sales channel.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/sales-channels/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/sales-channels/{id}/products/batch/add:
    post:
      operationId: PostSalesChannelsIdProductsBatchAdd
      summary: Add Adds to Sales Channel
      description: Add a list of adds to a sales channel.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The sales channel's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/sales-channels/{id}/products/batch/add' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Sales Channels
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/stock-locations:
    post:
      operationId: PostStockLocations
      summary: Create Stock Location
      description: Create a stock location.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostStockLocationsReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/stock-locations' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Dorthy"
            }'
      tags:
        - Stock Locations
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/stock-locations/{id}:
    get:
      operationId: GetStockLocationsId
      summary: Get a Stock Location
      description: Retrieve a stock location by its ID. You can expand the stock location's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The stock location's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/stock-locations/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stock Locations
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteStockLocationsId
      summary: Delete a Stock Location
      description: Delete a stock location.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The stock location's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/stock-locations/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stock Locations
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/stores:
    get:
      operationId: GetStores
      summary: List Stores
      description: Retrieve a list of stores. The stores can be filtered by fields such as `id`. The stores can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/stores' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stores
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/stores/{id}:
    get:
      operationId: GetStoresId
      summary: Get a Store
      description: Retrieve a store by its ID. You can expand the store's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The store's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/stores/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stores
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostStoresId
      summary: Update a Store
      description: Update a store's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The store's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/stores/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Stores
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/tax-rates:
    get:
      operationId: GetTaxRates
      summary: List Tax Rates
      description: Retrieve a list of tax rates. The tax rates can be filtered by fields such as `id`. The tax rates can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/tax-rates' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostTaxRates
      summary: Create Tax Rate
      description: Create a tax rate.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostTaxRatesReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-rates' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "name": "Emilio",
              "tax_region_id": "{value}"
            }'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/tax-rates/{id}:
    get:
      operationId: GetTaxRatesId
      summary: Get a Tax Rate
      description: Retrieve a tax rate by its ID. You can expand the tax rate's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/tax-rates/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostTaxRatesId
      summary: Update a Tax Rate
      description: Update a tax rate's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostTaxRatesTaxRateReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-rates/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteTaxRatesId
      summary: Delete a Tax Rate
      description: Delete a tax rate.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/tax-rates/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/tax-rates/{id}/rules:
    post:
      operationId: PostTaxRatesIdRules
      summary: Add Rules to Tax Rate
      description: Add a list of rules to a tax rate.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostTaxRatesTaxRateRulesReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-rates/{id}/rules' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "reference": "{value}",
              "reference_id": "{value}"
            }'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/tax-rates/{id}/rules/{rule_id}:
    delete:
      operationId: DeleteTaxRatesIdRulesRule_id
      summary: Remove Rules from Tax Rate
      description: Remove a list of rules from a tax rate. This doesn't delete the Rule, only the association between the Rule and the tax rate.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax rate's ID.
          required: true
          schema:
            type: string
        - name: rule_id
          in: path
          description: The tax rate's rule id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/tax-rates/{id}/rules/{rule_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Rates
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/tax-regions:
    post:
      operationId: PostTaxRegions
      summary: Create Tax Region
      description: Create a tax region.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostTaxRegionsReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/tax-regions' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "country_code": "{value}"
            }'
      tags:
        - Tax Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/tax-regions/{id}:
    delete:
      operationId: DeleteTaxRegionsId
      summary: Delete a Tax Region
      description: Delete a tax region.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The tax region's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/tax-regions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Tax Regions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/users:
    get:
      operationId: GetUsers
      summary: List Users
      description: Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/users' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostUsers
      summary: Create User
      description: Create a user.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/users' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/users/me:
    get:
      operationId: GetUsersMe
      summary: List Users
      description: Retrieve a list of users. The users can be filtered by fields such as `id`. The users can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/users/me' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/users/{id}:
    get:
      operationId: GetUsersId
      summary: Get a User
      description: Retrieve a user by its ID. You can expand the user's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The user's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/users/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
    post:
      operationId: PostUsersId
      summary: Update a User
      description: Update a user's details.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The user's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateUserRequest'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/users/{id}' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "avatar_url": "{value}"
            }'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
    delete:
      operationId: DeleteUsersId
      summary: Delete a User
      description: Delete a user.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The user's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X DELETE '{backend_url}/admin/users/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Users
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/workflows-executions:
    get:
      operationId: GetWorkflowsExecutions
      summary: List Workflows Executions
      description: Retrieve a list of workflows executions. The workflows executions can be filtered by fields such as `id`. The workflows executions can also be sorted or paginated.
      x-authenticated: true
      parameters: []
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/workflows-executions/{id}:
    get:
      operationId: GetWorkflowsExecutionsId
      summary: Get a Workflows Execution
      description: Retrieve a workflows execution by its ID. You can expand the workflows execution's relations or select the fields that should be returned.
      x-authenticated: true
      parameters:
        - name: id
          in: path
          description: The workflows execution's ID.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/workflows-executions/{workflow_id}/run:
    post:
      operationId: PostWorkflowsExecutionsWorkflow_idRun
      summary: Add Runs to Workflows Execution
      description: Add a list of runs to a workflows execution.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostWorkflowsRunReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/workflows-executions/{workflow_id}/run' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/workflows-executions/{workflow_id}/steps/failure:
    post:
      operationId: PostWorkflowsExecutionsWorkflow_idStepsFailure
      summary: Add Failures to Workflows Execution
      description: Add a list of failures to a workflows execution.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostWorkflowsAsyncResponseReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/workflows-executions/{workflow_id}/steps/failure' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "transaction_id": "{value}",
              "step_id": "{value}"
            }'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/workflows-executions/{workflow_id}/steps/success:
    post:
      operationId: PostWorkflowsExecutionsWorkflow_idStepsSuccess
      summary: Add Successes to Workflows Execution
      description: Add a list of successes to a workflows execution.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPostWorkflowsAsyncResponseReq'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl -X POST '{backend_url}/admin/workflows-executions/{workflow_id}/steps/success' \
            -H 'x-medusa-access-token: {api_token}' \
            -H 'Content-Type: application/json' \
            --data-raw '{
              "transaction_id": "{value}",
              "step_id": "{value}"
            }'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
  /admin/workflows-executions/{workflow_id}/subscribe:
    get:
      operationId: GetWorkflowsExecutionsWorkflow_idSubscribe
      summary: List Subscribes
      description: Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields like FILTER FIELDS. The subscribes can also be paginated.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{workflow_id}/subscribe' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/workflows-executions/{workflow_id}/{transaction_id}:
    get:
      operationId: GetWorkflowsExecutionsWorkflow_idTransaction_id
      summary: 'List '
      description: Retrieve a list of  in a workflows execution. The  can be filtered by fields like FILTER FIELDS. The  can also be paginated.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: transaction_id
          in: path
          description: The workflows execution's transaction id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{workflow_id}/{transaction_id}' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
  /admin/workflows-executions/{workflow_id}/{transaction_id}/{step_id}/subscribe:
    get:
      operationId: GetWorkflowsExecutionsWorkflow_idTransaction_idStep_idSubscribe
      summary: List Subscribes
      description: Retrieve a list of subscribes in a workflows execution. The subscribes can be filtered by fields like FILTER FIELDS. The subscribes can also be paginated.
      x-authenticated: true
      parameters:
        - name: workflow_id
          in: path
          description: The workflows execution's workflow id.
          required: true
          schema:
            type: string
        - name: transaction_id
          in: path
          description: The workflows execution's transaction id.
          required: true
          schema:
            type: string
        - name: step_id
          in: path
          description: The workflows execution's step id.
          required: true
          schema:
            type: string
      security:
        - api_token: []
        - cookie_auth: []
        - jwt_token: []
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |-
            curl '{backend_url}/admin/workflows-executions/{workflow_id}/{transaction_id}/{step_id}/subscribe' \
            -H 'x-medusa-access-token: {api_token}'
      tags:
        - Workflows Executions
      responses:
        '400':
          $ref: '#/components/responses/400_error'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/not_found_error'
        '409':
          $ref: '#/components/responses/invalid_state_error'
        '422':
          $ref: '#/components/responses/invalid_request_error'
        '500':
          $ref: '#/components/responses/500_error'
      requestBody:
        content:
          application/json:
            schema: {}
components:
  responses:
    default_error:
      description: Default Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: unknown_error
            message: An unknown error occurred.
            type: unknown_error
    invalid_state_error:
      description: Invalid State Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: unknown_error
            message: The request conflicted with another request. You may retry the request with the provided Idempotency-Key.
            type: QueryRunnerAlreadyReleasedError
    invalid_request_error:
      description: Invalid Request Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: invalid_request_error
            message: Discount with code TEST already exists.
            type: duplicate_error
    not_found_error:
      description: Not Found Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: Entity with id 1 was not found
            type: not_found
    400_error:
      description: Client Error or Multiple Errors
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/Error'
              - $ref: '#/components/schemas/MultipleErrors'
          examples:
            not_allowed:
              $ref: '#/components/examples/not_allowed_error'
            invalid_data:
              $ref: '#/components/examples/invalid_data_error'
            MultipleErrors:
              $ref: '#/components/examples/multiple_errors'
    500_error:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            database:
              $ref: '#/components/examples/database_error'
            unexpected_state:
              $ref: '#/components/examples/unexpected_state_error'
            invalid_argument:
              $ref: '#/components/examples/invalid_argument_error'
            default_error:
              $ref: '#/components/examples/default_error'
    unauthorized:
      description: User is not authorized. Must log in first
      content:
        text/plain:
          schema:
            type: string
            default: Unauthorized
            example: Unauthorized
    incorrect_credentials:
      description: User does not exist or incorrect credentials
      content:
        text/plain:
          schema:
            type: string
            default: Unauthorized
            example: Unauthorized
  examples:
    not_allowed_error:
      summary: Not Allowed Error
      value:
        message: Discount must be set to dynamic
        type: not_allowed
    invalid_data_error:
      summary: Invalid Data Error
      value:
        message: first_name must be a string
        type: invalid_data
    multiple_errors:
      summary: Multiple Errors
      value:
        message: Provided request body contains errors. Please check the data and retry the request
        errors:
          - message: first_name must be a string
            type: invalid_data
          - message: Discount must be set to dynamic
            type: not_allowed
    database_error:
      summary: Database Error
      value:
        code: api_error
        message: An error occured while hashing password
        type: database_error
    unexpected_state_error:
      summary: Unexpected State Error
      value:
        message: cart.total must be defined
        type: unexpected_state
    invalid_argument_error:
      summary: Invalid Argument Error
      value:
        message: cart.total must be defined
        type: unexpected_state
    default_error:
      summary: Default Error
      value:
        code: unknown_error
        message: An unknown error occurred.
        type: unknown_error
  securitySchemes:
    api_token:
      type: apiKey
      x-displayName: API Token
      in: header
      name: x-medusa-access-token
    jwt_token:
      type: http
      x-displayName: JWT Token
      scheme: bearer
    cookie_auth:
      type: apiKey
      in: cookie
      name: connect.sid
      x-displayName: Cookie Session ID
  schemas:
    AdminDeletePricingRuleTypesRuleTypeReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminDeletePricingRuleTypesRuleTypeReq
      properties: {}
    AdminGetPricingRuleTypesParams:
      type: object
      description: SUMMARY
      x-schemaName: AdminGetPricingRuleTypesParams
      properties:
        rule_attribute:
          type: array
          description: The pricing's rule attribute.
          items:
            type: string
            title: rule_attribute
            description: The rule attribute's details.
        expand:
          type: string
          title: expand
          description: The pricing's expand.
        fields:
          type: string
          title: fields
          description: The pricing's fields.
        offset:
          type: number
          title: offset
          description: The pricing's offset.
        limit:
          type: number
          title: limit
          description: The pricing's limit.
        order:
          type: string
          title: order
          description: The pricing's order.
    AdminGetPricingRuleTypesRuleTypeParams:
      type: object
      description: SUMMARY
      x-schemaName: AdminGetPricingRuleTypesRuleTypeParams
      properties:
        expand:
          type: string
          title: expand
          description: The pricing's expand.
        fields:
          type: string
          title: fields
          description: The pricing's fields.
    AdminGetProductsParams:
      type: object
      description: SUMMARY
      x-schemaName: AdminGetProductsParams
      properties:
        q:
          type: string
          title: q
          description: The product's q.
        id:
          oneOf:
            - type: string
              title: id
              description: The product's ID.
            - type: array
              description: The product's ID.
              items:
                type: string
                title: id
                description: The id's ID.
        status:
          type: array
          description: The product's status.
          items: {}
        title:
          type: string
          title: title
          description: The product's title.
        handle:
          type: string
          title: handle
          description: The product's handle.
        is_giftcard:
          type: boolean
          title: is_giftcard
          description: The product's is giftcard.
        price_list_id:
          type: array
          description: The product's price list id.
          items:
            type: string
            title: price_list_id
            description: The price list id's details.
        sales_channel_id:
          type: array
          description: The product's sales channel id.
          items:
            type: string
            title: sales_channel_id
            description: The sales channel id's details.
        collection_id:
          type: array
          description: The product's collection id.
          items:
            type: string
            title: collection_id
            description: The collection id's details.
        tags:
          type: array
          description: The product's tags.
          items:
            type: string
            title: tags
            description: The tag's tags.
        type_id:
          type: array
          description: The product's type id.
          items:
            type: string
            title: type_id
            description: The type id's details.
        variants:
          type: object
          description: The product's variants.
          properties: {}
        created_at: {}
        updated_at: {}
        deleted_at: {}
        $and:
          type: array
          description: The product's $and.
          items:
            type: object
            description: The $and's details.
            x-schemaName: AdminGetProductsParams
            properties:
              q:
                type: string
                title: q
                description: The $and's q.
              id:
                oneOf:
                  - type: string
                    title: id
                    description: The $and's ID.
                  - type: array
                    description: The $and's ID.
                    items:
                      type: string
                      title: id
                      description: The id's ID.
              status:
                type: array
                description: The $and's status.
                items: {}
              title:
                type: string
                title: title
                description: The $and's title.
              handle:
                type: string
                title: handle
                description: The $and's handle.
              is_giftcard:
                type: boolean
                title: is_giftcard
                description: The $and's is giftcard.
              price_list_id:
                type: array
                description: The $and's price list id.
                items:
                  type: string
                  title: price_list_id
                  description: The price list id's details.
              sales_channel_id:
                type: array
                description: The $and's sales channel id.
                items:
                  type: string
                  title: sales_channel_id
                  description: The sales channel id's details.
              collection_id:
                type: array
                description: The $and's collection id.
                items:
                  type: string
                  title: collection_id
                  description: The collection id's details.
              tags:
                type: array
                description: The $and's tags.
                items:
                  type: string
                  title: tags
                  description: The tag's tags.
              type_id:
                type: array
                description: The $and's type id.
                items:
                  type: string
                  title: type_id
                  description: The type id's details.
              variants:
                type: object
                description: The $and's variants.
                properties: {}
              created_at: {}
              updated_at: {}
              deleted_at: {}
              $and:
                type: array
                description: The $and's details.
                items:
                  type: object
                  description: The $and's details.
                  x-schemaName: AdminGetProductsParams
                  properties:
                    q:
                      type: string
                      title: q
                      description: The $and's q.
                    id:
                      oneOf:
                        - type: string
                          title: id
                          description: The $and's ID.
                        - type: array
                          description: The $and's ID.
                          items:
                            type: string
                            title: id
                            description: The id's ID.
                    status:
                      type: array
                      description: The $and's status.
                      items: {}
                    title:
                      type: string
                      title: title
                      description: The $and's title.
                    handle:
                      type: string
                      title: handle
                      description: The $and's handle.
                    is_giftcard:
                      type: boolean
                      title: is_giftcard
                      description: The $and's is giftcard.
                    price_list_id:
                      type: array
                      description: The $and's price list id.
                      items:
                        type: string
                        title: price_list_id
                        description: The price list id's details.
                    sales_channel_id:
                      type: array
                      description: The $and's sales channel id.
                      items:
                        type: string
                        title: sales_channel_id
                        description: The sales channel id's details.
                    collection_id:
                      type: array
                      description: The $and's collection id.
                      items:
                        type: string
                        title: collection_id
                        description: The collection id's details.
                    tags:
                      type: array
                      description: The $and's tags.
                      items:
                        type: string
                        title: tags
                        description: The tag's tags.
                    type_id:
                      type: array
                      description: The $and's type id.
                      items:
                        type: string
                        title: type_id
                        description: The type id's details.
                    variants:
                      type: object
                      description: The $and's variants.
                      properties: {}
                    created_at: {}
                    updated_at: {}
                    deleted_at: {}
                    $and:
                      type: array
                      description: The $and's details.
                      items:
                        type: object
                        description: The $and's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    $or:
                      type: array
                      description: The $and's $or.
                      items:
                        type: object
                        description: The $or's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    expand:
                      type: string
                      title: expand
                      description: The $and's expand.
                    fields:
                      type: string
                      title: fields
                      description: The $and's fields.
                    offset:
                      type: number
                      title: offset
                      description: The $and's offset.
                    limit:
                      type: number
                      title: limit
                      description: The $and's limit.
                    order:
                      type: string
                      title: order
                      description: The $and's order.
              $or:
                type: array
                description: The $and's $or.
                items:
                  type: object
                  description: The $or's details.
                  x-schemaName: AdminGetProductsParams
                  properties:
                    q:
                      type: string
                      title: q
                      description: The $or's q.
                    id:
                      oneOf:
                        - type: string
                          title: id
                          description: The $or's ID.
                        - type: array
                          description: The $or's ID.
                          items:
                            type: string
                            title: id
                            description: The id's ID.
                    status:
                      type: array
                      description: The $or's status.
                      items: {}
                    title:
                      type: string
                      title: title
                      description: The $or's title.
                    handle:
                      type: string
                      title: handle
                      description: The $or's handle.
                    is_giftcard:
                      type: boolean
                      title: is_giftcard
                      description: The $or's is giftcard.
                    price_list_id:
                      type: array
                      description: The $or's price list id.
                      items:
                        type: string
                        title: price_list_id
                        description: The price list id's details.
                    sales_channel_id:
                      type: array
                      description: The $or's sales channel id.
                      items:
                        type: string
                        title: sales_channel_id
                        description: The sales channel id's details.
                    collection_id:
                      type: array
                      description: The $or's collection id.
                      items:
                        type: string
                        title: collection_id
                        description: The collection id's details.
                    tags:
                      type: array
                      description: The $or's tags.
                      items:
                        type: string
                        title: tags
                        description: The tag's tags.
                    type_id:
                      type: array
                      description: The $or's type id.
                      items:
                        type: string
                        title: type_id
                        description: The type id's details.
                    variants:
                      type: object
                      description: The $or's variants.
                      properties: {}
                    created_at: {}
                    updated_at: {}
                    deleted_at: {}
                    $and:
                      type: array
                      description: The $or's $and.
                      items:
                        type: object
                        description: The $and's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    $or:
                      type: array
                      description: The $or's details.
                      items:
                        type: object
                        description: The $or's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    expand:
                      type: string
                      title: expand
                      description: The $or's expand.
                    fields:
                      type: string
                      title: fields
                      description: The $or's fields.
                    offset:
                      type: number
                      title: offset
                      description: The $or's offset.
                    limit:
                      type: number
                      title: limit
                      description: The $or's limit.
                    order:
                      type: string
                      title: order
                      description: The $or's order.
              expand:
                type: string
                title: expand
                description: The $and's expand.
              fields:
                type: string
                title: fields
                description: The $and's fields.
              offset:
                type: number
                title: offset
                description: The $and's offset.
              limit:
                type: number
                title: limit
                description: The $and's limit.
              order:
                type: string
                title: order
                description: The $and's order.
        $or:
          type: array
          description: The product's $or.
          items:
            type: object
            description: The $or's details.
            x-schemaName: AdminGetProductsParams
            properties:
              q:
                type: string
                title: q
                description: The $or's q.
              id:
                oneOf:
                  - type: string
                    title: id
                    description: The $or's ID.
                  - type: array
                    description: The $or's ID.
                    items:
                      type: string
                      title: id
                      description: The id's ID.
              status:
                type: array
                description: The $or's status.
                items: {}
              title:
                type: string
                title: title
                description: The $or's title.
              handle:
                type: string
                title: handle
                description: The $or's handle.
              is_giftcard:
                type: boolean
                title: is_giftcard
                description: The $or's is giftcard.
              price_list_id:
                type: array
                description: The $or's price list id.
                items:
                  type: string
                  title: price_list_id
                  description: The price list id's details.
              sales_channel_id:
                type: array
                description: The $or's sales channel id.
                items:
                  type: string
                  title: sales_channel_id
                  description: The sales channel id's details.
              collection_id:
                type: array
                description: The $or's collection id.
                items:
                  type: string
                  title: collection_id
                  description: The collection id's details.
              tags:
                type: array
                description: The $or's tags.
                items:
                  type: string
                  title: tags
                  description: The tag's tags.
              type_id:
                type: array
                description: The $or's type id.
                items:
                  type: string
                  title: type_id
                  description: The type id's details.
              variants:
                type: object
                description: The $or's variants.
                properties: {}
              created_at: {}
              updated_at: {}
              deleted_at: {}
              $and:
                type: array
                description: The $or's $and.
                items:
                  type: object
                  description: The $and's details.
                  x-schemaName: AdminGetProductsParams
                  properties:
                    q:
                      type: string
                      title: q
                      description: The $and's q.
                    id:
                      oneOf:
                        - type: string
                          title: id
                          description: The $and's ID.
                        - type: array
                          description: The $and's ID.
                          items:
                            type: string
                            title: id
                            description: The id's ID.
                    status:
                      type: array
                      description: The $and's status.
                      items: {}
                    title:
                      type: string
                      title: title
                      description: The $and's title.
                    handle:
                      type: string
                      title: handle
                      description: The $and's handle.
                    is_giftcard:
                      type: boolean
                      title: is_giftcard
                      description: The $and's is giftcard.
                    price_list_id:
                      type: array
                      description: The $and's price list id.
                      items:
                        type: string
                        title: price_list_id
                        description: The price list id's details.
                    sales_channel_id:
                      type: array
                      description: The $and's sales channel id.
                      items:
                        type: string
                        title: sales_channel_id
                        description: The sales channel id's details.
                    collection_id:
                      type: array
                      description: The $and's collection id.
                      items:
                        type: string
                        title: collection_id
                        description: The collection id's details.
                    tags:
                      type: array
                      description: The $and's tags.
                      items:
                        type: string
                        title: tags
                        description: The tag's tags.
                    type_id:
                      type: array
                      description: The $and's type id.
                      items:
                        type: string
                        title: type_id
                        description: The type id's details.
                    variants:
                      type: object
                      description: The $and's variants.
                      properties: {}
                    created_at: {}
                    updated_at: {}
                    deleted_at: {}
                    $and:
                      type: array
                      description: The $and's details.
                      items:
                        type: object
                        description: The $and's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    $or:
                      type: array
                      description: The $and's $or.
                      items:
                        type: object
                        description: The $or's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    expand:
                      type: string
                      title: expand
                      description: The $and's expand.
                    fields:
                      type: string
                      title: fields
                      description: The $and's fields.
                    offset:
                      type: number
                      title: offset
                      description: The $and's offset.
                    limit:
                      type: number
                      title: limit
                      description: The $and's limit.
                    order:
                      type: string
                      title: order
                      description: The $and's order.
              $or:
                type: array
                description: The $or's details.
                items:
                  type: object
                  description: The $or's details.
                  x-schemaName: AdminGetProductsParams
                  properties:
                    q:
                      type: string
                      title: q
                      description: The $or's q.
                    id:
                      oneOf:
                        - type: string
                          title: id
                          description: The $or's ID.
                        - type: array
                          description: The $or's ID.
                          items:
                            type: string
                            title: id
                            description: The id's ID.
                    status:
                      type: array
                      description: The $or's status.
                      items: {}
                    title:
                      type: string
                      title: title
                      description: The $or's title.
                    handle:
                      type: string
                      title: handle
                      description: The $or's handle.
                    is_giftcard:
                      type: boolean
                      title: is_giftcard
                      description: The $or's is giftcard.
                    price_list_id:
                      type: array
                      description: The $or's price list id.
                      items:
                        type: string
                        title: price_list_id
                        description: The price list id's details.
                    sales_channel_id:
                      type: array
                      description: The $or's sales channel id.
                      items:
                        type: string
                        title: sales_channel_id
                        description: The sales channel id's details.
                    collection_id:
                      type: array
                      description: The $or's collection id.
                      items:
                        type: string
                        title: collection_id
                        description: The collection id's details.
                    tags:
                      type: array
                      description: The $or's tags.
                      items:
                        type: string
                        title: tags
                        description: The tag's tags.
                    type_id:
                      type: array
                      description: The $or's type id.
                      items:
                        type: string
                        title: type_id
                        description: The type id's details.
                    variants:
                      type: object
                      description: The $or's variants.
                      properties: {}
                    created_at: {}
                    updated_at: {}
                    deleted_at: {}
                    $and:
                      type: array
                      description: The $or's $and.
                      items:
                        type: object
                        description: The $and's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    $or:
                      type: array
                      description: The $or's details.
                      items:
                        type: object
                        description: The $or's details.
                        x-schemaName: AdminGetProductsParams
                        properties: {}
                    expand:
                      type: string
                      title: expand
                      description: The $or's expand.
                    fields:
                      type: string
                      title: fields
                      description: The $or's fields.
                    offset:
                      type: number
                      title: offset
                      description: The $or's offset.
                    limit:
                      type: number
                      title: limit
                      description: The $or's limit.
                    order:
                      type: string
                      title: order
                      description: The $or's order.
              expand:
                type: string
                title: expand
                description: The $or's expand.
              fields:
                type: string
                title: fields
                description: The $or's fields.
              offset:
                type: number
                title: offset
                description: The $or's offset.
              limit:
                type: number
                title: limit
                description: The $or's limit.
              order:
                type: string
                title: order
                description: The $or's order.
        expand:
          type: string
          title: expand
          description: The product's expand.
        fields:
          type: string
          title: fields
          description: The product's fields.
        offset:
          type: number
          title: offset
          description: The product's offset.
        limit:
          type: number
          title: limit
          description: The product's limit.
        order:
          type: string
          title: order
          description: The product's order.
    AdminGetPromotionsParams:
      type: object
      description: SUMMARY
      x-schemaName: AdminGetPromotionsParams
      properties:
        code:
          type: string
          title: code
          description: The promotion's code.
        expand:
          type: string
          title: expand
          description: The promotion's expand.
        fields:
          type: string
          title: fields
          description: The promotion's fields.
        offset:
          type: number
          title: offset
          description: The promotion's offset.
        limit:
          type: number
          title: limit
          description: The promotion's limit.
        order:
          type: string
          title: order
          description: The promotion's order.
    AdminPostCampaignsReq:
      type: object
      description: The promotion's campaign.
      x-schemaName: AdminPostCampaignsReq
      required:
        - name
      properties:
        name:
          type: string
          title: name
          description: The campaign's name.
        campaign_identifier:
          type: string
          title: campaign_identifier
          description: The campaign's campaign identifier.
        description:
          type: string
          title: description
          description: The campaign's description.
        currency:
          type: string
          title: currency
          description: The campaign's currency.
        budget:
          $ref: '#/components/schemas/CampaignBudget'
        starts_at:
          type: string
          title: starts_at
          description: The campaign's starts at.
        ends_at:
          type: string
          title: ends_at
          description: The campaign's ends at.
        promotions:
          type: array
          description: The campaign's promotions.
          items:
            type: object
            description: The promotion's promotions.
            x-schemaName: IdObject
            required:
              - id
            properties:
              id:
                type: string
                title: id
                description: The promotion's ID.
    AdminPostCustomerGroupsGroupCustomersBatchReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostCustomerGroupsGroupCustomersBatchReq
      required:
        - customer_ids
      properties:
        customer_ids:
          type: array
          description: The customer group's customer ids.
          items:
            type: object
            description: The customer id's customer ids.
            x-schemaName: CustomerGroupsBatchCustomer
            required:
              - id
            properties:
              id:
                type: string
                title: id
                description: The customer id's ID.
    AdminPostFulfillmentShippingOptionsRulesBatchAddReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostFulfillmentShippingOptionsRulesBatchAddReq
      required:
        - rules
      properties:
        rules:
          type: array
          description: The fulfillment's rules.
          items:
            type: object
            description: The rule's rules.
            x-schemaName: FulfillmentRuleCreate
            required:
              - operator
              - attribute
              - value
            properties:
              operator: {}
              attribute:
                type: string
                title: attribute
                description: The rule's attribute.
              value:
                oneOf:
                  - type: string
                    title: value
                    description: The rule's value.
                  - type: array
                    description: The rule's value.
                    items:
                      type: string
                      title: value
                      description: The value's details.
    AdminPostFulfillmentShippingOptionsRulesBatchRemoveReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostFulfillmentShippingOptionsRulesBatchRemoveReq
      required:
        - rule_ids
      properties:
        rule_ids:
          type: array
          description: The fulfillment's rule ids.
          items:
            type: string
            title: rule_ids
            description: The rule id's rule ids.
    AdminPostInventoryItemsInventoryItemReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostInventoryItemsInventoryItemReq
      properties:
        sku:
          type: string
          title: sku
          description: The inventory item's sku.
        origin_country:
          type: string
          title: origin_country
          description: The inventory item's origin country.
        hs_code:
          type: string
          title: hs_code
          description: The inventory item's hs code.
        mid_code:
          type: string
          title: mid_code
          description: The inventory item's mid code.
        material:
          type: string
          title: material
          description: The inventory item's material.
        weight:
          type: number
          title: weight
          description: The inventory item's weight.
        height:
          type: number
          title: height
          description: The inventory item's height.
        length:
          type: number
          title: length
          description: The inventory item's length.
        width:
          type: number
          title: width
          description: The inventory item's width.
        title:
          type: string
          title: title
          description: The inventory item's title.
        description:
          type: string
          title: description
          description: The inventory item's description.
        thumbnail:
          type: string
          title: thumbnail
          description: The inventory item's thumbnail.
        requires_shipping:
          type: boolean
          title: requires_shipping
          description: The inventory item's requires shipping.
    AdminPostInventoryItemsItemLocationLevelsLevelReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostInventoryItemsItemLocationLevelsLevelReq
      properties:
        incoming_quantity:
          type: number
          title: incoming_quantity
          description: The inventory item's incoming quantity.
        stocked_quantity:
          type: number
          title: stocked_quantity
          description: The inventory item's stocked quantity.
    AdminPostInventoryItemsItemLocationLevelsReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostInventoryItemsItemLocationLevelsReq
      required:
        - location_id
        - stocked_quantity
      properties:
        location_id:
          type: string
          title: location_id
          description: The inventory item's location id.
        stocked_quantity:
          type: number
          title: stocked_quantity
          description: The inventory item's stocked quantity.
        incoming_quantity:
          type: number
          title: incoming_quantity
          description: The inventory item's incoming quantity.
    AdminPostInventoryItemsReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostInventoryItemsReq
      properties:
        sku:
          type: string
          title: sku
          description: The inventory item's sku.
        hs_code:
          type: string
          title: hs_code
          description: The inventory item's hs code.
        weight:
          type: number
          title: weight
          description: The inventory item's weight.
        length:
          type: number
          title: length
          description: The inventory item's length.
        height:
          type: number
          title: height
          description: The inventory item's height.
        width:
          type: number
          title: width
          description: The inventory item's width.
        origin_country:
          type: string
          title: origin_country
          description: The inventory item's origin country.
        mid_code:
          type: string
          title: mid_code
          description: The inventory item's mid code.
        material:
          type: string
          title: material
          description: The inventory item's material.
        title:
          type: string
          title: title
          description: The inventory item's title.
        description:
          type: string
          title: description
          description: The inventory item's description.
        thumbnail:
          type: string
          title: thumbnail
          description: The inventory item's thumbnail.
        metadata:
          type: object
          description: The inventory item's metadata.
          properties: {}
    AdminPostInvitesInviteAcceptReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostInvitesInviteAcceptReq
      required:
        - first_name
        - last_name
      properties:
        first_name:
          type: string
          title: first_name
          description: The invite's first name.
        last_name:
          type: string
          title: last_name
          description: The invite's last name.
    AdminPostPaymentsCapturesReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPaymentsCapturesReq
      properties:
        amount:
          type: number
          title: amount
          description: The payment's amount.
    AdminPostPaymentsRefundsReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPaymentsRefundsReq
      properties:
        amount:
          type: number
          title: amount
          description: The payment's amount.
    AdminPostPriceListsPriceListPricesBatchAddReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPriceListsPriceListPricesBatchAddReq
      required:
        - prices
      properties:
        prices:
          type: array
          description: The price list's prices.
          items:
            type: object
            description: The price's prices.
            x-schemaName: AdminPriceListPricesCreateReq
            required:
              - currency_code
              - amount
              - variant_id
            properties:
              currency_code:
                type: string
                title: currency_code
                description: The price's currency code.
              amount:
                type: number
                title: amount
                description: The price's amount.
              variant_id:
                type: string
                title: variant_id
                description: The price's variant id.
              min_quantity:
                type: number
                title: min_quantity
                description: The price's min quantity.
              max_quantity:
                type: number
                title: max_quantity
                description: The price's max quantity.
              rules:
                type: object
                description: The price's rules.
                properties: {}
    AdminPostPriceListsPriceListPricesBatchRemoveReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPriceListsPriceListPricesBatchRemoveReq
      required:
        - ids
      properties:
        ids:
          type: array
          description: The price list's ids.
          items:
            type: string
            title: ids
            description: The id's ids.
    AdminPostPriceListsPriceListReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPriceListsPriceListReq
      required:
        - prices
      properties:
        title:
          type: string
          title: title
          description: The price list's title.
        description:
          type: string
          title: description
          description: The price list's description.
        starts_at:
          type: string
          title: starts_at
          description: The price list's starts at.
        ends_at:
          type: string
          title: ends_at
          description: The price list's ends at.
        status: {}
        type: {}
        prices:
          type: array
          description: The price list's prices.
          items:
            type: object
            description: The price's prices.
            x-schemaName: AdminPriceListPricesCreateReq
            required:
              - currency_code
              - amount
              - variant_id
            properties:
              currency_code:
                type: string
                title: currency_code
                description: The price's currency code.
              amount:
                type: number
                title: amount
                description: The price's amount.
              variant_id:
                type: string
                title: variant_id
                description: The price's variant id.
              min_quantity:
                type: number
                title: min_quantity
                description: The price's min quantity.
              max_quantity:
                type: number
                title: max_quantity
                description: The price's max quantity.
              rules:
                type: object
                description: The price's rules.
                properties: {}
        rules:
          type: object
          description: The price list's rules.
          properties: {}
    AdminPostPriceListsReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPriceListsReq
      required:
        - title
        - description
        - type
        - prices
      properties:
        title:
          type: string
          title: title
          description: The price list's title.
        description:
          type: string
          title: description
          description: The price list's description.
        starts_at:
          type: string
          title: starts_at
          description: The price list's starts at.
        ends_at:
          type: string
          title: ends_at
          description: The price list's ends at.
        status: {}
        type: {}
        prices:
          type: array
          description: The price list's prices.
          items:
            type: object
            description: The price's prices.
            x-schemaName: AdminPriceListPricesCreateReq
            required:
              - currency_code
              - amount
              - variant_id
            properties:
              currency_code:
                type: string
                title: currency_code
                description: The price's currency code.
              amount:
                type: number
                title: amount
                description: The price's amount.
              variant_id:
                type: string
                title: variant_id
                description: The price's variant id.
              min_quantity:
                type: number
                title: min_quantity
                description: The price's min quantity.
              max_quantity:
                type: number
                title: max_quantity
                description: The price's max quantity.
              rules:
                type: object
                description: The price's rules.
                properties: {}
        rules:
          type: object
          description: The price list's rules.
          properties: {}
    AdminPostPricingRuleTypesReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPricingRuleTypesReq
      required:
        - name
        - rule_attribute
        - default_priority
      properties:
        name:
          type: string
          title: name
          description: The pricing's name.
        rule_attribute:
          type: string
          title: rule_attribute
          description: The pricing's rule attribute.
        default_priority:
          type: number
          title: default_priority
          description: The pricing's default priority.
    AdminPostPricingRuleTypesRuleTypeReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPricingRuleTypesRuleTypeReq
      properties:
        name:
          type: string
          title: name
          description: The pricing's name.
        rule_attribute:
          type: string
          title: rule_attribute
          description: The pricing's rule attribute.
        default_priority:
          type: number
          title: default_priority
          description: The pricing's default priority.
    AdminPostPromotionsPromotionReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPromotionsPromotionReq
      properties:
        code:
          type: string
          title: code
          description: The promotion's code.
        is_automatic:
          type: boolean
          title: is_automatic
          description: The promotion's is automatic.
        type: {}
        campaign_id:
          type: string
          title: campaign_id
          description: The promotion's campaign id.
        campaign:
          $ref: '#/components/schemas/AdminPostCampaignsReq'
        application_method:
          $ref: '#/components/schemas/ApplicationMethodsMethodPostReq'
        rules:
          type: array
          description: The promotion's rules.
          items:
            type: object
            description: The rule's rules.
            x-schemaName: PromotionRule
            required:
              - operator
              - attribute
              - values
            properties:
              operator: {}
              description:
                type: string
                title: description
                description: The rule's description.
              attribute:
                type: string
                title: attribute
                description: The rule's attribute.
              values:
                type: array
                description: The rule's values.
                items:
                  type: string
                  title: values
                  description: The value's values.
    AdminPostPromotionsPromotionRulesBatchAddReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPromotionsPromotionRulesBatchAddReq
      required:
        - rules
      properties:
        rules:
          type: array
          description: The promotion's rules.
          items:
            type: object
            description: The rule's rules.
            x-schemaName: PromotionRule
            required:
              - operator
              - attribute
              - values
            properties:
              operator: {}
              description:
                type: string
                title: description
                description: The rule's description.
              attribute:
                type: string
                title: attribute
                description: The rule's attribute.
              values:
                type: array
                description: The rule's values.
                items:
                  type: string
                  title: values
                  description: The value's values.
    AdminPostPromotionsPromotionRulesBatchRemoveReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPromotionsPromotionRulesBatchRemoveReq
      required:
        - rule_ids
      properties:
        rule_ids:
          type: array
          description: The promotion's rule ids.
          items:
            type: string
            title: rule_ids
            description: The rule id's rule ids.
    AdminPostPromotionsPromotionRulesBatchUpdateReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostPromotionsPromotionRulesBatchUpdateReq
      required:
        - rules
      properties:
        rules:
          type: array
          description: The promotion's rules.
          items:
            type: object
            description: The rule's rules.
            x-schemaName: UpdatePromotionRule
            required:
              - id
              - attribute
              - values
            properties:
              id:
                type: string
                title: id
                description: The rule's ID.
              operator: {}
              description:
                type: string
                title: description
                description: The rule's description.
              attribute:
                type: string
                title: attribute
                description: The rule's attribute.
              values:
                type: array
                description: The rule's values.
                items:
                  type: string
                  title: values
                  description: The value's values.
    AdminPostStockLocationsReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostStockLocationsReq
      required:
        - name
      properties:
        name:
          type: string
          title: name
          description: The stock location's name.
        address:
          $ref: '#/components/schemas/StockLocationAddress'
        address_id:
          type: string
          title: address_id
          description: The stock location's address id.
        metadata:
          type: object
          description: The stock location's metadata.
          properties: {}
    AdminPostTaxRatesReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostTaxRatesReq
      required:
        - name
        - tax_region_id
      properties:
        rate:
          type: number
          title: rate
          description: The tax rate's rate.
        code:
          type: string
          title: code
          description: The tax rate's code.
        rules:
          type: array
          description: The tax rate's rules.
          items:
            type: object
            description: The rule's rules.
            x-schemaName: CreateTaxRateRule
            required:
              - reference
              - reference_id
            properties:
              reference:
                type: string
                title: reference
                description: The rule's reference.
              reference_id:
                type: string
                title: reference_id
                description: The rule's reference id.
        name:
          type: string
          title: name
          description: The tax rate's name.
        is_default:
          type: boolean
          title: is_default
          description: The tax rate's is default.
        is_combinable:
          type: boolean
          title: is_combinable
          description: The tax rate's is combinable.
        tax_region_id:
          type: string
          title: tax_region_id
          description: The tax rate's tax region id.
        metadata:
          type: object
          description: The tax rate's metadata.
          properties: {}
    AdminPostTaxRatesTaxRateReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostTaxRatesTaxRateReq
      properties:
        code:
          type: string
          title: code
          description: The tax rate's code.
        name:
          type: string
          title: name
          description: The tax rate's name.
        region_id:
          type: string
          title: region_id
          description: The tax rate's region id.
        rate:
          type: number
          title: rate
          description: The tax rate's rate.
        products:
          type: array
          description: The tax rate's products.
          items:
            type: string
            title: products
            description: The product's products.
        shipping_options:
          type: array
          description: The tax rate's shipping options.
          items:
            type: string
            title: shipping_options
            description: The shipping option's shipping options.
        product_types:
          type: array
          description: The tax rate's product types.
          items:
            type: string
            title: product_types
            description: The product type's product types.
    AdminPostTaxRatesTaxRateRulesReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostTaxRatesTaxRateRulesReq
      required:
        - reference
        - reference_id
      properties:
        reference:
          type: string
          title: reference
          description: The tax rate's reference.
        reference_id:
          type: string
          title: reference_id
          description: The tax rate's reference id.
    AdminPostTaxRegionsReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostTaxRegionsReq
      required:
        - country_code
      properties:
        country_code:
          type: string
          title: country_code
          description: The tax region's country code.
        province_code:
          type: string
          title: province_code
          description: The tax region's province code.
        parent_id:
          type: string
          title: parent_id
          description: The tax region's parent id.
        default_tax_rate:
          $ref: '#/components/schemas/CreateDefaultTaxRate'
        metadata:
          type: object
          description: The tax region's metadata.
          properties: {}
    AdminPostWorkflowsAsyncResponseReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostWorkflowsAsyncResponseReq
      required:
        - transaction_id
        - step_id
      properties:
        transaction_id:
          type: string
          title: transaction_id
          description: The workflows execution's transaction id.
        step_id:
          type: string
          title: step_id
          description: The workflows execution's step id.
        response: {}
        compensate_input: {}
        action: {}
    AdminPostWorkflowsRunReq:
      type: object
      description: SUMMARY
      x-schemaName: AdminPostWorkflowsRunReq
      properties:
        input: {}
        transaction_id:
          type: string
          title: transaction_id
          description: The workflows execution's transaction id.
    AdminUpdateUserRequest:
      type: object
      description: SUMMARY
      x-schemaName: AdminUpdateUserRequest
      required:
        - avatar_url
      properties:
        first_name:
          type: string
          title: first_name
          description: The user's first name.
        last_name:
          type: string
          title: last_name
          description: The user's last name.
        avatar_url:
          type: string
          title: avatar_url
          description: The user's avatar url.
    ApplicationMethodsMethodPostReq:
      type: object
      description: The promotion's application method.
      x-schemaName: ApplicationMethodsMethodPostReq
      properties:
        description:
          type: string
          title: description
          description: The application method's description.
        value:
          type: string
          title: value
          description: The application method's value.
        max_quantity:
          type: number
          title: max_quantity
          description: The application method's max quantity.
        type: {}
        target_type: {}
        allocation: {}
        target_rules:
          type: array
          description: The application method's target rules.
          items:
            type: object
            description: The target rule's target rules.
            x-schemaName: PromotionRule
            required:
              - operator
              - attribute
              - values
            properties:
              operator: {}
              description:
                type: string
                title: description
                description: The target rule's description.
              attribute:
                type: string
                title: attribute
                description: The target rule's attribute.
              values:
                type: array
                description: The target rule's values.
                items:
                  type: string
                  title: values
                  description: The value's values.
        buy_rules:
          type: array
          description: The application method's buy rules.
          items:
            type: object
            description: The buy rule's buy rules.
            x-schemaName: PromotionRule
            required:
              - operator
              - attribute
              - values
            properties:
              operator: {}
              description:
                type: string
                title: description
                description: The buy rule's description.
              attribute:
                type: string
                title: attribute
                description: The buy rule's attribute.
              values:
                type: array
                description: The buy rule's values.
                items:
                  type: string
                  title: values
                  description: The value's values.
        apply_to_quantity:
          type: number
          title: apply_to_quantity
          description: The application method's apply to quantity.
        buy_rules_min_quantity:
          type: number
          title: buy_rules_min_quantity
          description: The application method's buy rules min quantity.
    CampaignBudget:
      type: object
      description: The campaign's budget.
      x-schemaName: CampaignBudget
      properties:
        type: {}
        limit:
          type: number
          title: limit
          description: The budget's limit.
    CreateDefaultTaxRate:
      type: object
      description: The tax region's default tax rate.
      x-schemaName: CreateDefaultTaxRate
      required:
        - name
      properties:
        rate:
          type: number
          title: rate
          description: The default tax rate's rate.
        code:
          type: string
          title: code
          description: The default tax rate's code.
        name:
          type: string
          title: name
          description: The default tax rate's name.
        metadata:
          type: object
          description: The default tax rate's metadata.
          properties: {}
    Error:
      title: Response Error
      type: object
      properties:
        code:
          type: string
          description: A slug code to indicate the type of the error.
          enum:
            - invalid_state_error
            - invalid_request_error
            - api_error
            - unknown_error
        message:
          type: string
          description: Description of the error that occurred.
          example: first_name must be a string
        type:
          type: string
          description: A slug indicating the type of the error.
          enum:
            - QueryRunnerAlreadyReleasedError
            - TransactionAlreadyStartedError
            - TransactionNotStartedError
            - conflict
            - unauthorized
            - payment_authorization_error
            - duplicate_error
            - not_allowed
            - invalid_data
            - not_found
            - database_error
            - unexpected_state
            - invalid_argument
            - unknown_error
    MultipleErrors:
      title: Multiple Errors
      type: object
      properties:
        errors:
          type: array
          description: Array of errors
          items:
            $ref: '#/components/schemas/Error'
        message:
          type: string
          default: Provided request body contains errors. Please check the data and retry the request
    StockLocationAddress:
      type: object
      description: The stock location's address.
      x-schemaName: StockLocationAddress
      required:
        - address_1
        - country_code
      properties:
        address_1:
          type: string
          title: address_1
          description: The address's address 1.
        address_2:
          type: string
          title: address_2
          description: The address's address 2.
        company:
          type: string
          title: company
          description: The address's company.
        city:
          type: string
          title: city
          description: The address's city.
        country_code:
          type: string
          title: country_code
          description: The address's country code.
        phone:
          type: string
          title: phone
          description: The address's phone.
        postal_code:
          type: string
          title: postal_code
          description: The address's postal code.
        province:
          type: string
          title: province
          description: The address's province.
    StorePostCartsCartTaxesReq:
      type: object
      description: SUMMARY
      x-schemaName: StorePostCartsCartTaxesReq
      properties: {}
    StorePostPaymentCollectionsPaymentSessionReq:
      type: object
      description: SUMMARY
      x-schemaName: StorePostPaymentCollectionsPaymentSessionReq
      required:
        - provider_id
      properties:
        provider_id:
          type: string
          title: provider_id
          description: The payment collection's provider id.
        context: {}
        data:
          type: object
          description: The payment collection's data.
          properties: {}
