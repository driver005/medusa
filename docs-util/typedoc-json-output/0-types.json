{
	"id": 0,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 16,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 17,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 18,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 19,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 20,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 21,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 22,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 23,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 24,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 25,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 26,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								18,
								27,
								22
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						17
					]
				}
			]
		},
		{
			"id": 30,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 145,
					"name": "AddressCreatePayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 151,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 152,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 153,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 150,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 154,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 146,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 147,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 149,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 148,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 156,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 155,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								151,
								152,
								153,
								150,
								154,
								146,
								147,
								149,
								148,
								156,
								155
							]
						}
					]
				},
				{
					"id": 133,
					"name": "AddressPayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 139,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 140,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 141,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 138,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 142,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 134,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 135,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 137,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 136,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 144,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 143,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								139,
								140,
								141,
								138,
								142,
								134,
								135,
								137,
								136,
								144,
								143
							]
						}
					]
				},
				{
					"id": 37,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 38,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39,
								38,
								40
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 41,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 79,
					"name": "CustomFindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 82,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/OrderByCondition.d.ts",
									"qualifiedName": "OrderByCondition"
								},
								"name": "OrderByCondition",
								"package": "typeorm"
							}
						},
						{
							"id": 80,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
											"qualifiedName": "FindOptionsSelect"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TModel",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsSelect",
										"package": "typeorm"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
											"qualifiedName": "FindOptionsSelectByString"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TModel",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsSelectByString",
										"package": "typeorm"
									}
								]
							}
						},
						{
							"id": 83,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 84,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 81,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
													"qualifiedName": "FindOptionsWhere"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TModel",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptionsWhere",
												"package": "typeorm"
											},
											{
												"type": "mapped",
												"parameter": "P",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "array",
													"elementType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "P",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "TModel",
															"refersToTypeParameter": true
														}
													}
												},
												"optionalModifier": "+"
											}
										]
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
														"qualifiedName": "FindOptionsWhere"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "TModel",
															"refersToTypeParameter": true
														}
													],
													"name": "FindOptionsWhere",
													"package": "typeorm"
												}
											},
											{
												"type": "mapped",
												"parameter": "P",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "array",
													"elementType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "P",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "TModel",
															"refersToTypeParameter": true
														}
													}
												},
												"optionalModifier": "+"
											}
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								82,
								80,
								83,
								84,
								81
							]
						}
					],
					"typeParameters": [
						{
							"id": 85,
							"name": "TModel",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 86,
							"name": "InKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": -1,
									"name": "TModel",
									"refersToTypeParameter": true
								}
							}
						}
					]
				},
				{
					"id": 115,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 117,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 118,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 116,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 119,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								117,
								118,
								116,
								119
							]
						}
					]
				},
				{
					"id": 113,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 48,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 53,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 54,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignature": {
										"id": 55,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"parameters": [
											{
												"id": 56,
												"name": "K",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "ASC"
												},
												{
													"type": "literal",
													"value": "DESC"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 52,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 49,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": -1,
												"name": "Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 50,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 51,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 57,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								53,
								52,
								49,
								50,
								51,
								57
							]
						}
					],
					"typeParameters": [
						{
							"id": 58,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 160,
					"name": "FindPaginationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 162,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 161,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								162,
								161
							]
						}
					]
				},
				{
					"id": 157,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 158,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								158,
								159
							]
						}
					]
				},
				{
					"id": 128,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 130,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 131,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 129,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 132,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								130,
								131,
								129,
								132
							]
						}
					]
				},
				{
					"id": 114,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 1290,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 41,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 44,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 39,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 42,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 43,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 45,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 40,
								"name": "BaseEntity.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								44,
								42,
								43,
								45
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 120,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 125,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 127,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 122,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 123,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 121,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 124,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 126,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								125,
								127,
								122,
								123,
								121,
								124,
								126
							]
						}
					]
				},
				{
					"id": 190,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 191,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 193,
									"name": "featureFlags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 194,
									"name": "modules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": 497,
																		"name": "InternalModuleDeclaration",
																		"package": "@medusajs/types"
																	},
																	{
																		"type": "reference",
																		"target": 507,
																		"name": "ExternalModuleDeclaration",
																		"package": "@medusajs/types"
																	}
																]
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 195,
									"name": "plugins",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reflection",
													"declaration": {
														"id": 196,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 198,
																"name": "options",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 197,
																"name": "resolve",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	198,
																	197
																]
															}
														]
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								},
								{
									"id": 192,
									"name": "projectConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 169,
										"name": "ProjectConfigOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										193,
										194,
										195,
										192
									]
								}
							]
						}
					}
				},
				{
					"id": 108,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields returned in the response of a DELETE request."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 109,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 112,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 110,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 111,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										112,
										110,
										111
									]
								}
							]
						}
					}
				},
				{
					"id": 59,
					"name": "ExtendedFindConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 67,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOneOptions.d.ts",
													"qualifiedName": "FindOneOptions"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOneOptions",
												"package": "typeorm"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "where"
													},
													{
														"type": "literal",
														"value": "relations"
													},
													{
														"type": "literal",
														"value": "select"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindManyOptions.d.ts",
													"qualifiedName": "FindManyOptions"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "FindManyOptions",
												"package": "typeorm"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "where"
													},
													{
														"type": "literal",
														"value": "relations"
													},
													{
														"type": "literal",
														"value": "select"
													}
												]
											}
										],
										"name": "Omit",
										"package": "typescript"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 60,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 64,
											"name": "order",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsOrder.d.ts",
													"qualifiedName": "FindOptionsOrder"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptionsOrder",
												"package": "typeorm"
											}
										},
										{
											"id": 62,
											"name": "relations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsRelations.d.ts",
													"qualifiedName": "FindOptionsRelations"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptionsRelations",
												"package": "typeorm"
											}
										},
										{
											"id": 61,
											"name": "select",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
													"qualifiedName": "FindOptionsSelect"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptionsSelect",
												"package": "typeorm"
											}
										},
										{
											"id": 65,
											"name": "skip",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 66,
											"name": "take",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 63,
											"name": "where",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
															"qualifiedName": "FindOptionsWhere"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TEntity",
																"refersToTypeParameter": true
															}
														],
														"name": "FindOptionsWhere",
														"package": "typeorm"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
																"qualifiedName": "FindOptionsWhere"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": -1,
																	"name": "TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "FindOptionsWhere",
															"package": "typeorm"
														}
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												64,
												62,
												61,
												65,
												66,
												63
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 163,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 164,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 165,
									"name": "enabled",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 166,
									"name": "level",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 167,
									"name": "memLevel",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 168,
									"name": "threshold",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										165,
										166,
										167,
										168
									]
								}
							]
						}
					}
				},
				{
					"id": 199,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 200,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 207,
											"name": "createScope",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 208,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 209,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 199,
																"name": "MedusaContainer",
																"package": "@medusajs/types"
															}
														}
													]
												}
											}
										},
										{
											"id": 201,
											"name": "registerAdd",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 202,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 203,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"typeParameter": [
																{
																	"id": 206,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {}
																}
															],
															"parameters": [
																{
																	"id": 204,
																	"name": "name",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 205,
																	"name": "registration",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": -1,
																		"name": "T",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": 199,
																"name": "MedusaContainer",
																"package": "@medusajs/types"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												207,
												201
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 103,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 104,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 107,
									"name": "count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 105,
									"name": "limit",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 106,
									"name": "offset",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										107,
										105,
										106
									]
								}
							]
						}
					}
				},
				{
					"id": 34,
					"name": "PartialPick",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 36,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "P",
						"parameterType": {
							"type": "reference",
							"target": -1,
							"name": "K",
							"refersToTypeParameter": true
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": -1,
								"name": "P",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						"optionalModifier": "+"
					}
				},
				{
					"id": 169,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 170,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 189,
									"name": "admin_cors",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 176,
									"name": "cookie_secret",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 178,
									"name": "database_database",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 183,
									"name": "database_extra",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 184,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 185,
															"name": "ssl",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 186,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 187,
																			"name": "rejectUnauthorized",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "literal",
																				"value": false
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				187
																			]
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																185
															]
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 180,
									"name": "database_logging",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
											"qualifiedName": "LoggerOptions"
										},
										"name": "LoggerOptions",
										"package": "typeorm"
									}
								},
								{
									"id": 179,
									"name": "database_schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 181,
									"name": "database_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 177,
									"name": "database_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 182,
									"name": "http_compression",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 163,
										"name": "HttpCompressionOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 175,
									"name": "jwt_secret",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 173,
									"name": "redis_options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
											"qualifiedName": "RedisOptions"
										},
										"name": "RedisOptions",
										"package": "ioredis"
									}
								},
								{
									"id": 172,
									"name": "redis_prefix",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 171,
									"name": "redis_url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 174,
									"name": "session_options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1302,
										"name": "SessionOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 188,
									"name": "store_cors",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										189,
										176,
										178,
										183,
										180,
										179,
										181,
										177,
										182,
										175,
										173,
										172,
										171,
										174,
										188
									]
								}
							]
						}
					}
				},
				{
					"id": 87,
					"name": "QueryConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 95,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37,
								"name": "BaseEntity",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 88,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 91,
									"name": "allowedFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 92,
									"name": "allowedRelations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 89,
									"name": "defaultFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": -1,
														"name": "TEntity",
														"refersToTypeParameter": true
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									}
								},
								{
									"id": 93,
									"name": "defaultLimit",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 90,
									"name": "defaultRelations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 94,
									"name": "isList",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										91,
										92,
										89,
										93,
										90,
										94
									]
								}
							]
						}
					}
				},
				{
					"id": 68,
					"name": "QuerySelector",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 71,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 76,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TEntity",
										"refersToTypeParameter": true
									}
								],
								"name": "Selector",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 69,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 70,
											"name": "q",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												70
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 96,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 97,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 98,
									"name": "expand",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 99,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 101,
									"name": "limit",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 100,
									"name": "offset",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 102,
									"name": "order",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										98,
										99,
										101,
										100,
										102
									]
								}
							]
						}
					}
				},
				{
					"id": 76,
					"name": "Selector",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 77,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "key",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": -1,
								"name": "TEntity",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": -1,
										"name": "key",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TEntity",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "array",
									"elementType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "key",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": -1,
											"name": "TEntity",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"type": "reference",
									"target": 115,
									"name": "DateComparisonOperator",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 120,
									"name": "StringComparisonOperator",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 128,
									"name": "NumericalComparisonOperator",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
										"qualifiedName": "FindOperator"
									},
									"typeArguments": [
										{
											"type": "union",
											"types": [
												{
													"type": "array",
													"elementType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "key",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "TEntity",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									],
									"name": "FindOperator",
									"package": "typeorm"
								}
							]
						},
						"optionalModifier": "+"
					}
				},
				{
					"id": 78,
					"name": "TotalField",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "shipping_total"
							},
							{
								"type": "literal",
								"value": "discount_total"
							},
							{
								"type": "literal",
								"value": "tax_total"
							},
							{
								"type": "literal",
								"value": "refunded_total"
							},
							{
								"type": "literal",
								"value": "total"
							},
							{
								"type": "literal",
								"value": "subtotal"
							},
							{
								"type": "literal",
								"value": "refundable_amount"
							},
							{
								"type": "literal",
								"value": "gift_card_total"
							},
							{
								"type": "literal",
								"value": "gift_card_tax_total"
							}
						]
					}
				},
				{
					"id": 72,
					"name": "TreeQuerySelector",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 75,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 68,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TEntity",
										"refersToTypeParameter": true
									}
								],
								"name": "QuerySelector",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 73,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 74,
											"name": "include_descendants_tree",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												74
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 31,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 32,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 33,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": -1,
									"name": "K",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": -1,
										"name": "Property",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 46,
					"name": "Writable",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 47,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "key",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": -1,
										"name": "key",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
										"qualifiedName": "FindOperator"
									},
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": -1,
												"name": "key",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "FindOperator",
									"package": "typeorm"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
										"qualifiedName": "FindOperator"
									},
									"typeArguments": [
										{
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": -1,
													"name": "key",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"name": "FindOperator",
									"package": "typeorm"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
										"qualifiedName": "FindOperator"
									},
									"typeArguments": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"name": "FindOperator",
									"package": "typeorm"
								}
							]
						},
						"readonlyModifier": "-"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						145,
						133,
						37,
						79,
						115,
						113,
						48,
						160,
						157,
						128,
						114,
						41,
						120
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						190,
						108,
						59,
						163,
						199,
						103,
						34,
						169,
						87,
						68,
						96,
						76,
						78,
						72,
						31,
						46
					]
				}
			]
		},
		{
			"id": 210,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 217,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 218,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": 217,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 219,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": 217,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								218,
								219
							]
						}
					],
					"typeParameters": [
						{
							"id": 220,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 971,
							"name": "FilterableCurrencyProps"
						},
						{
							"type": "reference",
							"target": 996,
							"name": "FilterableMoneyAmountProps"
						},
						{
							"type": "reference",
							"target": 1026,
							"name": "FilterablePriceRuleProps"
						},
						{
							"type": "reference",
							"target": 1097,
							"name": "FilterablePriceSetProps"
						},
						{
							"type": "reference",
							"target": 1120,
							"name": "FilterablePriceSetMoneyAmountProps"
						},
						{
							"type": "reference",
							"target": 1140,
							"name": "FilterablePriceSetMoneyAmountRulesProps"
						},
						{
							"type": "reference",
							"target": 1159,
							"name": "FilterablePriceSetRuleTypeProps"
						},
						{
							"type": "reference",
							"target": 1180,
							"name": "FilterableRuleTypeProps"
						},
						{
							"type": "reference",
							"target": 1231,
							"name": "FilterablePriceListProps"
						},
						{
							"type": "reference",
							"target": 1239,
							"name": "FilterablePriceListRuleProps"
						},
						{
							"type": "reference",
							"target": 1246,
							"name": "FilterablePriceListRuleValueProps"
						}
					]
				},
				{
					"id": 221,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 226,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 228,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 1335,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 1335,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 227,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 224,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 225,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 223,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1333,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1333,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 222,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								226,
								228,
								227,
								224,
								225,
								223,
								222
							]
						}
					],
					"typeParameters": [
						{
							"id": 229,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 230,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 236,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 245,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 246,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 247,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 248,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 253,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 254,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 255,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 256,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 237,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 238,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 239,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 231,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 240,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 241,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 242,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 243,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 231,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 244,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 280,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 281,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 282,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "TManager",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1357,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1356,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 277,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 278,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 279,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "TManager",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1354,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1353,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 261,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 262,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 263,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 264,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 283,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 284,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 285,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 286,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 287,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TOutput",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1360,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1359,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 257,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 258,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 259,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 260,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 265,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 266,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 267,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 268,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 269,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 270,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 271,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": -1,
																		"name": "TManager",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 272,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 273,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 276,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 274,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 275,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "TManager",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																276,
																274,
																275
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1342,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1341,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 249,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 250,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 251,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 252,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								245,
								253,
								237,
								241,
								280,
								277,
								261,
								283,
								257,
								265,
								249
							]
						}
					],
					"typeParameters": [
						{
							"id": 288,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1340,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 335,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 336,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "TReturnableLinkableKeys",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								336
							]
						}
					],
					"typeParameters": [
						{
							"id": 337,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 332,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 333,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": -1,
									"name": "TReturnableLinkableKeys",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								333
							]
						}
					],
					"typeParameters": [
						{
							"id": 334,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 300,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 301,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 302,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 303,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 304,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 305,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 306,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 307,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 290,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 291,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 292,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 231,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 293,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 114,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 294,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 295,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 296,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 297,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 231,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 298,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 114,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 299,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1295,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 323,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 324,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 325,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "TManager",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1357,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1356,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 320,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 321,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 322,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "TManager",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1354,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1353,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 326,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 327,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 328,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 329,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 330,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TOutput",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1360,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1359,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 308,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 309,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 310,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 311,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 312,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 313,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 314,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": -1,
																		"name": "TManager",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 315,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 316,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 319,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 317,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 318,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "TManager",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																319,
																317,
																318
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 1342,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 1341,
								"name": "BaseRepositoryService.transaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								300,
								304,
								290,
								295,
								323,
								320,
								326,
								308
							]
						}
					],
					"typeParameters": [
						{
							"id": 331,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 1340,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 338,
					"name": "EntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 211,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 215,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 216,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": -1,
							"name": "Prev",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": -1,
										"name": "Key",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": -1,
												"name": "Key",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 1310,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": -1,
														"name": "Key",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "Key",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": -1,
											"name": "U",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 212,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 213,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 214,
															"name": "x",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "inferred",
														"name": "V"
													}
												}
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": -1,
												"name": "V",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 211,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "V",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "Prev",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 1332,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				},
				{
					"id": 231,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 235,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 232,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 234,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 221,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "OptionsQuery",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 233,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 211,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 217,
												"typeArguments": [
													{
														"type": "reference",
														"target": 211,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														],
														"name": "FilterQuery",
														"package": "@medusajs/types"
													}
												],
												"name": "BaseFilterable",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										234,
										233
									]
								}
							]
						}
					}
				},
				{
					"id": 339,
					"name": "SoftDeletableEntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 338,
								"name": "EntityDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						217,
						221,
						236,
						335,
						332,
						289
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						338,
						211,
						231,
						339
					]
				}
			]
		},
		{
			"id": 340,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 386,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 387,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 388,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 389,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 390,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 391,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 392,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 393,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 394,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 395,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 360,
													"typeArguments": [
														{
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													],
													"name": "EmitData",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 396,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 397,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 398,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 399,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 341,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 400,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 347,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 386,
										"name": "IEventBusModuleService",
										"package": "@medusajs/types"
									}
								}
							]
						},
						{
							"id": 401,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 402,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 403,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 404,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 341,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 405,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 347,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 386,
										"name": "IEventBusModuleService",
										"package": "@medusajs/types"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								387,
								396,
								401
							]
						}
					]
				},
				{
					"id": 366,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 377,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 378,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 379,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 380,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 381,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 382,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 367,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 368,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 369,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 370,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 341,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 371,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 347,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 366,
										"name": "IEventBusService",
										"package": "@medusajs/types"
									}
								}
							]
						},
						{
							"id": 372,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 373,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 374,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 375,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 341,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 376,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 347,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 366,
										"name": "IEventBusService",
										"package": "@medusajs/types"
									}
								}
							]
						},
						{
							"id": 383,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 384,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 385,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 366,
										"name": "IEventBusService",
										"package": "@medusajs/types"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 699,
										"name": "ITransactionBaseService.withTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 698,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								377,
								367,
								372,
								383
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 697,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 360,
					"name": "EmitData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 365,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 361,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 363,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 362,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 364,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										363,
										362,
										364
									]
								}
							]
						}
					}
				},
				{
					"id": 354,
					"name": "EventHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 359,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 355,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 356,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 357,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 358,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 341,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 346,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 342,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 343,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 344,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 345,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 347,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 348,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 349,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										349
									]
								}
							]
						}
					}
				},
				{
					"id": 350,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 351,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 352,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 353,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 341,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										352,
										353
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						386,
						366
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						360,
						354,
						341,
						347,
						350
					]
				}
			]
		},
		{
			"id": 406,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 407,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 408,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 409,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 410,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 411,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 412,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 413,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 414,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 415,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								408,
								412
							]
						}
					]
				},
				{
					"id": 415,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 416,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 417,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 418,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											417,
											418
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 419,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 420,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 424,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 422,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 423,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 421,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										424,
										422,
										423,
										421
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						407
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						415,
						419
					]
				}
			]
		},
		{
			"id": 425,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 426,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 442,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 443,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 444,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 445,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 446,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 467,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 468,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 469,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 470,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 452,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 453,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 454,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 455,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 456,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 457,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 458,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 459,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 460,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 461,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 471,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 472,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 473,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 474,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 479,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 480,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 481,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 482,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 427,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 428,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 429,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 430,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 447,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 448,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 449,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 450,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 451,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 435,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 436,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 437,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 438,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 431,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 432,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 433,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 434,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 462,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 463,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 464,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 465,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 466,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 439,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 440,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 441,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 475,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 476,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 477,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 478,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								442,
								467,
								452,
								457,
								471,
								479,
								427,
								447,
								435,
								431,
								462,
								439,
								475
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						426
					]
				}
			]
		},
		{
			"id": 483,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 494,
					"name": "MODULE_RESOURCE_TYPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 496,
							"name": "ISOLATED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "isolated"
							}
						},
						{
							"id": 495,
							"name": "SHARED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "shared"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								496,
								495
							]
						}
					]
				},
				{
					"id": 491,
					"name": "MODULE_SCOPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 493,
							"name": "EXTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "external"
							}
						},
						{
							"id": 492,
							"name": "INTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "internal"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								493,
								492
							]
						}
					]
				},
				{
					"id": 615,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 616,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 617,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 619,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 618,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 625,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 627,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 626,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 621,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 624,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 628,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 622,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 620,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 623,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												619,
												618,
												625,
												627,
												626,
												621,
												624,
												628,
												622,
												620,
												623
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								616
							]
						}
					]
				},
				{
					"id": 484,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 488,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 485,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 486,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 487,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 507,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 508,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 517,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 510,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 527,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 518,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 516,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 509,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 493,
										"name": "MODULE_SCOPE.EXTERNAL",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 511,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 512,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 515,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 513,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 514,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														515,
														513,
														514
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										517,
										510,
										518,
										516,
										509,
										511
									]
								}
							]
						}
					}
				},
				{
					"id": 497,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 498,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 505,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 502,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 527,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 501,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 506,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 504,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 503,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 500,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 494,
										"name": "MODULE_RESOURCE_TYPE",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 499,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 492,
										"name": "MODULE_SCOPE.INTERNAL",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										505,
										502,
										501,
										506,
										504,
										503,
										500,
										499
									]
								}
							]
						}
					}
				},
				{
					"id": 539,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 540,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 545,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 497,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 544,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 541,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 543,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 542,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										545,
										544,
										541,
										543,
										542
									]
								}
							]
						}
					}
				},
				{
					"id": 551,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 552,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 554,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 527,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 553,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 570,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												554,
												553
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 555,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 560,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 556,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 557,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 559,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 426,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 558,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "TOptions",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										557,
										559,
										558
									]
								}
							]
						}
					}
				},
				{
					"id": 489,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 490,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 489,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 546,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 1365,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 547,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 550,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 527,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 548,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 549,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												550,
												548,
												549
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 527,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 528,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 533,
									"name": "canOverride",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 538,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 497,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 507,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 531,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 537,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 536,
									"name": "isLegacy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 535,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 534,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 529,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 532,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 530,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										533,
										538,
										531,
										537,
										536,
										535,
										534,
										529,
										532,
										530
									]
								}
							]
						}
					}
				},
				{
					"id": 601,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 602,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 604,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 561,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 605,
									"name": "migrations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 606,
									"name": "models",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 484,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 603,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 484,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Constructor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 611,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 612,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 613,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 555,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 614,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 497,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 607,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 608,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 609,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 555,
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 610,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 497,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										604,
										605,
										606,
										603
									]
								},
								{
									"title": "Methods",
									"children": [
										611,
										607
									]
								}
							]
						}
					}
				},
				{
					"id": 570,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 866,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 571,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 587,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 588,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 591,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 592,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 594,
																					"name": "defaultValue",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 595,
																					"name": "nullable",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 596,
																					"name": "options",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Mikro-orm options for the column"
																							}
																						]
																					},
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Record"
																						},
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "unknown"
																							}
																						],
																						"name": "Record",
																						"package": "typescript"
																					}
																				},
																				{
																					"id": 593,
																					"name": "type",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "literal",
																								"value": "date"
																							},
																							{
																								"type": "literal",
																								"value": "time"
																							},
																							{
																								"type": "literal",
																								"value": "datetime"
																							},
																							{
																								"type": "literal",
																								"value": "bigint"
																							},
																							{
																								"type": "literal",
																								"value": "blob"
																							},
																							{
																								"type": "literal",
																								"value": "uint8array"
																							},
																							{
																								"type": "literal",
																								"value": "array"
																							},
																							{
																								"type": "literal",
																								"value": "enumArray"
																							},
																							{
																								"type": "literal",
																								"value": "enum"
																							},
																							{
																								"type": "literal",
																								"value": "json"
																							},
																							{
																								"type": "literal",
																								"value": "integer"
																							},
																							{
																								"type": "literal",
																								"value": "smallint"
																							},
																							{
																								"type": "literal",
																								"value": "tinyint"
																							},
																							{
																								"type": "literal",
																								"value": "mediumint"
																							},
																							{
																								"type": "literal",
																								"value": "float"
																							},
																							{
																								"type": "literal",
																								"value": "double"
																							},
																							{
																								"type": "literal",
																								"value": "boolean"
																							},
																							{
																								"type": "literal",
																								"value": "decimal"
																							},
																							{
																								"type": "literal",
																								"value": "string"
																							},
																							{
																								"type": "literal",
																								"value": "uuid"
																							},
																							{
																								"type": "literal",
																								"value": "text"
																							}
																						]
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						594,
																						595,
																						596,
																						593
																					]
																				}
																			]
																		}
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														},
														{
															"id": 590,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 589,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																591,
																590,
																589
															]
														}
													]
												}
											}
										},
										{
											"id": 574,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 575,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 577,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 578,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 580,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							},
																							{
																								"id": 579,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									580,
																									579
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 581,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 597,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															},
															{
																"id": 576,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	577,
																	581,
																	576
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 584,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 586,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 585,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 583,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 573,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 597,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 572,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 582,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												587,
												574,
												584,
												586,
												585,
												583,
												573,
												572,
												582
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 597,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 853,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 598,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 600,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 599,
											"name": "isInternalService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												600,
												599
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 561,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 562,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 563,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 564,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 555,
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 565,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 497,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 519,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 520,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 522,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 527,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 524,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 525,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 497,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 507,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 526,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 601,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 523,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 521,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										522,
										524,
										525,
										526,
										523,
										521
									]
								}
							]
						}
					}
				},
				{
					"id": 629,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 630,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 631,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 632,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 633,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignature": {
												"id": 634,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 635,
														"name": "key",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": 484,
													"typeArguments": [
														{
															"type": "reference",
															"target": 236,
															"name": "RepositoryService",
															"package": "@medusajs/types"
														}
													],
													"name": "Constructor",
													"package": "@medusajs/types"
												}
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										631,
										632
									]
								}
							]
						}
					}
				},
				{
					"id": 566,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 567,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 568,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 569,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											568,
											569
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 636,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 637,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 638,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 639,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 886,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 640,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						494,
						491
					]
				},
				{
					"title": "Interfaces",
					"children": [
						615
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						484,
						507,
						497,
						539,
						551,
						555,
						489,
						490,
						546,
						527,
						601,
						570,
						597,
						561,
						519,
						629,
						566,
						636
					]
				}
			]
		},
		{
			"id": 641,
			"name": "SalesChannelTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 646,
					"name": "SalesChannelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 648,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 647,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 649,
							"name": "is_disabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 651,
							"name": "locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 642,
									"name": "SalesChannelLocationDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 650,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								648,
								647,
								649,
								651,
								650
							]
						}
					]
				},
				{
					"id": 642,
					"name": "SalesChannelLocationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 644,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 645,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 646,
								"name": "SalesChannelDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 643,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								644,
								645,
								643
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						646,
						642
					]
				}
			]
		},
		{
			"id": 652,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 661,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 662,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 670,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 671,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 672,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 673,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 674,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 663,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 664,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 665,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 666,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 684,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 685,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 686,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 680,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 681,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 682,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 683,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 667,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 668,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 669,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 675,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 676,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 677,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 678,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 679,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 687,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 688,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 689,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 690,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 691,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 692,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 693,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 694,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 695,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								662
							]
						},
						{
							"title": "Methods",
							"children": [
								670,
								663,
								684,
								680,
								667,
								675,
								687,
								692
							]
						}
					]
				},
				{
					"id": 653,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 654,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 655,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 656,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 657,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 658,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 659,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Document transformer. Used to transform documents before they are added to the index."
															}
														]
													},
													"parameters": [
														{
															"id": 660,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										655,
										656,
										657
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						661
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						653
					]
				}
			]
		},
		{
			"id": 696,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 697,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 698,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 699,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 700,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 697,
										"name": "ITransactionBaseService",
										"package": "@medusajs/types"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								698
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 366,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						697
					]
				}
			]
		},
		{
			"id": 701,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 702,
					"name": "CartWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 706,
							"name": "CreateCartWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 714,
									"name": "billing_address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "AddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 713,
									"name": "billing_address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 710,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 708,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 716,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 717,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 709,
									"name": "items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 703,
											"name": "CreateLineItemInputDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 707,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 711,
									"name": "sales_channel_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 715,
									"name": "shipping_address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "AddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 712,
									"name": "shipping_address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										714,
										713,
										710,
										708,
										716,
										717,
										709,
										707,
										711,
										715,
										712
									]
								}
							]
						},
						{
							"id": 703,
							"name": "CreateLineItemInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 705,
									"name": "quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 704,
									"name": "variant_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										705,
										704
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								706,
								703
							]
						}
					]
				},
				{
					"id": 718,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 719,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 720,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 721,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 723,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 722,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														723,
														722
													]
												}
											]
										}
									}
								},
								{
									"id": 724,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 725,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 727,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 726,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														727,
														726
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										720,
										724
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								719
							]
						}
					]
				},
				{
					"id": 728,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 729,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 742,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 743,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 744,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															744
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 731,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 733,
									"name": "number_rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 735,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 736,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 737,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 738,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 740,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 741,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 739,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															737,
															738,
															740,
															741,
															739
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 734,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1252,
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 730,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 732,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1186,
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										742,
										731,
										733,
										735,
										734,
										730,
										732
									]
								}
							]
						},
						{
							"id": 748,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 749,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 750,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 753,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 754,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 751,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 752,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										749,
										750,
										753,
										754,
										751,
										752
									]
								}
							]
						},
						{
							"id": 745,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 746,
									"name": "rule_attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 747,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										746,
										747
									]
								}
							]
						},
						{
							"id": 766,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 769,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 772,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 768,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 774,
									"name": "number_rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 775,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1366,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 776,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1212,
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 771,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 773,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1186,
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 767,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 770,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										769,
										772,
										768,
										774,
										775,
										776,
										771,
										773,
										767,
										770
									]
								}
							]
						},
						{
							"id": 755,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 756,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 766,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										756
									]
								}
							]
						},
						{
							"id": 763,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 764,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 765,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										764,
										765
									]
								}
							]
						},
						{
							"id": 757,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 759,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 758,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										759,
										758
									]
								}
							]
						},
						{
							"id": 760,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 762,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 761,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										762,
										761
									]
								}
							]
						},
						{
							"id": 794,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 795,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										795
									]
								}
							]
						},
						{
							"id": 781,
							"name": "UpdatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 789,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 790,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 791,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															791
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 785,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 782,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 783,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 788,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 777,
											"name": "PriceListVariantPriceDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 787,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1212,
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 784,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 786,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1186,
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										789,
										785,
										782,
										783,
										788,
										787,
										784,
										786
									]
								}
							]
						},
						{
							"id": 792,
							"name": "UpdatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 793,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 781,
											"name": "UpdatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										793
									]
								}
							]
						},
						{
							"id": 777,
							"name": "PriceListVariantPriceDTO",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/workflow/product/update-products.ts",
											"qualifiedName": "UpdateProductVariantPricesInputDTO"
										},
										"name": "UpdateProductVariantPricesInputDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 778,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 780,
													"name": "price_set_id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 779,
													"name": "variant_id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														780,
														779
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								729,
								748,
								745,
								766,
								755,
								763,
								757,
								760,
								794,
								781,
								792
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								777
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						702,
						718,
						728
					]
				}
			]
		},
		{
			"id": 1186,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's status."
					}
				]
			},
			"children": [
				{
					"id": 1187,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled and its prices can be used."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 1188,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is disabled, meaning its prices can't be used yet."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						1187,
						1188
					]
				}
			]
		},
		{
			"id": 1189,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's type."
					}
				]
			},
			"children": [
				{
					"id": 1191,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's prices override original prices. This affects the calculated price of associated price sets."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "override"
					}
				},
				{
					"id": 1190,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's prices are used for a sale."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						1191,
						1190
					]
				}
			]
		},
		{
			"id": 1281,
			"name": "AddPriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 1282,
					"name": "priceListId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1283,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1204,
							"name": "PriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1282,
						1283
					]
				}
			]
		},
		{
			"id": 1084,
			"name": "AddPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to add to a price set."
					}
				]
			},
			"children": [
				{
					"id": 1085,
					"name": "priceSetId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1086,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add to the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1076,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1085,
						1086
					]
				}
			]
		},
		{
			"id": 1071,
			"name": "AddRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to add to a price set."
					}
				]
			},
			"children": [
				{
					"id": 1072,
					"name": "priceSetId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set to add the rules to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1073,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to a price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 1074,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1075,
										"name": "attribute",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The value of the rule's "
												},
												{
													"kind": "code",
													"text": "`rule_attribute`"
												},
												{
													"kind": "text",
													"text": " attribute."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1075
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1072,
						1073
					]
				}
			]
		},
		{
			"id": 1340,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 1356,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1357,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 1358,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TManager",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 1353,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1354,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 1355,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TManager",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 1359,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1360,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 1361,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 1362,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1363,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TOutput",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1341,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1342,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 1343,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 1344,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1345,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 1346,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 1347,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "TManager",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 1348,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1349,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1352,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 1350,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1351,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "TManager",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1352,
														1350,
														1351
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1356,
						1353,
						1359,
						1341
					]
				}
			],
			"typeParameters": [
				{
					"id": 1364,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 236,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 289,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 1050,
			"name": "CalculatedPriceSet",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The calculated price for a specific price set and context."
					}
				]
			},
			"children": [
				{
					"id": 1053,
					"name": "calculated_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the calculated price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1057,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the calculated price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1058,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1063,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1062,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1059,
									"name": "money_amount_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the money amount selected as the calculated price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1060,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1061,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1063,
										1062,
										1059,
										1060,
										1061
									]
								}
							]
						}
					}
				},
				{
					"id": 1056,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the calculated price, or null if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1051,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1052,
					"name": "is_calculated_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price is associated with a price list. During the calculation process, if no valid price list is found, \nthe calculated price is set to the original price, which doesn't belong to a price list. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1054,
					"name": "is_original_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price is associated with a price list. During the calculation process, if the price list of the calculated price is of type override, \nthe original price will be the same as the calculated price. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1055,
					"name": "original_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the original price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1064,
					"name": "original_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the original price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1065,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1070,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1069,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a money amount."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 1066,
									"name": "money_amount_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the money amount selected as the original price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1067,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1068,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1070,
										1069,
										1066,
										1067,
										1068
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1053,
						1057,
						1056,
						1051,
						1052,
						1054,
						1055,
						1064
					]
				}
			]
		},
		{
			"id": 1041,
			"name": "CalculatedPriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A calculated price set's data."
					}
				]
			},
			"children": [
				{
					"id": 1044,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated amount. It can possibly be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there's no price set up for the provided context."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1045,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the calculated price. It can possibly be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1042,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1047,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to apply. It's set if the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property is provided in the context. Otherwise, its value will be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1046,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to apply. It's set if the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property is provided in the context. Otherwise, its value will be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1049,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list, if any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1048,
					"name": "price_list_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the associated price list, if any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1043,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1044,
						1045,
						1042,
						1047,
						1046,
						1049,
						1048,
						1043
					]
				}
			]
		},
		{
			"id": 1295,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shared context object that is used to share resources between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 1299,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1298,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1297,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TManager",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 1300,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1296,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TManager",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1299,
						1298,
						1297,
						1300,
						1296
					]
				}
			],
			"typeParameters": [
				{
					"id": 1301,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 961,
			"name": "CreateCurrencyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A currency to create."
					}
				]
			},
			"children": [
				{
					"id": 962,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 965,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 963,
					"name": "symbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The symbol of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 964,
					"name": "symbol_native",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The symbol of the currecy in its native form. This is typically the symbol used when displaying a price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						962,
						965,
						963,
						964
					]
				}
			]
		},
		{
			"id": 983,
			"name": "CreateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The money amount to create."
					}
				]
			},
			"children": [
				{
					"id": 987,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 986,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 961,
						"name": "CreateCurrencyDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 985,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 984,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 989,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 988,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						987,
						986,
						985,
						984,
						989,
						988
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1076,
					"name": "CreatePricesDTO"
				},
				{
					"type": "reference",
					"target": 1204,
					"name": "PriceListPriceDTO"
				}
			]
		},
		{
			"id": 1213,
			"name": "CreatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list to create."
					}
				]
			},
			"children": [
				{
					"id": 1215,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1217,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1220,
					"name": "number_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with the price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1222,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices associated with the price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1204,
							"name": "PriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1221,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1212,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1216,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1218,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1186,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1214,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1219,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1189,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1215,
						1217,
						1220,
						1222,
						1221,
						1216,
						1218,
						1214,
						1219
					]
				}
			]
		},
		{
			"id": 1258,
			"name": "CreatePriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule to create."
					}
				]
			},
			"children": [
				{
					"id": 1262,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list or the details of an existing price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1192,
								"name": "PriceListDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1261,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1260,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type or the details of an existing rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1165,
								"name": "RuleTypeDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1259,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1262,
						1261,
						1260,
						1259
					]
				}
			]
		},
		{
			"id": 1273,
			"name": "CreatePriceListRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1276,
					"name": "price_list_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1252,
								"name": "PriceListRuleDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1275,
					"name": "price_list_rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1274,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1276,
						1275,
						1274
					]
				}
			]
		},
		{
			"id": 1212,
			"name": "CreatePriceListRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's rules to be set. Each key of the object is a rule type's "
					},
					{
						"kind": "code",
						"text": "`rule_attribute`"
					},
					{
						"kind": "text",
						"text": ", and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 1011,
			"name": "CreatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule to create."
					}
				]
			},
			"children": [
				{
					"id": 1012,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1013,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1017,
					"name": "price_set_money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1016,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1014,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1015,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1012,
						1013,
						1017,
						1016,
						1014,
						1015
					]
				}
			]
		},
		{
			"id": 1090,
			"name": "CreatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set to create."
					}
				]
			},
			"children": [
				{
					"id": 1094,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1076,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1091,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to associate with the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 1092,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1093,
										"name": "rule_attribute",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "the value of the rule's "
												},
												{
													"kind": "code",
													"text": "`rule_attribute`"
												},
												{
													"kind": "text",
													"text": " attribute."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1093
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1094,
						1091
					]
				}
			]
		},
		{
			"id": 1115,
			"name": "CreatePriceSetMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1119,
					"name": "money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 975,
								"name": "MoneyAmountDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1118,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1192,
								"name": "PriceListDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1117,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1037,
								"name": "PriceSetDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1116,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1119,
						1118,
						1117,
						1116
					]
				}
			]
		},
		{
			"id": 1131,
			"name": "CreatePriceSetMoneyAmountRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price set money amount rule to create."
					}
				]
			},
			"children": [
				{
					"id": 1132,
					"name": "price_set_money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1133,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1134,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price set money amount rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1132,
						1133,
						1134
					]
				}
			]
		},
		{
			"id": 1152,
			"name": "CreatePriceSetRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1153,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 1037,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1154,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 1165,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1153,
						1154
					]
				}
			]
		},
		{
			"id": 1076,
			"name": "CreatePricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to create part of a price set."
					}
				]
			},
			"children": [
				{
					"id": 1081,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 987,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 1080,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 961,
						"name": "CreateCurrencyDTO",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 986,
						"name": "CreateMoneyAmountDTO.currency"
					}
				},
				{
					"id": 1079,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 985,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 1078,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 984,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 1083,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 989,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 1082,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 988,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 1077,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are rule types' "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1081,
						1080,
						1079,
						1078,
						1083,
						1082,
						1077
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 983,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1170,
			"name": "CreateRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rule type to create."
					}
				]
			},
			"children": [
				{
					"id": 1174,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy the provided context. \nThe higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1171,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1172,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1173,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of the "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": " \nmethod to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1174,
						1171,
						1172,
						1173
					]
				}
			]
		},
		{
			"id": 956,
			"name": "CurrencyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A currency's data."
					}
				]
			},
			"children": [
				{
					"id": 957,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 960,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 958,
					"name": "symbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The symbol of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 959,
					"name": "symbol_native",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The symbol of the currecy in its native form. This is typically the symbol used when displaying a price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						957,
						960,
						958,
						959
					]
				}
			]
		},
		{
			"id": 971,
			"name": "FilterableCurrencyProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on a currency."
					}
				]
			},
			"children": [
				{
					"id": 973,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 971,
									"name": "FilterableCurrencyProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 971,
											"name": "FilterableCurrencyProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 974,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 971,
									"name": "FilterableCurrencyProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 971,
											"name": "FilterableCurrencyProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 972,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The codes to filter the currencies by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						973,
						974,
						972
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 971,
							"name": "FilterableCurrencyProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 996,
			"name": "FilterableMoneyAmountProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on a money amount."
					}
				]
			},
			"children": [
				{
					"id": 999,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 996,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 996,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1000,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 996,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 996,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 998,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 997,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						999,
						1000,
						998,
						997
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 996,
							"name": "FilterableMoneyAmountProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1231,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price lists."
					}
				]
			},
			"children": [
				{
					"id": 1237,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1231,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1231,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1238,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1231,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1231,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1234,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1232,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price lists by"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1236,
					"name": "number_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 1233,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1235,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1186,
							"name": "PriceListStatus",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1237,
						1238,
						1234,
						1232,
						1236,
						1233,
						1235
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1231,
							"name": "FilterablePriceListProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1239,
			"name": "FilterablePriceListRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price list rules."
					}
				]
			},
			"children": [
				{
					"id": 1244,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1239,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1239,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1245,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1239,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1239,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1240,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1243,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated price lists."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1242,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated rule types."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1241,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1244,
						1245,
						1240,
						1243,
						1242,
						1241
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1239,
							"name": "FilterablePriceListRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1246,
			"name": "FilterablePriceListRuleValueProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 1250,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1246,
									"name": "FilterablePriceListRuleValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1246,
											"name": "FilterablePriceListRuleValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1251,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1246,
									"name": "FilterablePriceListRuleValueProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1246,
											"name": "FilterablePriceListRuleValueProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1247,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1249,
					"name": "price_list_rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1248,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1250,
						1251,
						1247,
						1249,
						1248
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1246,
							"name": "FilterablePriceListRuleValueProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1026,
			"name": "FilterablePriceRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price rules."
					}
				]
			},
			"children": [
				{
					"id": 1031,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1026,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1026,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1032,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1026,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1026,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1027,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1028,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1029,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1030,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated rule type."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1031,
						1032,
						1027,
						1028,
						1029,
						1030
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1026,
							"name": "FilterablePriceRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1120,
			"name": "FilterablePriceSetMoneyAmountProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price set money amounts."
					}
				]
			},
			"children": [
				{
					"id": 1124,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1120,
									"name": "FilterablePriceSetMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1120,
											"name": "FilterablePriceSetMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1125,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1120,
									"name": "FilterablePriceSetMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1120,
											"name": "FilterablePriceSetMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1121,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amounts by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1123,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amount's associated price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1122,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amount's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1124,
						1125,
						1121,
						1123,
						1122
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1120,
							"name": "FilterablePriceSetMoneyAmountProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1140,
			"name": "FilterablePriceSetMoneyAmountRulesProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price set money amount rules."
					}
				]
			},
			"children": [
				{
					"id": 1145,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1140,
									"name": "FilterablePriceSetMoneyAmountRulesProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1140,
											"name": "FilterablePriceSetMoneyAmountRulesProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1146,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1140,
									"name": "FilterablePriceSetMoneyAmountRulesProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1140,
											"name": "FilterablePriceSetMoneyAmountRulesProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1141,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID to filter price set money amount rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1143,
					"name": "price_set_money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amount rule's associated price set money amount."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1142,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price set money amount rule's associated rule type."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1144,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter price set money amount rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1145,
						1146,
						1141,
						1143,
						1142,
						1144
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1140,
							"name": "FilterablePriceSetMoneyAmountRulesProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1097,
			"name": "FilterablePriceSetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price sets."
					}
				]
			},
			"children": [
				{
					"id": 1100,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1097,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1097,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1101,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1097,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1097,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1098,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price sets by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1099,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a price set's associated money amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 996,
						"name": "FilterableMoneyAmountProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1100,
						1101,
						1098,
						1099
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1097,
							"name": "FilterablePriceSetProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1159,
			"name": "FilterablePriceSetRuleTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 1163,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1159,
									"name": "FilterablePriceSetRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1159,
											"name": "FilterablePriceSetRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1164,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1159,
									"name": "FilterablePriceSetRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1159,
											"name": "FilterablePriceSetRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1160,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1162,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1161,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1163,
						1164,
						1160,
						1162,
						1161
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1159,
							"name": "FilterablePriceSetRuleTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1180,
			"name": "FilterableRuleTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on rule types."
					}
				]
			},
			"children": [
				{
					"id": 1184,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1180,
									"name": "FilterableRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1180,
											"name": "FilterableRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 218,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1185,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1180,
									"name": "FilterableRuleTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 217,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1180,
											"name": "FilterableRuleTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 219,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 1181,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1182,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1183,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attributes to filter rule types by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1184,
						1185,
						1181,
						1182,
						1183
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 217,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1180,
							"name": "FilterableRuleTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 919,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 920,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 921,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 570,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 932,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 933,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 934,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 935,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 936,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1295,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 942,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 943,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 944,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 945,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1295,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 937,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 938,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 939,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 940,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 941,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1295,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 922,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 923,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 924,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 925,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 48,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 926,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1295,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 927,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 928,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 929,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 930,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 48,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 931,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1295,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 951,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 952,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 953,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 954,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 335,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 955,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1295,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 946,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 947,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 948,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 949,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 332,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 950,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1295,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						920,
						932,
						942,
						937,
						922,
						927,
						951,
						946
					]
				}
			]
		},
		{
			"id": 1366,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1369,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1368,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1372,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1371,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1367,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1370,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1369,
						1368,
						1372,
						1371,
						1367,
						1370
					]
				}
			]
		},
		{
			"id": 880,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 881,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 882,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						881,
						882
					]
				}
			]
		},
		{
			"id": 883,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 884,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 885,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						884,
						885
					]
				}
			]
		},
		{
			"id": 866,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 868,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 863,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 863,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 879,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 875,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 876,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 878,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 853,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 877,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											878,
											877
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 869,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 870,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 872,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 871,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														872,
														871
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 873,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 874,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 853,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 867,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						868,
						879,
						875,
						869,
						873,
						874,
						867
					]
				}
			]
		},
		{
			"id": 863,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 865,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 864,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						865,
						864
					]
				}
			]
		},
		{
			"id": 975,
			"name": "MoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A money amount's data. A money amount represents a price."
					}
				]
			},
			"children": [
				{
					"id": 979,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 978,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The money amount's currency."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 956,
						"name": "CurrencyDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 977,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 976,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 981,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 980,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 982,
					"name": "price_set_money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the relation between the money amount and its associated price set."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1102,
						"name": "PriceSetMoneyAmountDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						979,
						978,
						977,
						976,
						981,
						980,
						982
					]
				}
			]
		},
		{
			"id": 1192,
			"name": "PriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price list's details."
					}
				]
			},
			"children": [
				{
					"id": 1197,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1193,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1200,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 975,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1198,
					"name": "number_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with this price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1203,
					"name": "price_list_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1252,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1199,
					"name": "price_set_money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1102,
							"name": "PriceSetMoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1201,
					"name": "rule_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule types."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1165,
							"name": "RuleTypeDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1202,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1252,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1195,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1196,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1186,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1194,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1197,
						1193,
						1200,
						1198,
						1203,
						1199,
						1201,
						1202,
						1195,
						1196,
						1194
					]
				}
			]
		},
		{
			"id": 1204,
			"name": "PriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 1209,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 987,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 1208,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 961,
						"name": "CreateCurrencyDTO",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 986,
						"name": "CreateMoneyAmountDTO.currency"
					}
				},
				{
					"id": 1207,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 985,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 1206,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 984,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 1211,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 989,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 1210,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 988,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 1205,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1209,
						1208,
						1207,
						1206,
						1211,
						1210,
						1205
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 983,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1252,
			"name": "PriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule's details."
					}
				]
			},
			"children": [
				{
					"id": 1253,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1256,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1192,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1257,
					"name": "price_list_rule_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1269,
							"name": "PriceListRuleValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1255,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1165,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1254,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1253,
						1256,
						1257,
						1255,
						1254
					]
				}
			]
		},
		{
			"id": 1269,
			"name": "PriceListRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule value's details."
					}
				]
			},
			"children": [
				{
					"id": 1270,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule value's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1272,
					"name": "price_list_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list rule."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1252,
						"name": "PriceListRuleDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1271,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1270,
						1272,
						1271
					]
				}
			]
		},
		{
			"id": 1001,
			"name": "PriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule's data."
					}
				]
			},
			"children": [
				{
					"id": 1002,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1010,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1004,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1037,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1003,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1009,
					"name": "price_set_money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1008,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1006,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1165,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1005,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1007,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1002,
						1010,
						1004,
						1003,
						1009,
						1008,
						1006,
						1005,
						1007
					]
				}
			]
		},
		{
			"id": 1037,
			"name": "PriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set's data."
					}
				]
			},
			"children": [
				{
					"id": 1038,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1039,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices that belong to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 975,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1040,
					"name": "rule_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule types applied on this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1165,
							"name": "RuleTypeDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1038,
						1039,
						1040
					]
				}
			]
		},
		{
			"id": 1102,
			"name": "PriceSetMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set money amount's data."
					}
				]
			},
			"children": [
				{
					"id": 1103,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1109,
					"name": "money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The money amount associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 975,
						"name": "MoneyAmountDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1106,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1192,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1108,
					"name": "price_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price rules associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1001,
							"name": "PriceRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1105,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set associated with the price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1037,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1107,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1104,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1103,
						1109,
						1106,
						1108,
						1105,
						1107,
						1104
					]
				}
			]
		},
		{
			"id": 1126,
			"name": "PriceSetMoneyAmountRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set money amount rule's data."
					}
				]
			},
			"children": [
				{
					"id": 1127,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1128,
					"name": "price_set_money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set money amount."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1102,
						"name": "PriceSetMoneyAmountDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1129,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated rule type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1165,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1130,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price set money amount rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1127,
						1128,
						1129,
						1130
					]
				}
			]
		},
		{
			"id": 1147,
			"name": "PriceSetRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1148,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1149,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 1037,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1150,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 1165,
						"name": "RuleTypeDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1151,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1148,
						1149,
						1150,
						1151
					]
				}
			]
		},
		{
			"id": 1033,
			"name": "PricingContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to calculate prices. For example, you can specify the currency code to calculate prices in."
					}
				]
			},
			"children": [
				{
					"id": 1034,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a number. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1034
					]
				}
			]
		},
		{
			"id": 1035,
			"name": "PricingFilters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on prices."
					}
				]
			},
			"children": [
				{
					"id": 1036,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter prices."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1036
					]
				}
			]
		},
		{
			"id": 1290,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1291,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1291
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 114,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 911,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 917,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 880,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 918,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 904,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 916,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 913,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 914,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 866,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 912,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 915,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 866,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						917,
						918,
						916,
						913,
						914,
						912,
						915
					]
				}
			]
		},
		{
			"id": 886,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 888,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 899,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 880,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 900,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 901,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 902,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 903,
										"name": "field",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 883,
										"name": "JoinerDirective",
										"package": "@medusajs/types"
									}
								}
							}
						}
					}
				},
				{
					"id": 889,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 890,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 893,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 880,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 894,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 895,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 896,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 897,
															"name": "field",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 883,
															"name": "JoinerDirective",
															"package": "@medusajs/types"
														}
													}
												}
											}
										}
									},
									{
										"id": 892,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 891,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											893,
											894,
											892,
											891
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 898,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 887,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						888,
						899,
						900,
						889,
						898,
						887
					]
				}
			]
		},
		{
			"id": 904,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignature": {
				"id": 905,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"parameters": [
					{
						"id": 906,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 907,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 909,
								"name": "args",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 880,
										"name": "JoinerArgument",
										"package": "@medusajs/types"
									}
								}
							},
							{
								"id": 910,
								"name": "expands",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "reference",
									"target": 904,
									"name": "RemoteNestedExpands",
									"package": "@medusajs/types"
								}
							},
							{
								"id": 908,
								"name": "fields",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									909,
									910,
									908
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 1287,
			"name": "RemovePriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to remove from a price list."
					}
				]
			},
			"children": [
				{
					"id": 1288,
					"name": "priceListId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to remove rules from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1289,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to remove from the price list. Each item being a rule type's "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1288,
						1289
					]
				}
			]
		},
		{
			"id": 1087,
			"name": "RemovePriceSetRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to remove from a price set."
					}
				]
			},
			"children": [
				{
					"id": 1088,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1089,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to remove. Each string is the "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": " of a rule to remove."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1088,
						1089
					]
				}
			]
		},
		{
			"id": 1165,
			"name": "RuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A rule type's data."
					}
				]
			},
			"children": [
				{
					"id": 1169,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy \nthe provided context. The higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1166,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1167,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1168,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of \nthe "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": " method to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1169,
						1166,
						1167,
						1168
					]
				}
			]
		},
		{
			"id": 1284,
			"name": "SetPriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to add to a price list."
					}
				]
			},
			"children": [
				{
					"id": 1285,
					"name": "priceListId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add rules to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1286,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price list. Each key of the object is a rule type's "
							},
							{
								"kind": "code",
								"text": "`rule_attribute`"
							},
							{
								"kind": "text",
								"text": ", and its value\nis the value(s) of the rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1285,
						1286
					]
				}
			]
		},
		{
			"id": 1292,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shared context object that is used to share resources between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 1294,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				},
				{
					"id": 1293,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1294,
						1293
					]
				}
			]
		},
		{
			"id": 966,
			"name": "UpdateCurrencyDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a currency. The "
					},
					{
						"kind": "code",
						"text": "`code`"
					},
					{
						"kind": "text",
						"text": " is used to identify which currency to update."
					}
				]
			},
			"children": [
				{
					"id": 967,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 970,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 968,
					"name": "symbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The symbol of the currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 969,
					"name": "symbol_native",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The symbol of the currecy in its native form. This is typically the symbol used when displaying a price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						967,
						970,
						968,
						969
					]
				}
			]
		},
		{
			"id": 990,
			"name": "UpdateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 993,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 992,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 991,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 995,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 994,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						993,
						992,
						991,
						995,
						994
					]
				}
			]
		},
		{
			"id": 1223,
			"name": "UpdatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a price list."
					}
				]
			},
			"children": [
				{
					"id": 1227,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1224,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1229,
					"name": "number_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with the price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1230,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1212,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1226,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1228,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1186,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1225,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1227,
						1224,
						1229,
						1230,
						1226,
						1228,
						1225
					]
				}
			]
		},
		{
			"id": 1263,
			"name": "UpdatePriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a price list rule."
					}
				]
			},
			"children": [
				{
					"id": 1264,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list rule to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1267,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1265,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price list to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1268,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type or the details of an existing rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1266,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type to be associated with the price list rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1264,
						1267,
						1265,
						1268,
						1266
					]
				}
			]
		},
		{
			"id": 1277,
			"name": "UpdatePriceListRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1278,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1280,
					"name": "price_list_rule_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1279,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1278,
						1280,
						1279
					]
				}
			]
		},
		{
			"id": 1018,
			"name": "UpdatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price rule. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 1019,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1025,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1020,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1024,
					"name": "price_set_money_amount_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1023,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1021,
					"name": "rule_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1022,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1019,
						1025,
						1020,
						1024,
						1023,
						1021,
						1022
					]
				}
			]
		},
		{
			"id": 1095,
			"name": "UpdatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price set. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price set to update."
					}
				]
			},
			"children": [
				{
					"id": 1096,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the price set to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1096
					]
				}
			]
		},
		{
			"id": 1110,
			"name": "UpdatePriceSetMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1111,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1114,
					"name": "money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 975,
						"name": "MoneyAmountDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1113,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1037,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1112,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1111,
						1114,
						1113,
						1112
					]
				}
			]
		},
		{
			"id": 1135,
			"name": "UpdatePriceSetMoneyAmountRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price set money amount rule. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 1136,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set money amount rule to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1137,
					"name": "price_set_money_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price set money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1138,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1139,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price set money amount rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1136,
						1137,
						1138,
						1139
					]
				}
			]
		},
		{
			"id": 1155,
			"name": "UpdatePriceSetRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1156,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1157,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1158,
					"name": "rule_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1156,
						1157,
						1158
					]
				}
			]
		},
		{
			"id": 1175,
			"name": "UpdateRuleTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a rule type. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price set to update."
					}
				]
			},
			"children": [
				{
					"id": 1179,
					"name": "default_priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the rule type. This is useful when calculating the price of a price set, and multiple rules satisfy the provided context. The higher the value, the higher the priority of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1176,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rule type to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1177,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The display name of the rule type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1178,
					"name": "rule_attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique name used to later identify the rule_attribute. For example, it can be used in the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " parameter of the "
							},
							{
								"kind": "code",
								"text": "`calculatePrices`"
							},
							{
								"kind": "text",
								"text": " method to specify a rule for calculating the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1179,
						1176,
						1177,
						1178
					]
				}
			]
		},
		{
			"id": 1,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 7,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 15,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 3,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 9,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 10,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 11,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 14,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4,
								5,
								8,
								6,
								7,
								13,
								15,
								3,
								12,
								9,
								10,
								11,
								14
							]
						}
					]
				}
			}
		},
		{
			"id": 796,
			"name": "CartDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 797,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 800,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 805,
							"name": "completed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 808,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 803,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 812,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 799,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 822,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 821,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 798,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 807,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 814,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 809,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 806,
							"name": "payment_authorized_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 804,
							"name": "payment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 813,
							"name": "raw_discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 820,
							"name": "refundable_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 817,
							"name": "refunded_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 802,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 810,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 801,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 815,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 811,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 819,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 816,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 818,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								800,
								805,
								808,
								803,
								812,
								799,
								822,
								821,
								798,
								807,
								814,
								809,
								806,
								804,
								813,
								820,
								817,
								802,
								810,
								801,
								815,
								811,
								819,
								816,
								818
							]
						}
					]
				}
			}
		},
		{
			"id": 841,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 842,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 843,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								843
							]
						}
					],
					"indexSignature": {
						"id": 844,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 845,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 1335,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1339,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1336,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignature": {
						"id": 1337,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 1338,
								"name": "k",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			}
		},
		{
			"id": 1375,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1376,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 827,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 828,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 832,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 830,
							"name": "promise",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 831,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 829,
							"name": "writeStream",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.PassThrough"
								},
								"name": "stream.PassThrough",
								"package": "@types/node",
								"qualifiedName": "internal.PassThrough"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								832,
								830,
								831,
								829
							]
						}
					],
					"indexSignature": {
						"id": 833,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 834,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 823,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 824,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 826,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 825,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								826,
								825
							]
						}
					]
				}
			}
		},
		{
			"id": 1381,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1382,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1310,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1383,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 1383,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1383,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 1383,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1384,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 1375,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 1385,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 835,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 836,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 837,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 838,
							"name": "isPrivate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								837,
								838
							]
						}
					],
					"indexSignature": {
						"id": 839,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 840,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 853,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 854,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 855,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 862,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 856,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 860,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 859,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 861,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 857,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 858,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								855,
								862,
								856,
								860,
								859,
								861,
								857,
								858
							]
						}
					]
				}
			}
		},
		{
			"id": 1365,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 507,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 497,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 1310,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1331,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1311,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1312,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1373,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1329,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1328,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1314,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1375,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1375,
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "T",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 1330,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1326,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1319,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1375,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1320,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1375,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1325,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1316,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1375,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1323,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1321,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1375,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1322,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1375,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1315,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1375,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1317,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1375,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1318,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1373,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1313,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1373,
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1327,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1324,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1312,
								1329,
								1328,
								1314,
								1330,
								1326,
								1319,
								1320,
								1325,
								1316,
								1323,
								1321,
								1322,
								1315,
								1317,
								1318,
								1313,
								1327,
								1324
							]
						}
					]
				}
			}
		},
		{
			"id": 1333,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1334,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 1333,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "key",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": -1,
												"name": "key",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "key",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 1332,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 1385,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1394,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "T",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 1386,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 1387,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									1387
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 1395,
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "PK",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 1388,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1389,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1389
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 1395,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "PK",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 1390,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1391,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1391
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 1395,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "PK",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 1392,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1393,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1393
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 1395,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "PK",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 1373,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1374,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "T",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 1377,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 211,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 1381,
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 1395,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1396,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "T",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": -1,
					"name": "T",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 1377,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1378,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1379,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 1380,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										1379
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1302,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1303,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1304,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1305,
							"name": "resave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1306,
							"name": "rolling",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1307,
							"name": "saveUninitialized",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1308,
							"name": "secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1309,
							"name": "ttl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1304,
								1305,
								1306,
								1307,
								1308,
								1309
							]
						}
					]
				}
			}
		},
		{
			"id": 846,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 847,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 849,
							"name": "ext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 850,
							"name": "isPrivate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 848,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								849,
								850,
								848
							]
						}
					],
					"indexSignature": {
						"id": 851,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 852,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				16,
				30,
				210,
				340,
				406,
				425,
				483,
				641,
				652,
				696,
				701
			]
		},
		{
			"title": "Enumerations",
			"children": [
				1186,
				1189
			]
		},
		{
			"title": "Interfaces",
			"children": [
				1281,
				1084,
				1071,
				1340,
				1050,
				1041,
				1295,
				961,
				983,
				1213,
				1258,
				1273,
				1212,
				1011,
				1090,
				1115,
				1131,
				1152,
				1076,
				1170,
				956,
				971,
				996,
				1231,
				1239,
				1246,
				1026,
				1120,
				1140,
				1097,
				1159,
				1180,
				919,
				1366,
				880,
				883,
				866,
				863,
				975,
				1192,
				1204,
				1252,
				1269,
				1001,
				1037,
				1102,
				1126,
				1147,
				1033,
				1035,
				1290,
				911,
				886,
				904,
				1287,
				1087,
				1165,
				1284,
				1292,
				966,
				990,
				1223,
				1263,
				1277,
				1018,
				1095,
				1110,
				1135,
				1155,
				1175
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1,
				796,
				841,
				1335,
				1375,
				827,
				823,
				1381,
				1383,
				835,
				853,
				1365,
				1310,
				1333,
				1332,
				1385,
				1373,
				1395,
				1377,
				1302,
				846
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/types/src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"2": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"3": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"4": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"5": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"6": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"7": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"8": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"9": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"10": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"11": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"12": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"13": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"14": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"15": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"16": {
			"sourceFileName": "../../../packages/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"17": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"18": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"19": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"20": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"21": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"22": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"23": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"24": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"25": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"26": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"27": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"28": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"29": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"30": {
			"sourceFileName": "../../../packages/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"31": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"32": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"33": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"34": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PartialPick"
		},
		"35": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"36": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"37": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"38": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"39": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"40": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"41": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"42": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"43": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"44": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"45": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"46": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "Writable"
		},
		"47": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"48": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"49": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"50": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"51": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"52": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"53": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"54": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"55": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"57": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"58": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"59": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "ExtendedFindConfig"
		},
		"60": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"61": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.select"
		},
		"62": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.relations"
		},
		"63": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.where"
		},
		"64": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"65": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.skip"
		},
		"66": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.take"
		},
		"67": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "TEntity"
		},
		"68": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "QuerySelector"
		},
		"69": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"70": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.q"
		},
		"71": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "TEntity"
		},
		"72": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "TreeQuerySelector"
		},
		"73": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"74": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.include_descendants_tree"
		},
		"75": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "TEntity"
		},
		"76": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "Selector"
		},
		"77": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "TEntity"
		},
		"78": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "TotalField"
		},
		"79": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions"
		},
		"80": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions.select"
		},
		"81": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions.where"
		},
		"82": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions.order"
		},
		"83": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions.skip"
		},
		"84": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions.take"
		},
		"85": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions.TModel"
		},
		"86": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "CustomFindOptions.InKeys"
		},
		"87": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"88": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"89": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"90": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"91": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"92": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"93": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"94": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.isList"
		},
		"95": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "TEntity"
		},
		"96": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"97": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"98": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"99": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"100": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"101": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"102": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"103": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"104": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"105": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"106": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"107": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"108": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"109": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"110": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.id"
		},
		"111": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.object"
		},
		"112": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"113": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"114": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"115": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"116": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"117": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"118": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"119": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"120": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"121": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"122": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"123": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"124": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"125": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"126": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"127": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"128": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"129": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"130": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"131": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"132": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"133": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload"
		},
		"134": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"135": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"136": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"137": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"138": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"139": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"140": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"141": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"142": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"143": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"144": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"145": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload"
		},
		"146": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.first_name"
		},
		"147": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.last_name"
		},
		"148": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.phone"
		},
		"149": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.metadata"
		},
		"150": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.company"
		},
		"151": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_1"
		},
		"152": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_2"
		},
		"153": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.city"
		},
		"154": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.country_code"
		},
		"155": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.province"
		},
		"156": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.postal_code"
		},
		"157": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams"
		},
		"158": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"159": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"160": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams"
		},
		"161": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"162": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"163": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"164": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"165": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"166": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"167": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"168": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"169": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"170": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"171": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_url"
		},
		"172": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_prefix"
		},
		"173": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_options"
		},
		"174": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.session_options"
		},
		"175": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwt_secret"
		},
		"176": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookie_secret"
		},
		"177": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_url"
		},
		"178": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_database"
		},
		"179": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_schema"
		},
		"180": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_logging"
		},
		"181": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_type"
		},
		"182": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.http_compression"
		},
		"183": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_extra"
		},
		"184": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"185": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"186": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"187": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"188": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.store_cors"
		},
		"189": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin_cors"
		},
		"190": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"191": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"192": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"193": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"194": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"195": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.plugins"
		},
		"196": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"197": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"198": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"199": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"200": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"201": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"202": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"203": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"204": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"205": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"206": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"207": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"208": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"209": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"210": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"211": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"212": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"213": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"215": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"216": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"217": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"218": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"219": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"220": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"221": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"222": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"223": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"224": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"225": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"226": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"227": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"228": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"229": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"230": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"231": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"232": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type"
		},
		"233": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"234": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"235": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"236": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"237": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"238": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"239": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"240": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"241": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"242": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"243": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"244": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"245": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"246": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"247": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"248": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"249": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"250": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"251": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"252": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"253": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"254": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"255": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"256": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"257": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"258": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"259": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"260": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"261": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"262": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"263": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"264": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"265": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"266": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"267": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"268": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"269": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"270": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"272": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"273": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"274": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"275": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"276": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"277": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"278": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"279": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"280": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"281": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"282": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"283": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"284": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"285": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"286": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"287": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"288": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"289": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"290": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"291": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"292": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"293": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"294": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"295": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"296": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"297": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"298": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"299": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"300": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"301": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"302": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"303": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"304": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"305": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"306": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "id"
		},
		"307": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"308": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"309": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"310": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"311": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"312": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"313": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"314": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"315": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"316": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"317": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"318": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"319": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"320": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"321": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"322": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"323": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"324": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"325": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"326": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"327": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"328": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"329": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"330": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"331": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"332": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"333": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"334": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"335": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"336": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"337": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"338": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "EntityDateColumns"
		},
		"339": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableEntityDateColumns"
		},
		"340": {
			"sourceFileName": "../../../packages/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"341": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"342": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"343": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"344": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"345": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"346": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"347": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"348": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"349": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"350": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"351": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"352": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"353": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"354": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EventHandler"
		},
		"355": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"356": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"357": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"358": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"359": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"360": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EmitData"
		},
		"361": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"362": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"363": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"364": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"365": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"366": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"367": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"368": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"369": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"370": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"371": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"372": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"373": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"374": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"375": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"376": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"377": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"378": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"379": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"380": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "event"
		},
		"381": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"382": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "options"
		},
		"383": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"384": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"385": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"386": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"387": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"388": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"389": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"390": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"391": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"392": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"393": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"394": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"395": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"396": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"397": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"398": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"399": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"400": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"401": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"402": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"403": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"404": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"405": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"406": {
			"sourceFileName": "../../../packages/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"407": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"408": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"409": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"410": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"411": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"412": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"413": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"414": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"415": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"416": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"417": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"418": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"419": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"420": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"421": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"422": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"423": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"424": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"425": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"426": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"427": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"428": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"429": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"430": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"431": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"432": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"433": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"434": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"435": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"436": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"437": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"438": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"439": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"440": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"441": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"442": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"443": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"444": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"445": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"446": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"447": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"448": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"449": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"450": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"451": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"452": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"453": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"454": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"455": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"456": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"457": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"458": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"459": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"460": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"461": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"462": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"463": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"464": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"465": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"466": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"467": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"468": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"469": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"470": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"471": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"472": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"473": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"474": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"475": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"476": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"477": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"478": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"479": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"480": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"481": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"482": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"483": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"484": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"485": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"486": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"487": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"488": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"489": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"490": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"491": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE"
		},
		"492": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"493": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"494": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"495": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"496": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"497": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"498": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"499": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"500": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"501": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"502": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"503": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"504": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"505": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"506": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"507": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"508": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"509": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"510": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"511": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"512": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"513": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"514": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"515": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"516": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"517": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"518": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"519": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"520": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"521": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"522": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"523": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"524": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"525": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"526": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"527": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"528": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"529": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"530": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"531": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"532": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"533": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.canOverride"
		},
		"534": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"535": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"536": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"537": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"538": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"539": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"540": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"541": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"542": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"543": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"544": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"545": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"546": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"547": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"548": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"549": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"550": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"551": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"552": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"553": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"554": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"555": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"556": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"557": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"558": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"559": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"560": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"561": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"562": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"563": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"564": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"565": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"566": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"567": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"568": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"569": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"570": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"571": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"572": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"573": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"574": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"575": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"576": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"577": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"578": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"579": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"580": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"581": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"582": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"583": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"584": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"585": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"586": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"587": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"588": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"589": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"590": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"591": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"592": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"593": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"594": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"595": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"596": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"597": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"598": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"599": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"600": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"601": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"602": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"603": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"604": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"605": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.migrations"
		},
		"606": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.models"
		},
		"607": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"608": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"609": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"610": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"611": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"612": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"613": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"614": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"615": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"616": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"617": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"618": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"619": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"620": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"621": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"622": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"623": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"624": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"625": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"626": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"627": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"628": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"629": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"630": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"631": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"632": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"633": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"634": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"636": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"637": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"638": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"639": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"640": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"641": {
			"sourceFileName": "../../../packages/types/src/sales-channel/index.ts",
			"qualifiedName": ""
		},
		"642": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO"
		},
		"643": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel_id"
		},
		"644": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.location_id"
		},
		"645": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel"
		},
		"646": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO"
		},
		"647": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.id"
		},
		"648": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.description"
		},
		"649": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.is_disabled"
		},
		"650": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.metadata"
		},
		"651": {
			"sourceFileName": "../../../packages/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.locations"
		},
		"652": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"653": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"654": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"655": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"656": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"657": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"658": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"659": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"660": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"661": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"662": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"663": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"664": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"665": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"666": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"667": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"668": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"669": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"670": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"671": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"672": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"673": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"674": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"675": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"676": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"677": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"678": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"679": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"680": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"681": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"682": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"683": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"684": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"685": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"686": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"687": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"688": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"689": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"690": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"691": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"692": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"693": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"694": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"695": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"696": {
			"sourceFileName": "../../../packages/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"697": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"698": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"699": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"700": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"701": {
			"sourceFileName": "../../../packages/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"702": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/index.ts",
			"qualifiedName": ""
		},
		"703": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateLineItemInputDTO"
		},
		"704": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateLineItemInputDTO.variant_id"
		},
		"705": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateLineItemInputDTO.quantity"
		},
		"706": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO"
		},
		"707": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.region_id"
		},
		"708": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.country_code"
		},
		"709": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.items"
		},
		"710": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.context"
		},
		"711": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.sales_channel_id"
		},
		"712": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address_id"
		},
		"713": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address_id"
		},
		"714": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address"
		},
		"715": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address"
		},
		"716": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.customer_id"
		},
		"717": {
			"sourceFileName": "../../../packages/types/src/workflow/cart/create-cart.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.email"
		},
		"718": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"719": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"720": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"721": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"722": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"723": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"724": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"725": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"726": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"727": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"728": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"729": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"730": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"731": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"732": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"733": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.number_rules"
		},
		"734": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"735": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"736": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"737": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"738": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"739": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"740": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"741": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"742": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"743": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"744": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"745": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"746": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_attribute"
		},
		"747": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"748": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"749": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"750": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"751": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"752": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"753": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"754": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"755": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"756": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"757": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"758": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"759": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"760": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"761": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"762": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"763": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"764": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"765": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"766": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"767": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"768": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"769": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"770": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"771": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"772": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"773": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"774": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.number_rules"
		},
		"775": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"776": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"777": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "PriceListVariantPriceDTO"
		},
		"778": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "__type"
		},
		"779": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "__type.variant_id"
		},
		"780": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "__type.price_set_id"
		},
		"781": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO"
		},
		"782": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.id"
		},
		"783": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.name"
		},
		"784": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.starts_at"
		},
		"785": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.ends_at"
		},
		"786": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.status"
		},
		"787": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.rules"
		},
		"788": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.prices"
		},
		"789": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowDTO.customer_groups"
		},
		"790": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "__type"
		},
		"791": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"792": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO"
		},
		"793": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/update-price-list.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.price_lists"
		},
		"794": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"795": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"796": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "CartDTO"
		},
		"797": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type"
		},
		"798": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.id"
		},
		"799": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.email"
		},
		"800": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.billing_address_id"
		},
		"801": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.shipping_address_id"
		},
		"802": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.region_id"
		},
		"803": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.customer_id"
		},
		"804": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.payment_id"
		},
		"805": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.completed_at"
		},
		"806": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.payment_authorized_at"
		},
		"807": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"808": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.context"
		},
		"809": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"810": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"811": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"812": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.discount_total"
		},
		"813": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.raw_discount_total"
		},
		"814": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"815": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"816": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.tax_total"
		},
		"817": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.refunded_total"
		},
		"818": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.total"
		},
		"819": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.subtotal"
		},
		"820": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.refundable_amount"
		},
		"821": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"822": {
			"sourceFileName": "../../../packages/types/src/cart/common.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"823": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"824": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"825": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"826": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"827": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"828": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"829": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"830": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"831": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"832": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"833": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"835": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"836": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"837": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"838": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"839": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"841": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"842": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"843": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"844": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"846": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"847": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"848": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"849": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"850": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"851": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"853": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"854": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"855": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"856": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"857": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"858": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"859": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"860": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"861": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"862": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"863": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"864": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"865": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"866": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"867": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"868": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"869": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"870": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"871": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"872": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"873": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"874": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"875": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"876": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"877": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"878": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"879": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"880": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"881": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"882": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"883": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"884": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"885": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"886": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"887": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"888": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"889": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"890": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"891": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"892": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"893": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"894": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"895": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"896": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"898": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"899": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"900": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"901": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"902": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"904": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"905": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"907": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"908": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"909": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"910": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"911": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"912": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"913": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"914": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"915": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"916": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"917": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"918": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"919": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule"
		},
		"920": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.__joinerConfig"
		},
		"921": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.__joinerConfig"
		},
		"922": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"923": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"924": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"925": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"926": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"927": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"928": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"929": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"930": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"931": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"932": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"933": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"934": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"935": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"936": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"937": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"938": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"939": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"940": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"941": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"942": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"943": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"944": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"945": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"946": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"947": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"948": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"949": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"950": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"951": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"952": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"953": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"954": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"955": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"956": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CurrencyDTO"
		},
		"957": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CurrencyDTO.code"
		},
		"958": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CurrencyDTO.symbol"
		},
		"959": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CurrencyDTO.symbol_native"
		},
		"960": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CurrencyDTO.name"
		},
		"961": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CreateCurrencyDTO"
		},
		"962": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CreateCurrencyDTO.code"
		},
		"963": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CreateCurrencyDTO.symbol"
		},
		"964": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CreateCurrencyDTO.symbol_native"
		},
		"965": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "CreateCurrencyDTO.name"
		},
		"966": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "UpdateCurrencyDTO"
		},
		"967": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "UpdateCurrencyDTO.code"
		},
		"968": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "UpdateCurrencyDTO.symbol"
		},
		"969": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "UpdateCurrencyDTO.symbol_native"
		},
		"970": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "UpdateCurrencyDTO.name"
		},
		"971": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "FilterableCurrencyProps"
		},
		"972": {
			"sourceFileName": "../../../packages/types/src/pricing/common/currency.ts",
			"qualifiedName": "FilterableCurrencyProps.code"
		},
		"973": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"974": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"975": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO"
		},
		"976": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.id"
		},
		"977": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.currency_code"
		},
		"978": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.currency"
		},
		"979": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.amount"
		},
		"980": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.min_quantity"
		},
		"981": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.max_quantity"
		},
		"982": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.price_set_money_amount"
		},
		"983": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO"
		},
		"984": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"985": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"986": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency"
		},
		"987": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"988": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"989": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"990": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO"
		},
		"991": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"992": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"993": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"994": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"995": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"996": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps"
		},
		"997": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.id"
		},
		"998": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.currency_code"
		},
		"999": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1000": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1001": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO"
		},
		"1002": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.id"
		},
		"1003": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set_id"
		},
		"1004": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set"
		},
		"1005": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.rule_type_id"
		},
		"1006": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.rule_type"
		},
		"1007": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.value"
		},
		"1008": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.priority"
		},
		"1009": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set_money_amount_id"
		},
		"1010": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_list_id"
		},
		"1011": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO"
		},
		"1012": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.id"
		},
		"1013": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_set_id"
		},
		"1014": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.rule_type_id"
		},
		"1015": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.value"
		},
		"1016": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.priority"
		},
		"1017": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_set_money_amount_id"
		},
		"1018": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO"
		},
		"1019": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.id"
		},
		"1020": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_set_id"
		},
		"1021": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.rule_type_id"
		},
		"1022": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.value"
		},
		"1023": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.priority"
		},
		"1024": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_set_money_amount_id"
		},
		"1025": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_list_id"
		},
		"1026": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps"
		},
		"1027": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.id"
		},
		"1028": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.name"
		},
		"1029": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.price_set_id"
		},
		"1030": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.rule_type_id"
		},
		"1031": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1032": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1033": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext"
		},
		"1034": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"1035": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters"
		},
		"1036": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters.id"
		},
		"1037": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO"
		},
		"1038": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.id"
		},
		"1039": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.money_amounts"
		},
		"1040": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.rule_types"
		},
		"1041": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO"
		},
		"1042": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.id"
		},
		"1043": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.price_set_id"
		},
		"1044": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.amount"
		},
		"1045": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.currency_code"
		},
		"1046": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.min_quantity"
		},
		"1047": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.max_quantity"
		},
		"1048": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.price_list_type"
		},
		"1049": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSetDTO.price_list_id"
		},
		"1050": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet"
		},
		"1051": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.id"
		},
		"1052": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_calculated_price_price_list"
		},
		"1053": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_amount"
		},
		"1054": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_original_price_price_list"
		},
		"1055": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_amount"
		},
		"1056": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.currency_code"
		},
		"1057": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_price"
		},
		"1058": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"1059": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.money_amount_id"
		},
		"1060": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"1061": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"1062": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"1063": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"1064": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_price"
		},
		"1065": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"1066": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.money_amount_id"
		},
		"1067": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"1068": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"1069": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"1070": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"1071": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddRulesDTO"
		},
		"1072": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddRulesDTO.priceSetId"
		},
		"1073": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddRulesDTO.rules"
		},
		"1074": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"1075": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.attribute"
		},
		"1076": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO"
		},
		"1077": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO.rules"
		},
		"1078": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"1079": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"1080": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency"
		},
		"1081": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"1082": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"1083": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"1084": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO"
		},
		"1085": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.priceSetId"
		},
		"1086": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.prices"
		},
		"1087": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RemovePriceSetRulesDTO"
		},
		"1088": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RemovePriceSetRulesDTO.id"
		},
		"1089": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "RemovePriceSetRulesDTO.rules"
		},
		"1090": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO"
		},
		"1091": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.rules"
		},
		"1092": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"1093": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.rule_attribute"
		},
		"1094": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.prices"
		},
		"1095": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO"
		},
		"1096": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.id"
		},
		"1097": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps"
		},
		"1098": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.id"
		},
		"1099": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.money_amounts"
		},
		"1100": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1101": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1102": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO"
		},
		"1103": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.id"
		},
		"1104": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.title"
		},
		"1105": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_set"
		},
		"1106": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_list"
		},
		"1107": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_set_id"
		},
		"1108": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.price_rules"
		},
		"1109": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "PriceSetMoneyAmountDTO.money_amount"
		},
		"1110": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO"
		},
		"1111": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.id"
		},
		"1112": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.title"
		},
		"1113": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.price_set"
		},
		"1114": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountDTO.money_amount"
		},
		"1115": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO"
		},
		"1116": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.title"
		},
		"1117": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.price_set"
		},
		"1118": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.price_list"
		},
		"1119": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountDTO.money_amount"
		},
		"1120": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps"
		},
		"1121": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps.id"
		},
		"1122": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps.price_set_id"
		},
		"1123": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountProps.price_list_id"
		},
		"1124": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1125": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1126": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "PriceSetMoneyAmountRulesDTO"
		},
		"1127": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "PriceSetMoneyAmountRulesDTO.id"
		},
		"1128": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "PriceSetMoneyAmountRulesDTO.price_set_money_amount"
		},
		"1129": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "PriceSetMoneyAmountRulesDTO.rule_type"
		},
		"1130": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "PriceSetMoneyAmountRulesDTO.value"
		},
		"1131": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountRulesDTO"
		},
		"1132": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountRulesDTO.price_set_money_amount"
		},
		"1133": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountRulesDTO.rule_type"
		},
		"1134": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "CreatePriceSetMoneyAmountRulesDTO.value"
		},
		"1135": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountRulesDTO"
		},
		"1136": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountRulesDTO.id"
		},
		"1137": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountRulesDTO.price_set_money_amount"
		},
		"1138": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountRulesDTO.rule_type"
		},
		"1139": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "UpdatePriceSetMoneyAmountRulesDTO.value"
		},
		"1140": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountRulesProps"
		},
		"1141": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountRulesProps.id"
		},
		"1142": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountRulesProps.rule_type_id"
		},
		"1143": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountRulesProps.price_set_money_amount_id"
		},
		"1144": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-money-amount-rules.ts",
			"qualifiedName": "FilterablePriceSetMoneyAmountRulesProps.value"
		},
		"1145": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1146": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1147": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO"
		},
		"1148": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.id"
		},
		"1149": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.price_set"
		},
		"1150": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.rule_type"
		},
		"1151": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "PriceSetRuleTypeDTO.value"
		},
		"1152": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "CreatePriceSetRuleTypeDTO"
		},
		"1153": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "CreatePriceSetRuleTypeDTO.price_set"
		},
		"1154": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "CreatePriceSetRuleTypeDTO.rule_type"
		},
		"1155": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO"
		},
		"1156": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO.id"
		},
		"1157": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO.price_set"
		},
		"1158": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "UpdatePriceSetRuleTypeDTO.rule_type"
		},
		"1159": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps"
		},
		"1160": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps.id"
		},
		"1161": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps.rule_type_id"
		},
		"1162": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-set-rule-type.ts",
			"qualifiedName": "FilterablePriceSetRuleTypeProps.price_set_id"
		},
		"1163": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1164": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1165": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO"
		},
		"1166": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.id"
		},
		"1167": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.name"
		},
		"1168": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.rule_attribute"
		},
		"1169": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "RuleTypeDTO.default_priority"
		},
		"1170": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO"
		},
		"1171": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.id"
		},
		"1172": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.name"
		},
		"1173": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.rule_attribute"
		},
		"1174": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "CreateRuleTypeDTO.default_priority"
		},
		"1175": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO"
		},
		"1176": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.id"
		},
		"1177": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.name"
		},
		"1178": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.rule_attribute"
		},
		"1179": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "UpdateRuleTypeDTO.default_priority"
		},
		"1180": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps"
		},
		"1181": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.id"
		},
		"1182": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.name"
		},
		"1183": {
			"sourceFileName": "../../../packages/types/src/pricing/common/rule-type.ts",
			"qualifiedName": "FilterableRuleTypeProps.rule_attribute"
		},
		"1184": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1185": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1186": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"1187": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"1188": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"1189": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"1190": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"1191": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"1192": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO"
		},
		"1193": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.id"
		},
		"1194": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.title"
		},
		"1195": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.starts_at"
		},
		"1196": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.status"
		},
		"1197": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.ends_at"
		},
		"1198": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.number_rules"
		},
		"1199": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.price_set_money_amounts"
		},
		"1200": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.money_amounts"
		},
		"1201": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rule_types"
		},
		"1202": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rules"
		},
		"1203": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.price_list_rules"
		},
		"1204": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListPriceDTO"
		},
		"1205": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListPriceDTO.price_set_id"
		},
		"1206": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"1207": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"1208": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency"
		},
		"1209": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"1210": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"1211": {
			"sourceFileName": "../../../packages/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"1212": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRules"
		},
		"1213": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"1214": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.title"
		},
		"1215": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.description"
		},
		"1216": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"1217": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"1218": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"1219": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.type"
		},
		"1220": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.number_rules"
		},
		"1221": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"1222": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"1223": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO"
		},
		"1224": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.id"
		},
		"1225": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.title"
		},
		"1226": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.starts_at"
		},
		"1227": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.ends_at"
		},
		"1228": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.status"
		},
		"1229": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.number_rules"
		},
		"1230": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.rules"
		},
		"1231": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"1232": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"1233": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.starts_at"
		},
		"1234": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.ends_at"
		},
		"1235": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"1236": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.number_rules"
		},
		"1237": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1238": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1239": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps"
		},
		"1240": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.id"
		},
		"1241": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.value"
		},
		"1242": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.rule_type"
		},
		"1243": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.price_list_id"
		},
		"1244": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1245": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1246": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps"
		},
		"1247": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps.id"
		},
		"1248": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps.value"
		},
		"1249": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleValueProps.price_list_rule_id"
		},
		"1250": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1251": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1252": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO"
		},
		"1253": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.id"
		},
		"1254": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.value"
		},
		"1255": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.rule_type"
		},
		"1256": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list"
		},
		"1257": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list_rule_values"
		},
		"1258": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"1259": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_type_id"
		},
		"1260": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_type"
		},
		"1261": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.price_list_id"
		},
		"1262": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.price_list"
		},
		"1263": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO"
		},
		"1264": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.id"
		},
		"1265": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.price_list_id"
		},
		"1266": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.rule_type_id"
		},
		"1267": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.price_list"
		},
		"1268": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleDTO.rule_type"
		},
		"1269": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO"
		},
		"1270": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.id"
		},
		"1271": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.value"
		},
		"1272": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleValueDTO.price_list_rule"
		},
		"1273": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO"
		},
		"1274": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO.value"
		},
		"1275": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO.price_list_rule_id"
		},
		"1276": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRuleValueDTO.price_list_rule"
		},
		"1277": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO"
		},
		"1278": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO.id"
		},
		"1279": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO.value"
		},
		"1280": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListRuleValueDTO.price_list_rule_id"
		},
		"1281": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO"
		},
		"1282": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.priceListId"
		},
		"1283": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.prices"
		},
		"1284": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO"
		},
		"1285": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.priceListId"
		},
		"1286": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.rules"
		},
		"1287": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO"
		},
		"1288": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.priceListId"
		},
		"1289": {
			"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.rules"
		},
		"1290": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"1291": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"1292": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"1293": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"1294": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"1295": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"1296": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"1297": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"1298": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"1299": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"1300": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"1301": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"1302": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"1303": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"1304": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"1305": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"1306": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"1307": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"1308": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"1309": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"1310": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"1311": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1312": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"1313": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"1314": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"1315": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"1316": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"1317": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"1318": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"1319": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"1320": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"1321": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"1322": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"1323": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"1324": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"1325": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"1326": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"1327": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"1328": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"1329": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"1330": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"1331": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1332": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"1333": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"1334": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1335": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"1336": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1337": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1339": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1340": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"1341": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"1342": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"1343": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1344": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"1345": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1346": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1347": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"1348": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"1349": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"1350": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"1351": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"1352": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"1353": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"1354": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"1355": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1356": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"1357": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"1358": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"1359": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"1360": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"1361": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"1362": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"1363": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"1364": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"1365": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"1366": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"1367": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"1368": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"1369": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"1370": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"1371": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"1372": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"1373": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"1374": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1375": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"1376": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1377": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"1378": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1379": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"1380": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"1381": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"1382": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1383": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"1384": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1385": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"1386": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1387": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"1388": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1389": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"1390": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1391": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"1392": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1393": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"1394": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1395": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"1396": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}